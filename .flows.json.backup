[{"id":"209313b8aacac5d0","type":"tab","label":"Subflow Manager","disabled":false,"info":"Flow to see all subflows in one place to manage documentation etc","env":[]},{"id":"fe5f43f9.82396","type":"tab","label":"System Updater","disabled":false,"info":"Generic Updater for various things i cba to split out into a seperate flow","env":[{"name":"SOURCE","value":"system","type":"str"},{"name":"UTIL","value":"system.util","type":"str"},{"name":"WORKPLS","value":"/config/.storage/core.entity_registry","type":"str"}]},{"id":"18c5eb19.0cae45","type":"tab","label":"Motion Lighting Controller","disabled":false,"info":"manage motion ligting for areas"},{"id":"157c7e47.982522","type":"tab","label":"Bedroom Updater","disabled":true,"info":""},{"id":"4d26cf31.78e22","type":"tab","label":"Belcave Stairs Updater","disabled":true,"info":""},{"id":"fdf692b.ea1847","type":"tab","label":"Foyer Updater","disabled":true,"info":""},{"id":"e50c41f0.a70c7","type":"tab","label":"Living Room Updater","disabled":true,"info":""},{"id":"371ea8374a4f4987","type":"tab","label":"Vestibule Updater","disabled":true,"info":"","env":[]},{"id":"6518ba14391e63a7","type":"tab","label":"Entryway Updater","disabled":true,"info":"","env":[]},{"id":"7f5fb06e40e6d248","type":"tab","label":"Climate Updater","disabled":true,"info":"Calciulates average temp/humidity for areas.","env":[{"name":"UTIL","value":"system.util","type":"str"}]},{"id":"83226b2a5875b142","type":"tab","label":"Occupancy Updater","disabled":true,"info":"","env":[]},{"id":"1f80867f.2f3f9a","type":"tab","label":"Motion Lighting Dev","disabled":true,"info":""},{"id":"62000abd.1eee34","type":"tab","label":"Scheduled Lighting Board","disabled":true,"info":"Lighting based on time/door status/Light Level"},{"id":"673489a3e7db6c2c","type":"tab","label":"Door/Contact Lighting Board","disabled":true,"info":"","env":[]},{"id":"3821ffdc.e3f2d","type":"tab","label":"Switch Timer","disabled":false,"info":""},{"id":"956a8048.b6a6","type":"tab","label":"Button Updater","disabled":false,"info":"Update button mappings"},{"id":"3761d774.6b7248","type":"tab","label":"Notifications","disabled":false,"info":"Notifications"},{"id":"5c1595c35d872cdd","type":"tab","label":"System Alerts","disabled":false,"info":"","env":[]},{"id":"567f1829.7116e8","type":"tab","label":"Security","disabled":false,"info":"Security stuff..."},{"id":"48471ba4dee7be2d","type":"tab","label":"Flow 1","disabled":true,"info":"","env":[]},{"id":"d40c7dae.38386","type":"tab","label":"Climate Control","disabled":true,"info":""},{"id":"5995cd0b0ac9fdaf","type":"tab","label":"Illuminance Monitor","disabled":false,"info":"","env":[]},{"id":"cd7a39bb5337c9b5","type":"tab","label":"Dusk-to-Dawn Lighting Board","disabled":false,"info":"","env":[]},{"id":"01db8fc3ac9e38ed","type":"tab","label":"Climate Control [TEST]","disabled":true,"info":"","env":[]},{"id":"724ce0a8.deedd","type":"tab","label":"Flow 2","disabled":true,"info":""},{"id":"ba1035298b32f5d8","type":"tab","label":"Battery Monitor","disabled":true,"info":"Monitors battery states of sensors/devices\r\nMay eventually create an alert/notification system or something","env":[]},{"id":"ca16e782.e2ed88","type":"tab","label":"Tinker","disabled":true,"info":""},{"id":"ac943ec51aa6c81e","type":"tab","label":"API Integrations","disabled":false,"info":"REST API endpoints","env":[]},{"id":"943af8ea.f8ddb8","type":"subflow","name":"Motion Lighting - Basic v0.1","info":"","category":"","in":[{"x":400,"y":260,"wires":[]}],"out":[],"env":[{"name":"motion_lighting_mode","type":"str","value":"TOGGLE"},{"name":"motion_lighting_zones","type":"str","value":""}],"meta":{},"color":"#DDAA99"},{"id":"bd62b682.b42b48","type":"subflow","name":"Motion Lighting - Advanced v1.0","info":"","category":"","in":[{"x":80,"y":340,"wires":[{"id":"b3c7b363.b8eb1"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"f6d0814a.aa629","type":"subflow","name":"Motion Lighting - Basic v1.1","info":"","category":"","in":[],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"6ffe6236.14e0bc","type":"subflow","name":"Motion Lighting - Advanced [DEV]","info":"","category":"","in":[{"x":40,"y":340,"wires":[{"id":"d0006d2e.8eafa"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"a775543a.4bfa58","type":"subflow","name":"Activate Sleep Mode","info":"","category":"","in":[{"x":20,"y":200,"wires":[{"id":"fce6d775.d8d678"},{"id":"1d5e5215a4312980"}]}],"out":[{"x":340,"y":260,"wires":[{"id":"1d5e5215a4312980","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"fac1a6ef.3f3b88","type":"subflow","name":"zha_event Message Filter","info":"","category":"","in":[{"x":20,"y":80,"wires":[{"id":"4eaedf8a.6547"}]}],"out":[{"x":660,"y":80,"wires":[{"id":"e262dbd8.e69cb8","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"ef2c4c87.13348","type":"subflow","name":"Activate Away Mode","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"935ff148.8e8d1"}]}],"out":[{"x":380,"y":80,"wires":[{"id":"935ff148.8e8d1","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"5c17ae8417803497","type":"subflow","name":"Global Context Mapper","info":"Maps entity state to global variable for automations\r\n\r\n\r\n### Inputs\r\n\r\n: payload (any)                 :  current entity state value\r\n: global_id (string)            :  Global Context identifier / Entity ID. \r\n: entities [OPTIONAL] (json)    :  Key/Value json mapping for input_select values (or anything else really)\r\n\r\n### Outputs\r\n\r\n1. Standard output\r\n: payload (any)         : global variable value\r\n: global_id (string)    : Global Context Variable identifier\r\n\r\n### Details\r\n\r\n`msg.payload` is used as the payload of the entity state.\r\n\r\n`msg.global_id` is used as the payload for the global context id. \r\n\r\nIf an Entity ID was provided, the entity type gets stripped from the resulting Global ID.\r\n\r\nFor example, Entity ID: light.`bedroom_light` becomes Global ID: `bedroom_light`\r\n\r\n`msg.entities` also takes a `default` key value pairing which is used when no other match is found.\r\n\r\nExisting paramters are unaffected, only `msg.payload` and `msg.global_id` are affected. \r\nHowever this may change in the future.\r\n\r\n### References\r\n\r\n - Author - SK\r\n - Current Version - 1.5","category":"","in":[{"x":-60,"y":80,"wires":[{"id":"525d918b5abc8b1f"}]}],"out":[{"x":1420,"y":60,"wires":[{"id":"d4d4a0610c74c3b0","port":0},{"id":"f0de75025c9049c4","port":0},{"id":"d01813745291ec33","port":0}]}],"env":[{"name":"GLOBAL_ID","type":"str","value":""}],"meta":{},"color":"#DDAA99","status":{"x":1420,"y":140,"wires":[{"id":"d4d4a0610c74c3b0","port":0},{"id":"f0de75025c9049c4","port":1},{"id":"d01813745291ec33","port":1}]}},{"id":"1671b0eb36e8a5c9","type":"subflow","name":"String Time Conversion Function","info":"","category":"","in":[{"x":-20,"y":80,"wires":[{"id":"c6ca34d9.3892c8"}]}],"out":[{"x":400,"y":80,"wires":[{"id":"c6ca34d9.3892c8","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":400,"y":20,"wires":[{"id":"c6ca34d9.3892c8","port":0}]}},{"id":"c4f2363dbcb3bd29","type":"subflow","name":"Scheduled Lighting","info":"","category":"","in":[{"x":-40,"y":200,"wires":[{"id":"f33de604f4c1d599"}]}],"out":[{"x":1520,"y":140,"wires":[{"id":"7c95a97b390dfd11","port":0},{"id":"de6da418b2da77f9","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"6afebbe9d3799590","type":"subflow","name":"Get Entities","info":"Inputs:\n\nmsg.area [str]\nmsg.type [str]\nmsg.key [str]\nmsg.exclude [str]\n\nOutputs:\n\nEntities [arr]","category":"","in":[{"x":40,"y":80,"wires":[{"id":"cf6ec62d58c04e17"}]}],"out":[{"x":540,"y":40,"wires":[{"id":"3f7f6db113588619","port":0},{"id":"6749a3028379acd4","port":0}]}],"env":[{"name":"UTIL","type":"env","value":"UTIL"}],"meta":{},"color":"#DDAA99","icon":"font-awesome/fa-search","status":{"x":540,"y":120,"wires":[{"id":"3f7f6db113588619","port":0},{"id":"6749a3028379acd4","port":1}]}},{"id":"01b24619b55abe60","type":"subflow","name":"Calculate Average State","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"77ea6385a1d16d10"},{"id":"e19cc999bab22522"}]}],"out":[{"x":380,"y":40,"wires":[{"id":"77ea6385a1d16d10","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":380,"y":120,"wires":[{"id":"77ea6385a1d16d10","port":1}]}},{"id":"14483421210c6f6b","type":"subflow","name":"Update Average Humidity","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"f8606cf7fa9afeaa"}]}],"out":[{"x":620,"y":80,"wires":[{"id":"9ad0a10f940ec92c","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"b0163a757372995f","type":"subflow","name":"Format Start/End Date Window","info":"Gets the time window in ISO format based on msg.start_date and msg.end_date, otherwise gets the past 24hrs.\r\n\r\n\r\n### Inputs\r\n`start_date` will always be processed before `days`. Also, `end_date` cannot be sent without `start_date` | `days`. \r\n\r\nHowever `start_date` | `days` can be sent without an `end_date` (defaults to the current datetime).\r\n\r\n: start_date (string|number)     :  Start date/timestamp for the period\r\n: end_date (string|number)       :  End date/timestamp for the period\r\n: days (number)                  :  End date/timestamp for the period\r\n\r\n### Outputs\r\n\r\n1. Standard output\r\n: start_date (string)   : the start date in ISO format\r\n: end_date (string)     : the end date in ISO format\r\n\r\n### Details\r\n`msg.payload` is used as the payload of the published dates.\r\nExisting paramters are unaffected, only `msg.payload.start_date` and `msg.payload.end_date` are affected.\r\n\r\n### References\r\n\r\n - Author - SK\r\n - Current Version - 1.0","category":"","in":[{"x":-40,"y":80,"wires":[{"id":"9899a860acf12987"}]}],"out":[{"x":420,"y":80,"wires":[{"id":"9899a860acf12987","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"c503fec7b99f2355","type":"subflow","name":"Calculate Mean state","info":"Calculates the average light level to try and get an idea of when artifical light is in use and sunset/sunrise.\r\n\r\n### Inputs\r\n\r\n: TBC (string)     :  TBC\r\n: TBC (string)       :  TBC\r\n\r\n### Outputs\r\n\r\n1. Standard output\r\n: TBC (string)   : TBC\r\n: TBC (string)     : TBC\r\n\r\n### Details\r\n\r\n`TBC` TBC\r\n\r\n### References\r\n\r\n - Author - SK","category":"","in":[{"x":40,"y":80,"wires":[{"id":"af17fcb370ae3754"}]}],"out":[{"x":360,"y":80,"wires":[{"id":"af17fcb370ae3754","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":360,"y":20,"wires":[{"id":"af17fcb370ae3754","port":0}]}},{"id":"218b018ab076dfbf","type":"subflow","name":"Calculate Percentage","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"32b2b183e325b9c7"}]}],"out":[{"x":380,"y":80,"wires":[{"id":"32b2b183e325b9c7","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":380,"y":20,"wires":[{"id":"32b2b183e325b9c7","port":0}]}},{"id":"94e56685e6cdc113","type":"subflow","name":"Calculate Average","info":"","category":"","in":[{"x":-20,"y":80,"wires":[{"id":"4df373d5ab42fe0d"}]}],"out":[{"x":400,"y":80,"wires":[{"id":"4df373d5ab42fe0d","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":400,"y":20,"wires":[{"id":"4df373d5ab42fe0d","port":0}]}},{"id":"2802501265df2123","type":"subflow","name":"Sunrise / Sunset","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"4ac5467cd4ac60fd"}]}],"out":[{"x":680,"y":180,"wires":[{"id":"1b2387c87e33e1b8","port":0}]},{"x":680,"y":180,"wires":[{"id":"1b2387c87e33e1b8","port":1}]}],"env":[],"meta":{},"color":"#DDAA99","outputLabels":["Sunrise","Sunset"],"icon":"node-red-node-suncalc/sun.png","status":{"x":640,"y":240,"wires":[{"id":"1b2387c87e33e1b8","port":2}]}},{"id":"f9586397.5973","type":"subflow","name":"Load Modules","info":"Useful utility functions used within various other functions\r\n### Functions\r\nLoaded into GlobalContext within the utils object , the environment variable\r\nENV_UTIL_OBJECT can be used to override the object name\r\n\r\n: round (number)     :  (value, precision)\r\n: TBC (string)       :  TBC\r\n\r\n### Outputs\r\n\r\n1. round\r\n: TBC (string)   : TBC\r\n: TBC (string)     : TBC\r\n\r\n### Details\r\n\r\n`TBC` TBC\r\n\r\n### References\r\n\r\n - Author - SK\r\n - Version - 1.0","category":"","in":[],"out":[],"env":[{"name":"MODULE_ID","type":"env","value":"MODULE_ID"}],"meta":{},"color":"#DDAA99","status":{"x":400,"y":40,"wires":[{"id":"4469c59cdb2428b0","port":0},{"id":"cdba6a1bd9ad79e5","port":0}]}},{"id":"886885a440f0f2a6","type":"subflow","name":"http response","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"ad3085040347cd43"},{"id":"ca033a37eb9cedd1"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99","inputLabels":["response object"],"icon":"font-awesome/fa-globe","status":{"x":380,"y":140,"wires":[{"id":"ca033a37eb9cedd1","port":0}]}},{"id":"e7f66014407acf38","type":"subflow","name":"Format Service Call","info":"","category":"","in":[{"x":20,"y":80,"wires":[{"id":"e58f4c00.51b6a"}]}],"out":[{"x":380,"y":80,"wires":[{"id":"e58f4c00.51b6a","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"ba939a5db2308e08","type":"subflow","name":"Activate Home Mode","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"2b492d55e4e3848d"}]}],"out":[{"x":420,"y":80,"wires":[{"id":"2b492d55e4e3848d","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"b6a890be694a7c3e","type":"subflow","name":"Load Area Registry","info":"","category":"","in":[],"out":[],"env":[{"name":"AREA_REGISTRY_PATH","type":"str","value":""}],"meta":{},"color":"#DDAA99","status":{"x":1040,"y":80,"wires":[{"id":"b1d0c0f0c86f2de2","port":0}]}},{"id":"bd6afb792041214f","type":"subflow","name":"Load Object File","info":"takes a msg.payload.path property","category":"","in":[{"x":40,"y":140,"wires":[{"id":"81d2e25bf7ee74d1"}]}],"out":[{"x":680,"y":60,"wires":[{"id":"576e7618aa1c1f3c","port":0}]}],"env":[{"name":"PATH","type":"str","value":""}],"meta":{},"color":"#DDAA99","status":{"x":680,"y":140,"wires":[{"id":"576e7618aa1c1f3c","port":1},{"id":"81d2e25bf7ee74d1","port":1},{"id":"825e840c9fccbb3e","port":0}]}},{"id":"20b25024f4366686","type":"subflow","name":"Event Poller","info":"","category":"","in":[{"x":40,"y":120,"wires":[{"id":"70a50ced4a3dc70b"}]}],"out":[{"x":800,"y":40,"wires":[{"id":"ec2364ce90addde6","port":0}]}],"env":[{"name":"POLL_RATE","type":"env","value":"POLL_RATE"},{"name":"POLL_RATE_MULTIPLIER","type":"num","value":"1"}],"meta":{},"color":"#DDAA99","status":{"x":520,"y":120,"wires":[{"id":"d8ca55012a5de042","port":1},{"id":"70a50ced4a3dc70b","port":1}]}},{"id":"d45c7673c797b311","type":"subflow","name":"Set Global Context","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"608f5fe6073b967a"}]}],"out":[{"x":340,"y":40,"wires":[{"id":"608f5fe6073b967a","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":340,"y":120,"wires":[{"id":"608f5fe6073b967a","port":0}]}},{"id":"a444bbb042f71f91","type":"subflow","name":"Calculate Occupied Areas","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"0f5e5e5bd173d16c"}]}],"out":[{"x":380,"y":40,"wires":[{"id":"0f5e5e5bd173d16c","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":380,"y":120,"wires":[{"id":"0f5e5e5bd173d16c","port":1}]}},{"id":"db47d8fece13615c","type":"subflow","name":"Occupancy State Updater","info":"","category":"","in":[{"x":20,"y":80,"wires":[{"id":"1d52c466c78f7745"}]}],"out":[{"x":380,"y":40,"wires":[{"id":"1d52c466c78f7745","port":0}]}],"env":[{"name":"OCCUPANCY_TIMEOUT_ENTITY_ID","type":"str","value":"input_number.occupancy_timeout"}],"meta":{},"color":"#DDAA99","status":{"x":380,"y":120,"wires":[{"id":"1d52c466c78f7745","port":1}]}},{"id":"decd1d62e4154436","type":"subflow","name":"Hue Dimmer Remote Generator","info":"","category":"","in":[{"x":60,"y":140,"wires":[{"id":"740d8e72d0258e8d"},{"id":"caf701139a9a04dd"}]}],"out":[{"x":680,"y":80,"wires":[{"id":"caf701139a9a04dd","port":0}]}],"env":[{"name":"CONFIG","type":"str","value":""},{"name":"DEVICE_ID","type":"str","value":""},{"name":"REMOTE_ID","type":"str","value":""},{"name":"ACTION_ON","type":"json","value":"{}"},{"name":"ACTION_UP","type":"str","value":"{}"},{"name":"ACTION_DOWN","type":"str","value":"{}"},{"name":"ACTION_OFF","type":"str","value":"{}"},{"name":"GLOBAL_ID","type":"env","value":"CONFIG"}],"meta":{},"color":"#DDAA99"},{"id":"46392764034e0891","type":"subflow","name":"Generate Device Remote Mapping","info":"","category":"","in":[{"x":20,"y":80,"wires":[{"id":"65aaa64d1be9436c"}]}],"out":[{"x":420,"y":80,"wires":[{"id":"65aaa64d1be9436c","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"a74d2a801b9c7437","type":"subflow","name":"Event Debouncer","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"bb4715b74ea40760"},{"id":"b41e8010d5de435b"},{"id":"d3fad62dc0a4b70c"},{"id":"e9655bbfaed05e78"},{"id":"789d47893fb9a4b6"}]}],"out":[{"x":500,"y":80,"wires":[{"id":"bb4715b74ea40760","port":0},{"id":"b41e8010d5de435b","port":0},{"id":"d3fad62dc0a4b70c","port":0},{"id":"e9655bbfaed05e78","port":0},{"id":"789d47893fb9a4b6","port":0}]}],"env":[{"name":"DEBOUNCE_TIME_MS","type":"str","value":""},{"name":"FILTER_ATTRIBUTES","type":"json","value":"[\"device_id\",\"command\"]"},{"name":"GLOBAL_ID","type":"str","value":""}],"meta":{},"color":"#DDAA99"},{"id":"60e070695dcd8459","type":"subflow","name":"Remote Generator","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"e696ca9c9d6c9adb"}]}],"out":[{"x":400,"y":40,"wires":[{"id":"e696ca9c9d6c9adb","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":400,"y":120,"wires":[{"id":"e696ca9c9d6c9adb","port":1}]}},{"id":"758ff705909ff236","type":"subflow","name":"Update Device Mapping","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"89a8b31d01b7a6d1"}]}],"out":[{"x":380,"y":80,"wires":[{"id":"89a8b31d01b7a6d1","port":0}]}],"env":[],"meta":{},"color":"#DDAA99"},{"id":"a2c7f948590ba62d","type":"subflow","name":"Map Array To Object By Key","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"78536c8ec5ab7842"}]}],"out":[{"x":400,"y":80,"wires":[{"id":"78536c8ec5ab7842","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":400,"y":160,"wires":[{"id":"78536c8ec5ab7842","port":1}]}},{"id":"ac18d08ecf3b428c","type":"subflow","name":"Occupancy Mode Updater","info":"","category":"","in":[{"x":0,"y":80,"wires":[{"id":"9b418cd91f2b0e34"},{"id":"82de18d878475171"}]}],"out":[{"x":400,"y":40,"wires":[{"id":"9b418cd91f2b0e34","port":0},{"id":"82de18d878475171","port":0}]}],"env":[{"name":"ENTITY_ID","type":"str","value":"input_select.occupancy_mode"}],"meta":{},"color":"#DDAA99","status":{"x":400,"y":120,"wires":[{"id":"9b418cd91f2b0e34","port":1},{"id":"82de18d878475171","port":1}]}},{"id":"352858f7d4f8c965","type":"subflow","name":"Event Poller (2)","info":"","category":"","in":[{"x":60,"y":160,"wires":[{"id":"e0397309e17beb08"}]}],"out":[{"x":840,"y":160,"wires":[{"id":"82d85f8b47e9292f","port":0},{"id":"e0397309e17beb08","port":1}]}],"env":[{"name":"POLL_RATE","type":"str","value":""}],"meta":{},"color":"#DDAA99","status":{"x":520,"y":220,"wires":[{"id":"e0397309e17beb08","port":2}]}},{"id":"d4d95936d311f239","type":"subflow","name":"On Deploy / Change","info":"","category":"","in":[],"out":[{"x":500,"y":40,"wires":[{"id":"a440ba7d0d85e617","port":0}]}],"env":[{"name":"PATH","type":"str","value":"\"\""}],"meta":{},"color":"#DDAA99","status":{"x":720,"y":120,"wires":[{"id":"ac9387e713ce0715","port":0}]}},{"id":"2e1553480c579f63","type":"subflow","name":"Load Registry Objects","info":"","category":"","in":[{"x":20,"y":640,"wires":[{"id":"3996fb557dbf8c0e"},{"id":"9798a6f4df86f7d9"}]}],"out":[{"x":1580,"y":540,"wires":[{"id":"38974f690d80b041","port":0}]}],"env":[{"name":"GLOBAL_ID","type":"str","value":"core"}],"meta":{},"color":"#DDAA99","status":{"x":1580,"y":700,"wires":[{"id":"222908029ced3859","port":0}]}},{"id":"416f3e9048b97ca4","type":"subflow","name":"Presence Updater","info":"","category":"","in":[{"x":40,"y":80,"wires":[{"id":"3a68e43ab36d25e9"}]}],"out":[{"x":380,"y":40,"wires":[{"id":"3a68e43ab36d25e9","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":380,"y":120,"wires":[{"id":"3a68e43ab36d25e9","port":1}]}},{"id":"a7ed881353992217","type":"subflow","name":"Wait For Connect","info":"","category":"","in":[{"x":40,"y":120,"wires":[{"id":"1042b76e40019466"},{"id":"86234a2687e886f7"},{"id":"3439324a028c5b9c"}]}],"out":[{"x":1120,"y":40,"wires":[{"id":"d741dbefd42198f3","port":0}]},{"x":1120,"y":260,"wires":[{"id":"86234a2687e886f7","port":0},{"id":"539d94557d2886db","port":0}]}],"env":[],"meta":{},"color":"#DDAA99","status":{"x":1120,"y":200,"wires":[{"id":"86234a2687e886f7","port":0},{"id":"539d94557d2886db","port":0}]}},{"id":"a5ba79dede304e04","type":"subflow","name":"Load FIle","info":"","category":"","in":[{"x":40,"y":120,"wires":[{"id":"6dbbf8ae26143cab"}]}],"out":[{"x":440,"y":40,"wires":[{"id":"397f503f1150c2cd","port":0}]},{"x":620,"y":120,"wires":[{"id":"4cc02f131764b437","port":0},{"id":"6dbbf8ae26143cab","port":1}]}],"env":[{"name":"FILE_PATH","type":"str","value":""}],"meta":{},"color":"#DDAA99","status":{"x":620,"y":120,"wires":[{"id":"4cc02f131764b437","port":0},{"id":"6dbbf8ae26143cab","port":1}]}},{"id":"bcd1b01f6fd36df1","type":"subflow","name":"Check Path","info":"","category":"","in":[{"x":60,"y":80,"wires":[{"id":"ad7c503c87950fff"}]}],"out":[{"x":340,"y":40,"wires":[{"id":"ad7c503c87950fff","port":0}]},{"x":340,"y":120,"wires":[{"id":"ad7c503c87950fff","port":1}]}],"env":[{"name":"FILE_PATH","type":"str","value":""}],"meta":{},"color":"#DDAA99","status":{"x":340,"y":120,"wires":[{"id":"ad7c503c87950fff","port":1}]}},{"id":"fdedafb5b4235446","type":"group","z":"fe5f43f9.82396","name":"System Updater","style":{"stroke":"#6f2fa0","label":true,"color":"#9363b7"},"nodes":["f69b3ca.3ffe7c","ed0df5d5fb759f7b","2245a9a961f6a215","ce0d4144ed5fdf9a","604d000ae234f177","a674def38f0c9d37","42a722f8accaab32","38735b09c743921a","c4f79b533903359f","7d74bf6cd8138ece","84d482c883a4a867","a62fd577f023f24d","4681dd71c58fc10d","322fd830eeaede98","be38cec0fa8511b4","c07c846829c39f05","357a8217f1c72be0","ca4bbbd0e0a22499","f5fbc0ae3593a8de","035ae4d8c7805872","f770e29b55017dcd","92c8fa096f116137"],"x":34,"y":39,"w":1392,"h":262},{"id":"e96b993ff89bfa0d","type":"junction","z":"2e1553480c579f63","x":320,"y":540,"wires":[["ae318a02085126db","8f33ea59b682ec9a","174a98c9608b57a7"]]},{"id":"3edfacf2.b3d2c4","type":"server","name":"Home Assistant","addon":true},{"id":"5e6a682a.ce8468","type":"server","name":"Home Assistant","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":30,"areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"575e2eea.2cdb1","type":"server","name":"Home Assistant","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":30,"areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"0354bfc691ce6006","type":"ui_base","theme":{"name":"theme-custom","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#4B7930","value":"#4B7930","edited":false},"page-titlebar-backgroundColor":{"value":"#4B7930","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#6db046","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#4b7930","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"true","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"d1451bcf710beab7","type":"ui_group","name":"Home","tab":"d5be47519544008e","order":1,"disp":true,"width":"9","collapse":false,"className":""},{"id":"d5be47519544008e","type":"ui_tab","name":"Home tab","icon":"dashboard","disabled":false,"hidden":false},{"id":"f8b0cb7b51350715","type":"global-config","name":"global-config","env":[{"name":"POLL_RATE","value":"input_number.updater_frequency","type":"str"},{"name":"MODULE_ID","value":"system","type":"str"}]},{"id":"3a84aa63.4ca226","type":"server-state-changed","z":"943af8ea.f8ddb8","d":true,"name":"Belcave Motion Listener","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.belcave_motion","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"delay","propertyType":"msg","value":"belcave_motion_timeout","valueType":"global"}],"x":200,"y":280,"wires":[["dfdbe15d.913d3"],["ebf3a740.6724b8"]]},{"id":"8d8a6875.1ea558","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1490,"y":80,"wires":[["ec843cb7.28c5c"],[]]},{"id":"ec843cb7.28c5c","type":"api-call-service","z":"943af8ea.f8ddb8","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1640,"y":80,"wires":[[]]},{"id":"10c4cee4.849061","type":"api-call-service","z":"943af8ea.f8ddb8","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2470,"y":420,"wires":[[]]},{"id":"f8774608.771da8","type":"server-state-changed","z":"943af8ea.f8ddb8","d":true,"name":"Stairs Motion Detected","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.belcave_stairs_motion","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"delay","propertyType":"msg","value":"belcave_motion_timeout","valueType":"global"}],"x":200,"y":680,"wires":[["3f4097b0.a795a8"],["19c88484.af89db"]]},{"id":"3f4097b0.a795a8","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Stairs Light OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"light.belcave_stairs_light","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":450,"y":620,"wires":[["79b58d7d.8ac904"],[]]},{"id":"79b58d7d.8ac904","type":"api-call-service","z":"943af8ea.f8ddb8","name":"Stairs Light ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.belcave_stairs_light"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":660,"y":620,"wires":[[]]},{"id":"bef331f0.4d1d5","type":"api-call-service","z":"943af8ea.f8ddb8","name":"Stairs Light OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["light.belcave_stairs_light"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1080,"y":700,"wires":[[]]},{"id":"e7824e41.a1a03","type":"delay","z":"943af8ea.f8ddb8","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":1360,"y":420,"wires":[["bfae4fcd.fe8ba"]]},{"id":"bfae4fcd.fe8ba","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Motion Still Detected?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"switch.belcave_motion","state_type":"str","blockInputOverrides":false,"outputProperties":[],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1560,"y":420,"wires":[[],["c0024a07.03b808"]]},{"id":"19c88484.af89db","type":"delay","z":"943af8ea.f8ddb8","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":440,"y":700,"wires":[["5f68e3f2.bd8e2c"]]},{"id":"5f68e3f2.bd8e2c","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Motion Still Detected?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"switch.belcave_stairs_motion","state_type":"str","blockInputOverrides":false,"outputProperties":[],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":660,"y":700,"wires":[[],["5b33c7fa.542da8"]]},{"id":"f88cc77c.6079c8","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2310,"y":420,"wires":[["10c4cee4.849061"],[]]},{"id":"5b33c7fa.542da8","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Stairs Light ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"light.belcave_stairs_light","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":880,"y":700,"wires":[["bef331f0.4d1d5"],[]]},{"id":"10e9c967.9c4687","type":"change","z":"943af8ea.f8ddb8","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":440,"y":780,"wires":[[]]},{"id":"ebf3a740.6724b8","type":"switch","z":"943af8ea.f8ddb8","name":"GET Motion Lighting Mode","property":"belcave_motion_lighting_mode","propertyType":"global","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":500,"y":420,"wires":[["15083174.50ff9f"],["e7824e41.a1a03"],["6cd4788a.ced6f8"]]},{"id":"68db5728.19ae08","type":"switch","z":"943af8ea.f8ddb8","d":true,"name":"ALL Mode? (todo)","property":"belcave_motion_lighting_zone_all","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":950,"y":1080,"wires":[[],[]]},{"id":"7202e9e2.e2ad28","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":990,"y":480,"wires":[["b1611f57.bff8a"],[]]},{"id":"b1611f57.bff8a","type":"api-call-service","z":"943af8ea.f8ddb8","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"belcave_hybrid_lighting_zone_2","valueType":"global"}],"queue":"none","x":1150,"y":480,"wires":[["e7824e41.a1a03"]]},{"id":"c0024a07.03b808","type":"switch","z":"943af8ea.f8ddb8","name":"GET Motion Lighting Mode","property":"belcave_motion_lighting_mode","propertyType":"global","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":1800,"y":420,"wires":[["af14ad6f.0b02c"],["f88cc77c.6079c8"],["a1faff41.90e04"]]},{"id":"dfdbe15d.913d3","type":"switch","z":"943af8ea.f8ddb8","name":"GET Motion Lighting Mode","property":"belcave_motion_lighting_mode","propertyType":"global","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":500,"y":140,"wires":[["d419b81.d1b4448"],["49d3703e.d2d29"],["8906e92e.359468"]]},{"id":"8906e92e.359468","type":"change","z":"943af8ea.f8ddb8","name":"SET Hybrid Lighting Zone 1","rules":[{"t":"set","p":"payload","pt":"msg","to":"belcave_hybrid_lighting_zone_1","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":780,"y":200,"wires":[["49d3703e.d2d29"]]},{"id":"49d3703e.d2d29","type":"api-current-state","z":"943af8ea.f8ddb8","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1030,"y":140,"wires":[["447e530a.12d66c"],["447e530a.12d66c"]]},{"id":"447e530a.12d66c","type":"api-call-service","z":"943af8ea.f8ddb8","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1180,"y":140,"wires":[[]]},{"id":"6db7eac0.c7e674","type":"change","z":"943af8ea.f8ddb8","name":"SET Hybrid Lighting Zone 1","rules":[{"t":"set","p":"payload","pt":"msg","to":"belcave_hybrid_lighting_zone_1","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":1040,"wires":[[]]},{"id":"6cd4788a.ced6f8","type":"change","z":"943af8ea.f8ddb8","name":"SET Hybrid Lighting Zone 2","rules":[{"t":"set","p":"payload","pt":"msg","to":"belcave_hybrid_lighting_zone_2","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":780,"y":480,"wires":[["7202e9e2.e2ad28"]]},{"id":"a1faff41.90e04","type":"change","z":"943af8ea.f8ddb8","name":"SET Hybrid Lighting Zone 1","rules":[{"t":"set","p":"payload","pt":"msg","to":"belcave_hybrid_lighting_zone_1","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":2080,"y":480,"wires":[["f88cc77c.6079c8"]]},{"id":"d419b81.d1b4448","type":"change","z":"943af8ea.f8ddb8","name":"SET Motion Lighting Zone","rules":[{"t":"set","p":"payload","pt":"msg","to":"belcave_motion_lighting_zone","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":80,"wires":[["49d3703e.d2d29"]]},{"id":"15083174.50ff9f","type":"change","z":"943af8ea.f8ddb8","name":"SET Motion Lighting Zone","rules":[{"t":"set","p":"payload","pt":"msg","to":"belcave_motion_lighting_zone","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":360,"wires":[["e7824e41.a1a03"]]},{"id":"af14ad6f.0b02c","type":"change","z":"943af8ea.f8ddb8","name":"SET Motion Lighting Zone","rules":[{"t":"set","p":"payload","pt":"msg","to":"belcave_motion_lighting_zone","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":2070,"y":360,"wires":[["f88cc77c.6079c8"]]},{"id":"700c48b2.b52fc8","type":"api-current-state","z":"943af8ea.f8ddb8","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"includes","entity_id":"","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1530,"y":780,"wires":[[]]},{"id":"b3c7b363.b8eb1","type":"function","z":"bd62b682.b42b48","name":"Motion Lighting Mode Function (v1.1)","func":"// Motion Lighting Mode Function\n// Returns the zone entity id(s) for lights to turn on/off\n//\n// Required globals/helper entities\n// area_motion_lighting_mode > input_select.motion_lighting_mode_area\n// area_motion_lighting_zone > template_select.motion_lighting_target_area\n// area_motion_timeout > input_datetime.motion_lighting_timeout_area\n//\n// Mode specific globals/helper entities\n// area_hybrid_lighting_zone_1 > template_select.motion_lighting_target_area\n// area_hybrid_lighting_zone_2 > template_select.motion_lighting_hybrid_target_area\n\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\nconst TimeoutConverter = system.domain.models.TimeoutConverter;\n\nconst MOTION_LIGHTING_MODE_HELPER = (area_id) => `input_select.motion_lighting_mode_${area_id}`;\nconst MOTION_LIGHTING_TARGET_AREA_HELPER = (area_id) => `input_text.motion_lighting_target_${area_id}`;\nconst MOTION_LIGHTING_TIMEOUT_HELPER = (area_id) => `input_number.motion_lighting_timeout_${area_id}`;\nconst MOTION_LIGHTING_HYBRID_TARGET_AREA_1_HELPER = MOTION_LIGHTING_TARGET_AREA_HELPER;\nconst MOTION_LIGHTING_HYBRID_TARGET_AREA_2_HELPER = (area_id) => `input_text.motion_lighting_hybrid_target_${area_id}`;\n//\n//\n// Function Variables\nvar area                = msg.area;\nvar motion              = msg.motion;\nvar motionLightingMode  = global.get(`homeassistant.homeAssistant.states['${MOTION_LIGHTING_MODE_HELPER(area)}']`).state;\n//\nnewMsg      = getZone(area, motionLightingMode);\nnewMsg.mode = motionLightingMode;\nnode.warn(\"motion: \"+ motion);\nnode.warn(\"motionLightingMode: \"+ motionLightingMode);\n//\nif (motion == \"off\"){\n    newMsg.delay = TimeoutConverter.convertTimeoutString(global.get(`homeassistant.homeAssistant.states['${MOTION_LIGHTING_TIMEOUT_HELPER(area)}']`).state);\n    node.warn(\"newMsg:\");\n    node.warn(newMsg);\n    return [null, newMsg];\n}\n//node.warn(\"newMsg:\");\nnewMsg.reset = true;\n//node.warn(newMsg);\nreturn [newMsg, null];\n//END//\nfunction getZone (area, mode){\n    // Mode Switch\n    switch(mode) {\n      case \"TOGGLE\":\n        //\n        return motionZoneToggle(area);\n      case \"DIM\":\n        //\n        return motionZoneToggle(area);\n      case \"HYBRID\":\n        //\n        return motionZoneHybrid(area);\n      default:\n        // Not developed yet? Default to TOGGLE\n        return motionZoneToggle(area);\n    }\n}\n//\n// TOGGLE Lighting Function\n//\nfunction motionZoneToggle (area){\n  var motionLightingZone  = cleanString(global.get(`homeassistant.homeAssistant.states['${MOTION_LIGHTING_TARGET_AREA_HELPER(area)}']`).state);\n  //\n  node.warn(\"motionLightingZone: \"+ motionLightingZone);\n    node.warn(motionLightingZone);\n  //\n  newMsg        = { payload : motionLightingZone };\n  newMsg.area   = area;\n  newMsg.mode   = motionLightingMode;\n  return newMsg;\n}\n//\n// HYBRID Lighting Function\n//\nfunction motionZoneHybrid (area){\n  var hybridLightingZone1 = global.get(`homeassistant.homeAssistant.states['${MOTION_LIGHTING_HYBRID_TARGET_AREA_1_HELPER(area)}']`).state;\n  var hybridLightingZone2 = global.get(`homeassistant.homeAssistant.states['${MOTION_LIGHTING_HYBRID_TARGET_AREA_2_HELPER(area)}']`).state;\n  //\n  node.warn(\"hybridLightingZone1: \"+ hybridLightingZone1);\n  node.warn(\"hybridLightingZone2: \"+ hybridLightingZone2);\n  var payload = hybridLightingZone1 +','+ hybridLightingZone2;\n  node.warn(\"payload: \"+ payload);\n  //\n  newMsg            = { payload1 : hybridLightingZone1 };\n  newMsg.payload2   = hybridLightingZone2;\n  newMsg.area       = area;\n  return newMsg;\n}\n\nfunction cleanString(str) {\n    return str.replace(/^\"+|\"+$/g, '');\n}","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":340,"wires":[["fe1682a1.126f2"],["75881a21.fedf04"]]},{"id":"fe1682a1.126f2","type":"switch","z":"bd62b682.b42b48","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"},{"t":"eq","v":"OFF","vt":"str"}],"checkall":"false","repair":false,"outputs":4,"x":540,"y":220,"wires":[["4afe7b49.5a2094","ef5c3da0.652a8"],["4afe7b49.5a2094","4cb05fd2.d7e74"],["4afe7b49.5a2094","25d3950d.59799a","7554f838.f8b7b8"],[]]},{"id":"9b2499ae.4ff8d8","type":"delay","z":"bd62b682.b42b48","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1120,"y":440,"wires":[["cbb8f9cd.4035d8"]]},{"id":"75881a21.fedf04","type":"switch","z":"bd62b682.b42b48","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"},{"t":"eq","v":"OFF","vt":"str"}],"checkall":"false","repair":false,"outputs":4,"x":540,"y":440,"wires":[["d5d59c8c.33c37","9b2499ae.4ff8d8"],["d5d59c8c.33c37","5cd4b286.16dccc"],["d5d59c8c.33c37","9b2499ae.4ff8d8","e61f3a4.1a5b2c8"],[]]},{"id":"4afe7b49.5a2094","type":"debug","z":"bd62b682.b42b48","d":true,"name":"ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":510,"y":60,"wires":[]},{"id":"ef5c3da0.652a8","type":"api-current-state","z":"bd62b682.b42b48","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1050,"y":160,"wires":[["5bb33bc0.7cb044"],["23bec5e1.308aea"]]},{"id":"4cb05fd2.d7e74","type":"api-call-service","z":"bd62b682.b42b48","name":"Lights ON [BRIGHT]","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{\t    \"brightness_pct\": 100\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1080,"y":220,"wires":[["23bec5e1.308aea"]]},{"id":"25d3950d.59799a","type":"api-current-state","z":"bd62b682.b42b48","name":"Lights OFF 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1060,"y":280,"wires":[["96a19de4.13321"],["23bec5e1.308aea"]]},{"id":"7554f838.f8b7b8","type":"api-current-state","z":"bd62b682.b42b48","name":"Lights OFF 2?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload2}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1060,"y":340,"wires":[["c56446de.427fe8"],["23bec5e1.308aea"]]},{"id":"5869e012.84e11","type":"api-call-service","z":"bd62b682.b42b48","name":"Lights DIM","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{\t    \"brightness_pct\": 1\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":930,"y":400,"wires":[["9b2499ae.4ff8d8"]]},{"id":"cbb8f9cd.4035d8","type":"switch","z":"bd62b682.b42b48","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":1340,"y":440,"wires":[["69fb9a75.12d594"],["69fb9a75.12d594"],["ce0fdcc5.529c9"]]},{"id":"d5d59c8c.33c37","type":"debug","z":"bd62b682.b42b48","d":true,"name":"OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":530,"y":320,"wires":[]},{"id":"5cd4b286.16dccc","type":"api-current-state","z":"bd62b682.b42b48","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":770,"y":440,"wires":[["5869e012.84e11"],[]]},{"id":"5bb33bc0.7cb044","type":"api-call-service","z":"bd62b682.b42b48","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1220,"y":160,"wires":[["23bec5e1.308aea"]]},{"id":"3cc67c36.ad6a64","type":"debug","z":"bd62b682.b42b48","d":true,"name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1890,"y":240,"wires":[]},{"id":"96a19de4.13321","type":"api-call-service","z":"bd62b682.b42b48","name":"Lights ON 1","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload1}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1230,"y":280,"wires":[["23bec5e1.308aea"]]},{"id":"c56446de.427fe8","type":"api-call-service","z":"bd62b682.b42b48","name":"Lights ON 2","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload2}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1230,"y":340,"wires":[["23bec5e1.308aea"]]},{"id":"69fb9a75.12d594","type":"api-current-state","z":"bd62b682.b42b48","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1570,"y":420,"wires":[["9d230e76.1113"],[]]},{"id":"ce0fdcc5.529c9","type":"api-current-state","z":"bd62b682.b42b48","name":"Lights ON 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1570,"y":460,"wires":[["9d230e76.1113"],[]]},{"id":"9d230e76.1113","type":"api-call-service","z":"bd62b682.b42b48","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1750,"y":420,"wires":[["981d5796.cb3bc8"]]},{"id":"981d5796.cb3bc8","type":"switch","z":"bd62b682.b42b48","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":1960,"y":420,"wires":[[],[],["4088908c.2d0f1"]]},{"id":"4088908c.2d0f1","type":"delay","z":"bd62b682.b42b48","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":2140,"y":300,"wires":[["2fdf8fef.6469c"]]},{"id":"2fdf8fef.6469c","type":"api-current-state","z":"bd62b682.b42b48","name":"Lights ON 2?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload2}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2310,"y":300,"wires":[["fc4b0726.3c14b8"],[]]},{"id":"fc4b0726.3c14b8","type":"api-call-service","z":"bd62b682.b42b48","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2470,"y":300,"wires":[[]]},{"id":"23bec5e1.308aea","type":"change","z":"bd62b682.b42b48","name":"CLEAR Timeout(s)","rules":[{"t":"set","p":"reset","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":1690,"y":240,"wires":[["3cc67c36.ad6a64","9b2499ae.4ff8d8","4088908c.2d0f1"]],"info":"Better to do it at the end for lag"},{"id":"e61f3a4.1a5b2c8","type":"api-current-state","z":"bd62b682.b42b48","d":true,"name":"Lights ON 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":770,"y":480,"wires":[["8bbfcf4d.361ff"],[]]},{"id":"8bbfcf4d.361ff","type":"api-call-service","z":"bd62b682.b42b48","d":true,"name":"Lights OFF 1","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload1}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"belcave_hybrid_lighting_zone_2","valueType":"msg"}],"queue":"none","x":930,"y":480,"wires":[["9b2499ae.4ff8d8"]]},{"id":"22997b69.b098c4","type":"switch","z":"6ffe6236.14e0bc","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"false","repair":false,"outputs":3,"x":520,"y":220,"wires":[["ed05ac3f.4c805","b70adb14.66fe98"],["ed05ac3f.4c805","1c07868c.f5b189"],["ed05ac3f.4c805","e685a69b.2ad758","bdf367ac.350588"]]},{"id":"d0006d2e.8eafa","type":"function","z":"6ffe6236.14e0bc","name":"Motion Lighting Mode Function","func":"// Motion Lighting Mode Function\n// Returns the zone entity id(s) for lights to turn on/off\n//\n// Required globals/helper entities\n// area_motion_lighting_mode\n// area_motion_lighting_zone\n// area_motion_timeout\n//\n// Mode specific globals/helper entities\n// area_hybrid_lighting_zone_1\n// area_hybrid_lighting_zone_2\n//\n//\n// Function Variables\nvar area                = msg.area;\nvar motion              = msg.motion;\nvar motionLightingMode  = global.get(area +\"_motion_lighting_mode\");\n//\nnewMsg      = getZone(area, motionLightingMode);\nnewMsg.mode = motionLightingMode;\nnode.warn(\"motion: \"+ motion);\nnode.warn(\"motionLightingMode: \"+ motionLightingMode);\n//\nif (motion == \"off\"){\n    newMsg.delay = global.get(area +\"_motion_timeout\");\n    return [null, newMsg];\n}\nnode.warn(\"newMsg:\");\nnode.warn(newMsg);\nreturn [newMsg, null];\n//END//\nfunction getZone (area, mode){\n    // Mode Switch\n    switch(mode) {\n      case \"TOGGLE\",\"DIM\":\n        //\n        return motionZoneToggle(area);\n      case \"HYBRID\":\n        //\n        return motionZoneHybrid(area);\n      default:\n        // Not developed yet? Default to TOGGLE\n        return motionZoneToggle(area);\n    }\n}\n//\n// TOGGLE Lighting Function\n//\nfunction motionZoneToggle (area){\n  var motionLightingZone  = global.get(area +\"_motion_lighting_zone\");\n  //\n  node.warn(\"motionLightingZone: \"+ motionLightingZone);\n  //\n  newMsg        = { payload : motionLightingZone };\n  newMsg.area   = area;\n  newMsg.mode   = motionLightingMode;\n  return newMsg;\n}\n//\n// HYBRID Lighting Function\n//\nfunction motionZoneHybrid (area){\n  var hybridLightingZone1 = global.get(area +\"_hybrid_lighting_zone_1\");\n  var hybridLightingZone2 = global.get(area +\"_hybrid_lighting_zone_2\");\n  //\n  node.warn(\"hybridLightingZone1: \"+ hybridLightingZone1);\n  node.warn(\"hybridLightingZone2: \"+ hybridLightingZone2);\n  //var payload = hybridLightingZone1 +','+ hybridLightingZone2;\n  //node.warn(\"payload: \"+ payload);\n  //\n  newMsg            = { payload1 : hybridLightingZone1 };\n  newMsg.payload2   = hybridLightingZone2;\n  newMsg.area       = area;\n  return newMsg;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":340,"wires":[["22997b69.b098c4"],["1df3db62.b7a635"]]},{"id":"ed05ac3f.4c805","type":"debug","z":"6ffe6236.14e0bc","name":"ON","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":490,"y":60,"wires":[]},{"id":"b70adb14.66fe98","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1030,"y":160,"wires":[["6dbdd59c.0cb4cc"],[]]},{"id":"1c07868c.f5b189","type":"api-call-service","z":"6ffe6236.14e0bc","name":"Lights ON [BRIGHT]","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{\t    \"brightness_pct\": 100\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1060,"y":220,"wires":[["be54c99c.77a9e8"]]},{"id":"e685a69b.2ad758","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Lights OFF 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1040,"y":280,"wires":[["2e4cddfc.1d0362"],[]]},{"id":"bdf367ac.350588","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Lights OFF 2?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload2}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1040,"y":340,"wires":[["d95a8892.ac4f58"],[]]},{"id":"1df3db62.b7a635","type":"switch","z":"6ffe6236.14e0bc","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"false","repair":false,"outputs":3,"x":520,"y":440,"wires":[["ef297630.8f8848","963caf41.08591"],["ef297630.8f8848","933895d4.c7a778"],["ef297630.8f8848","764e9ce7.1efb04"]]},{"id":"6dbdd59c.0cb4cc","type":"api-call-service","z":"6ffe6236.14e0bc","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1200,"y":160,"wires":[["be54c99c.77a9e8"]]},{"id":"be54c99c.77a9e8","type":"debug","z":"6ffe6236.14e0bc","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1430,"y":240,"wires":[]},{"id":"2e4cddfc.1d0362","type":"api-call-service","z":"6ffe6236.14e0bc","name":"Lights ON 1","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload1}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1210,"y":280,"wires":[["be54c99c.77a9e8"]]},{"id":"d95a8892.ac4f58","type":"api-call-service","z":"6ffe6236.14e0bc","name":"Lights ON 2","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload2}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1210,"y":340,"wires":[["be54c99c.77a9e8"]]},{"id":"ef297630.8f8848","type":"debug","z":"6ffe6236.14e0bc","name":"OFF","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":510,"y":320,"wires":[]},{"id":"963caf41.08591","type":"delay","z":"6ffe6236.14e0bc","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":1120,"y":480,"wires":[["2e048743.0f3918"]]},{"id":"933895d4.c7a778","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":750,"y":480,"wires":[["8daf07f3.1c4238"],[]]},{"id":"764e9ce7.1efb04","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Lights ON 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":750,"y":540,"wires":[["2b559d0.838f564"],[]]},{"id":"2b559d0.838f564","type":"api-call-service","z":"6ffe6236.14e0bc","name":"Lights OFF 1","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload1}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"belcave_hybrid_lighting_zone_2","valueType":"msg"}],"queue":"none","x":910,"y":540,"wires":[["963caf41.08591"]]},{"id":"8daf07f3.1c4238","type":"api-call-service","z":"6ffe6236.14e0bc","name":"Lights DIM","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{\t    \"brightness_pct\": 1\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":910,"y":480,"wires":[["963caf41.08591"]]},{"id":"2e048743.0f3918","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Motion Still Detected?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"switch.{{area}}_motion","state_type":"str","blockInputOverrides":false,"outputProperties":[],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1320,"y":480,"wires":[[],["84933c4e.ed47"]]},{"id":"84933c4e.ed47","type":"switch","z":"6ffe6236.14e0bc","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":1600,"y":600,"wires":[["7620a3b9.f87b0c"],["7620a3b9.f87b0c"],["83afbee2.b500e"]]},{"id":"7620a3b9.f87b0c","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1850,"y":600,"wires":[["833e2aed.df5c78"],[]]},{"id":"83afbee2.b500e","type":"api-current-state","z":"6ffe6236.14e0bc","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload2}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1850,"y":660,"wires":[["833e2aed.df5c78"],[]]},{"id":"833e2aed.df5c78","type":"api-call-service","z":"6ffe6236.14e0bc","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2050,"y":600,"wires":[[]]},{"id":"965f6565.7069a8","type":"api-call-service","z":"a775543a.4bfa58","name":"Light ON (BLUE HIGH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights","light.tv_spotlight"],"data":"{\"color_name\":\"blue\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":470,"y":200,"wires":[["62e57c.12e06a84"]]},{"id":"dabd0268.fd619","type":"api-call-service","z":"a775543a.4bfa58","name":"Light ON (green)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights","light.tv_spotlight"],"data":"{\"color_name\":\"green\",\"brightness_pct\":97}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1210,"y":60,"wires":[["f1f3472d.9d1fe8"]]},{"id":"62e57c.12e06a84","type":"ha-wait-until","z":"a775543a.4bfa58","name":"WAIT till motion detected","server":"5e6a682a.ce8468","version":2,"outputs":2,"entityId":"switch.belcave_motion","entityIdFilterType":"exact","property":"state","comparator":"is","value":"on","valueType":"str","timeout":"3","timeoutType":"num","timeoutUnits":"seconds","checkCurrentState":true,"blockInputOverrides":true,"outputProperties":[],"x":710,"y":200,"wires":[["dabd0268.fd619"],["8a5a72f8.0cf63"]]},{"id":"f1f3472d.9d1fe8","type":"delay","z":"a775543a.4bfa58","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":1380,"y":60,"wires":[["2484ecbf.374434"]]},{"id":"8a5a72f8.0cf63","type":"api-call-service","z":"a775543a.4bfa58","name":"ACTIVATE SLEEP mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.belcave_occupancy_sleep"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1070,"y":200,"wires":[[]]},{"id":"2484ecbf.374434","type":"api-call-service","z":"a775543a.4bfa58","name":"Light ON (white)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights","light.tv_spotlight"],"data":"{\"color_name\":\"white\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1540,"y":60,"wires":[["296868dc.770308"]]},{"id":"296868dc.770308","type":"api-call-service","z":"a775543a.4bfa58","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights","light.tv_spotlight"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1710,"y":60,"wires":[[]]},{"id":"7ac90467.c0edfc","type":"delay","z":"a775543a.4bfa58","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":1260,"y":200,"wires":[["e349d761.edda48"]]},{"id":"e349d761.edda48","type":"api-call-service","z":"a775543a.4bfa58","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights","light.tv_spotlight"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1410,"y":200,"wires":[["175d531e.a43c6d"]]},{"id":"175d531e.a43c6d","type":"debug","z":"a775543a.4bfa58","name":"Zzz","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1550,"y":200,"wires":[]},{"id":"ac349b2.b871e68","type":"api-call-service","z":"a775543a.4bfa58","name":"Light ON (BLUE HIGH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights","light.tv_spotlight"],"data":"{\"color_name\":\"blue\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":590,"y":420,"wires":[[]]},{"id":"fce6d775.d8d678","type":"api-call-service","z":"a775543a.4bfa58","d":true,"name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["light.ikea_lamps"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":130,"y":200,"wires":[["5cb23f3c.67209"]]},{"id":"5cb23f3c.67209","type":"delay","z":"a775543a.4bfa58","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":280,"y":200,"wires":[["965f6565.7069a8"]]},{"id":"1d5e5215a4312980","type":"api-call-service","z":"a775543a.4bfa58","name":"ACTIVATE SLEEP mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.system_occupancy_sleep"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":170,"y":260,"wires":[[]]},{"id":"e262dbd8.e69cb8","type":"function","z":"fac1a6ef.3f3b88","name":"IKEA Smart Button Message Filter","func":"// Filters IKEA Smart Button zha_event messages\n//\nvar deviceID    = msg.topic;\nvar command     = getCommand(msg.command);\nvar service     = getService(deviceID, command);\n//\n//service.command = command\n//service.device = deviceID\nvar newMsg = {\n    device  : deviceID,\n    command  : command,\n    payload : service\n};\n//\nnode.warn('newMsg:');\nnode.warn(newMsg);\nreturn newMsg;\n//\n// Maps Device ID to Device Name, hardcoded for now...\n// \nfunction getService (deviceID, command){\n    //node.warn(\"getDevice\");\n    var deviceList = \n    {\n      '06f405efcffb49f72c755a99c62a2e9c'  : global.get('ikea_smart_button_1_'+ command),\n      'fdf5c8b9cff53211f2fcf6909dc51d3e'  : global.get('ikea_smart_button_2_' + command)\n    };\n    //node.warn(deviceList[deviceID]);\n    return (deviceList[deviceID] || null);\n}\n//\n// Returns action type, will make generic in future to make it \n// easier for different buttons to share the same functions\n//\nfunction getCommand (command){\n    //node.warn(\"getCommand\");\n    var commandList = \n    {\n      'on'                  : 'single_press',\n      'move_with_on_off'    : 'single_press_hold_start',\n      'stop'                : 'single_press_hold_stop',\n      'check-in'            : 'check_in_dash',\n      'check_in'            : 'check_in_underscore'\n    };\n    //node.warn(commandList[command]);\n    return (commandList[command] || null);\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":80,"wires":[[]]},{"id":"4eaedf8a.6547","type":"delay","z":"fac1a6ef.3f3b88","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":true,"allowrate":false,"outputs":1,"x":170,"y":80,"wires":[["e262dbd8.e69cb8"]]},{"id":"935ff148.8e8d1","type":"api-call-service","z":"ef2c4c87.13348","name":"ACTIVATE AWAY mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.system_occupancy_away"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":80,"wires":[[]]},{"id":"a78b7f16a9f2200f","type":"function","z":"5c17ae8417803497","d":true,"name":"Generic Input Select Entity Mapper (v1.2)","func":"// Generic Input Select Entity Mapper\n// Maps input_select text value to entity_id for automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload : current input_select value\n// msg.global_id : Context Data global identifier / Entity ID\n// msg.entities : Key/Value json mapping for input_select\n//\n// -*- OUTPUTS -*-\n// msg.payload : value entity mapping\n// msg.global_id : Actual Context Data global identifier\n// ******************************************************************\n// Function Variables\nvar inputSelectStr      = msg.payload;\nvar inputSelectEntity   = getEntity(inputSelectStr);\nvar global_id           = getGlobalID(msg.global_id);\nif (inputSelectEntity != \"\") {\n    // Set global variable\n    setGlobalVariable(global_id, inputSelectEntity);\n    // Return details in new msg\n    newMsg = { payload: inputSelectEntity};\n    newMsg = { global_id: global_id};\n    return newMsg;\n} else {\n    // Error? Log\n    node.warn('Invalid/Missing Entity Mapping: '+ msg.entities);\n    return null\n}\n///////////////////////////////////\n//END\n///////////////////////////////////\n//\n// Entity Retrieval Function (v1.0)\n//\nfunction getEntity (entityStr){\n  var entities = msg.entities;\n  if (entities == null) {\n        return \"\";\n  }\n  return (entities[entityStr.toLowerCase()] || \"\");\n}\n//\n// Global ID Retrieval Function (v1.1)\n//\nfunction getGlobalID (global_id){\n    //Check if entity_id was passed\n    if (global_id != null && global_id.split(\".\")) {\n        global_id = global_id.split(\".\")[1];\n    } else {\n        global_id = global_id;\n    }\n    // Return global value\n    return global_id;\n}\n//\n// Global Variable Setter Function (v1.0)\n//\nfunction setGlobalVariable (global_id, value){\n    // Set global value\n    global.set(global_id, value);\n    node.warn('Global Variable ['+ global_id +'] set to '+ value);\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":280,"wires":[[]]},{"id":"ed44987a61686368","type":"function","z":"5c17ae8417803497","d":true,"name":"Generic Input Select Entity Mapper (v1.4)","func":"// Generic Input Select Entity Mapper\n// Maps input_select text value to entity_id for automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload : current input_select value\n// msg.global_id : Context Data global identifier / Entity ID\n// msg.entities : Key/Value json mapping for input_select\n//\n// -*- OUTPUTS -*-\n// msg.payload : value entity mapping\n// msg.global_id : Actual Context Data global identifier\n// ******************************************************************\n// Function Variables\nvar inputSelectStr      = msg.payload;\nvar inputSelectEntity   = getEntity(inputSelectStr);\n//node.warn('inputSelectEntity: '+ inputSelectEntity);\nvar global_id           = getGlobalID(msg.global_id);\nif (inputSelectEntity != null) {\n    // Set global variable\n    setGlobalVariable(global_id, inputSelectEntity);\n    // Return details in new msg\n    var newMsg = { payload: inputSelectEntity};\n    newMsg.global_id = global_id;\n    return newMsg;\n} else {\n    // Error? Log\n    node.warn('Invalid/Missing Entity Mapping: '+ inputSelectEntity + ' please ensure mapping is lowercase');\n    return null\n}\n///////////////////////////////////\n//END\n///////////////////////////////////\n//\n// Entity Retrieval Function (v1.0)\n//\nfunction getEntity (entityStr){\n  var entities = msg.entities;\n  if (msg.timeout) {\n      return msg.payload;\n  }\n  if (entities == null) {\n        return entities;\n  }\n  //node.warn('default');\n  //node.warn(entities[entityStr.toLowerCase()] || entities['default']);\n    return (entities[entityStr.toLowerCase()] || entities['default']);\n}\n//\n// Global ID Retrieval Function (v1.1)\n//\nfunction getGlobalID (global_id){\n    //Check if entity_id was passed\n    if (global_id != null && global_id.includes(\".\")) {\n        global_id = global_id.split(\".\")[1];\n    } else {\n        global_id = global_id;\n    }\n    // Return global value\n    return global_id;\n}\n//\n// Global Variable Setter Function (v1.0)\n//\nfunction setGlobalVariable (global_id, value){\n    // Set global value\n    global.set(global_id, value);\n    node.warn('Global Variable ['+ global_id +'] set to '+ value);\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":220,"wires":[[]]},{"id":"7c91755d1c80762d","type":"switch","z":"5c17ae8417803497","name":"Entity Type Switch","property":"global_id","propertyType":"msg","rules":[{"t":"cont","v":"timeout","vt":"str"},{"t":"cont","v":"frequency","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":3,"x":610,"y":80,"wires":[["3a05381ee4331d5f"],["3a05381ee4331d5f"],["d4d4a0610c74c3b0","f0de75025c9049c4","d01813745291ec33"]]},{"id":"3a05381ee4331d5f","type":"subflow:1671b0eb36e8a5c9","z":"5c17ae8417803497","name":"","x":870,"y":60,"wires":[["d4d4a0610c74c3b0","f0de75025c9049c4","d01813745291ec33"]]},{"id":"d4d4a0610c74c3b0","type":"function","z":"5c17ae8417803497","d":true,"name":"Global Context Entity Mapper (v1.5)","func":"// Global Context Entity Mapper (v1.5)\n// Maps entity state to global variable for automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nvar entityState = getStateMapping(msg.payload);\n//node.warn('inputSelectEntity: '+ inputSelectEntity);\nvar globalID = getGlobalID(msg.global_id);\nif (entityState != null && globalID) {\n    // Set global variable\n    setGlobalVariable(globalID, entityState);\n    // Return details in msg for further processing if needed\n    msg.payload = entityState;\n    msg.global_id = globalID;\n    // Consider writing another function to determine wheter to clear\n    // the msg object and what items to potentially keep etc.\n    return msg;\n} else {\n    // Error? Log, needs to be fleshed out with proper cause identified\n    node.warn('Invalid/Missing Entity Mapping: ' + msg.payload + ' please ensure mapping is lowercase');\n    return null;\n}\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\n/**\n* Entity State Mapping Retrieval Function (v1.1) *\n* @param {string} state\n*/\nfunction getStateMapping(state) {\n    var entityMapping = msg.entities;\n    // If timeout value flag is true, ignore mapping\n    if (msg.timeout) {\n        return msg.payload;\n    }\n    // Return state as is if no mapping provided\n    if (entityMapping == null) {\n        return state;\n    }\n    // Otherwise return corresponding mapping for state (lowercase) \n    // or default value if no map found, otherwise null\n    //node.warn('getStateMapping: ' + entities[entityStr.toLowerCase()] || entities['default']);\n    return (entityMapping[state.toLowerCase()] || entityMapping['default'] || null);\n}\n\n/**\n* Global ID Retrieval Function (v1.2) *\n* @param {string} global_id\n*/\nfunction getGlobalID(global_id) {\n    // If an entity_id was passed, remove entity type\n    if (global_id != null && global_id.includes(\".\")) {\n        global_id = global_id.split(\".\")[1];\n    }\n    // Return global ID\n    return global_id;\n}\n\n/**\n* Global Variable Setter Function (v1.0) *\n* @param {string} global_id\n* @param {string} value\n*/\nfunction setGlobalVariable(global_id, value) {\n    // Set global value\n    global.set(global_id, value);\n    node.warn('Global Variable [' + global_id + '] set to ' + value);\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":160,"wires":[[]]},{"id":"a5721d738561d2de","type":"function","z":"5c17ae8417803497","d":true,"name":"Global Context Entity Mapper (v1.5b)","func":"// Global Context Entity Mapper (v1.5)\n// Maps entity state to global variable for automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nvar utils = global.get(\"utils\");\nvar global_id = msg.global_id;\nvar entity_state = getStateMapping(msg.payload);\n\nif (msg.remove_prefix && utils.isEntityID(global_id)) {\n    global_id = global_id.split(\".\")[1];\n}\n\nif (entity_state != null && global_id) {\n    // Set global variable\n    setGlobalVariable(global_id, entity_state);\n    // Return details in msg for further processing if needed\n    msg.payload = entity_state;\n    msg.global_id = global_id;\n    // Consider writing another function to determine wheter to clear\n    // the msg object and what items to potentially keep etc.\n    return msg;\n} else {\n    // Error? Log, needs to be fleshed out with proper cause identified\n    node.warn('Invalid/Missing Entity Mapping: ' + msg.payload + ' please ensure mapping is lowercase');\n    return null;\n}\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\n/**\n* Entity State Mapping Retrieval Function (v1.1) *\n* @param {string} state\n*/\nfunction getStateMapping(state) {\n    var entityMapping = msg.entities;\n    // If timeout value flag is true, ignore mapping\n    if (msg.timeout) return msg.payload;\n    // Return state as is if no mapping provided\n    if (entityMapping == null) return state;\n    // Otherwise return corresponding mapping for state (lowercase) \n    // or default value if no map found, otherwise null\n    return (entityMapping[state.toLowerCase()] || entityMapping['default'] || null);\n}\n\n/**\n* Check if valid entity ID to retain legacy functionality\n* @param {string} global_id\n*/\nfunction stripDomain(global_id) {\n    if (msg.remove_prefix) {\n\n        // If an entity_id was passed, remove entity type\n        if (utils.isEntityID(global_id)) {\n            global_id = global_id.split(\".\")[1];\n        }\n        \n    }\n    \n    // Return global ID\n    return global_id;\n}\n\n/**\n* Global Variable Setter Function (v1.0) *\n* @param {string} global_id\n* @param {string} value\n*/\nfunction setGlobalVariable(global_id, value) {\n    // Set global value\n    global.set(global_id, value);\n    node.warn('Global Variable [' + global_id + '] set to ' + value);\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":340,"wires":[[]]},{"id":"c576d1611d4abedf","type":"function","z":"5c17ae8417803497","d":true,"name":"Global Context Entity Mapper (v1.6)","func":"// Global Context Entity Mapper (v1.6)\n// Maps entity state to global variable for automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\nnode.warn(\"WAG1\");\n// Return if no global_id\nif (!msg.global_id) {\n    node.warn(`Missing msg.global_id: ${msg.global_id}`);\n    return null;\n}\n\n// Return if no payload\nif (!msg.payload) {\n    node.warn(`Missing msg.payload: ${msg.payload}`);\n    return null;\n}\n\nvar entityState = getStateMapping(msg.payload);\n//node.warn('inputSelectEntity: '+ inputSelectEntity);\ntry {\n    var globalID = getGlobalID(msg.global_id);\n} catch (error) {\n    node.warn(`Error retrieving global ID: ${error.message}`);\n    return null;\n}\n\nif (entityState != null && globalID) {\n    // Set global variable\n    setGlobalVariable(globalID, entityState);\n    // Return details in msg for further processing if needed\n    msg.payload = entityState;\n    msg.global_id = globalID;\n    // Consider writing another function to determine wheter to clear\n    // the msg object and what items to potentially keep etc.\n    return msg;\n} else {\n    // Error? Log, needs to be fleshed out with proper cause identified\n    node.warn('Invalid/Missing Entity Mapping: ' + msg.payload + ' please ensure mapping is lowercase');\n    return null;\n}\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\n/**\n* Entity State Mapping Retrieval Function (v1.1) *\n* @param {string} state\n*/\nfunction getStateMapping(state) {\n    var entityMapping = msg.entities;\n    // If timeout value flag is true, ignore mapping\n    if (msg.timeout) {\n        return msg.payload;\n    }\n    // Return state as is if no mapping provided\n    if (entityMapping == null) {\n        return state;\n    }\n    // Otherwise return corresponding mapping for state (lowercase) \n    // or default value if no map found, otherwise null\n    //node.warn('getStateMapping: ' + entities[entityStr.toLowerCase()] || entities['default']);\n    return (entityMapping[state.toLowerCase()] || entityMapping['default'] || null);\n}\n\n/**\n * Global ID Retrieval Function (v1.2)\n * @param {string} global_id\n */\nfunction getGlobalID(global_id) {\n    try {\n        // If an entity_id was passed, remove entity type\n        if (utils.getEntity(global_id)) global_id = global_id.split(\".\")[1];\n\n        // Return global ID\n        return global_id;\n    } catch (error) {\n        // Handle any errors thrown by getEntity\n        return ;\n    }\n}\n\n\n/**\n* Global Variable Setter Function (v1.0) *\n* @param {string} global_id\n* @param {string} value\n*/\nfunction setGlobalVariable(global_id, value) {\n    // Set global value\n    global.set(global_id, value);\n    node.warn('Global Variable [' + global_id + '] set to ' + value);\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":400,"wires":[[]]},{"id":"f0de75025c9049c4","type":"function","z":"5c17ae8417803497","d":true,"name":"Global Context Entity Mapper (v1.69)","func":"// Global Context Mapper (v1.8)\n// Maps payload to global context object for use in automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current state\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global context value\n// ******************************************************************\n\n/*** START ***/\n\n//const utils = global.get(\"utils\");\n//const SOURCE_PATHS_HELPER = \"input_text.repository_paths\";\n\nlet utilsPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        const utils = global.get(env.get(\"UTIL\") || \"system.util\");\n        node.warn(env.get(\"UTIL\"));\n        //const STATES = global.get(\"homeassistant.homeAssistant.states\");\n        if (utils) {\n            resolve(utils);\n        } else {\n            reject(new Error(\"utils object not available\"));\n        }\n    }, 5); // 1000 milliseconds = 1 second\n});\n\nutilsPromise\n    .then(utils => {\n        // Proceed with your code using the 'utils' object\n\n        //const PATH_CONTEXT_ID = ;\n        //const PATH = global.get(utils[SOURCE_PATHS_HELPER].state);\n        //const utils = global.get(PATH.UTIL.OBJECT);\n        let status;\n        // Return if no global_id\n        if (!msg.global_id) {\n            status = `Missing msg.global_id: ${msg.global_id}`;\n            node.warn(status);\n            return [null, utils.status(status, { fill: \"red\" })];\n        }\n\n        // Return if no payload\n        if (!utils.exists(msg.payload)) {\n            status = `Missing msg.payload: ${msg.payload}`\n            node.warn(status);\n            return [null, utils.status(status, { fill: \"red\" })];\n        }\n        var entityState = getStateMapping(msg.payload);\n        //node.warn('inputSelectEntity: '+ inputSelectEntity);\n\n        getGlobalID(msg.global_id)\n            .then(global_id => {\n                // This code will execute when the promise is resolved\n\n                if (entityState != null && global_id) {\n                    // Set global variable\n                    setGlobalVariable(global_id, entityState);\n                    // Return details in msg for further processing if needed\n                    msg.payload = entityState;\n                    msg.global_id = global_id;\n                    // Consider writing another function to determine whether to clear\n                    // the msg object and what items to potentially keep etc.\n                    status = `[${global_id}] set to: ${entityState}`;\n                    node.send([msg, utils.status(status)]);\n                } else {\n                    //node.warn(entityState);\n                    //node.warn(msg.entities['default']);\n                    // Error? Log, needs to be fleshed out with proper cause identified\n                    status = 'Invalid/Missing Entity Mapping: ' + msg.payload + ' please ensure mapping is lowercase';\n                    node.warn(status);\n                    node.send([null, utils.status(msg, { fill: \"red\" })]);\n                }\n            })\n            .catch(error => {\n                // This code will execute when the promise is rejected\n                const status = `Error retrieving global ID: ${error.message}`;\n                node.warn(status);\n                node.send([null, utils.status(status, { fill: \"red\" })]);\n            });\n\n        /*** HELPER FUNCTIONS ***/\n\n        /**\n        * Entity State Mapping Retrieval Function (v1.1) *\n        * @param {string} state\n        */\n        function getStateMapping(state) {\n            var entityMapping = msg.entities;\n            // If timeout value flag is true, ignore mapping\n            if (msg.timeout) {\n                return msg.payload;\n            }\n            // Return state as is if no mapping provided\n            if (entityMapping == null) {\n                return state;\n            }\n            // Otherwise return corresponding mapping for state (lowercase) \n            // or default value if no map found, otherwise null\n            //node.warn('getStateMapping: ' + entities[entityStr.toLowerCase()] || entities['default']);\n            //return (entityMapping[state.toLowerCase()] || entityMapping['default'] || null);\n            return entityMapping[state.toLowerCase()] !== undefined ? entityMapping[state.toLowerCase()] :\n                entityMapping['default'] !== undefined ? entityMapping['default'] :\n                    null;\n\n        }\n\n        function getGlobalID(global_id) {\n            const status = `Waiting for entities object...`;\n            node.status({ fill: \"yellow\", shape: \"dot\", text: status });\n            node.send([null, utils.status(status, { fill: \"yellow\" })]);\n            return utils.getEntity(global_id)\n                .then(entity => {\n                    // If an entity_id was passed, remove entity type\n                    if (entity) global_id = global_id.split(\".\")[1];\n\n                    // Return global ID\n                    return global_id;\n                })\n                .catch(error => {\n                    // Handle any errors thrown by getEntity\n                    const status = `[ERROR]: ${error.message}`;\n                    node.warn(status);\n                    node.status({ fill: \"red\", shape: \"dot\", text: status });\n                    return null;\n                });\n        }\n\n        /**\n        * Global Variable Setter Function (v1.0) *\n        * @param {string} global_id\n        * @param {string} value\n        */\n        function setGlobalVariable(global_id, value) {\n            // Set global value\n            global.set(global_id, value);\n            const status = `Global Context [${global_id}] set to: ${value}`;;\n            //node.warn(status);\n            node.status(utils.status(status, { fill: \"green\" }).payload);\n        }\n\n    })\n    .catch(error => {\n        node.warn(\"[ERROR]: \" + error.message);\n    });\n\n/*** END ***/","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":540,"wires":[[],[]]},{"id":"28f9d89a929c929b","type":"change","z":"5c17ae8417803497","name":"Set global_id from env","rules":[{"t":"set","p":"global_id","pt":"msg","to":"GLOBAL_ID","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":380,"y":60,"wires":[["7c91755d1c80762d"]]},{"id":"525d918b5abc8b1f","type":"switch","z":"5c17ae8417803497","name":"env.GLOBAL_ID passed?","property":"GLOBAL_ID","propertyType":"env","rules":[{"t":"nempty"},{"t":"empty"}],"checkall":"true","repair":false,"outputs":2,"x":130,"y":80,"wires":[["28f9d89a929c929b"],["7c91755d1c80762d"]]},{"id":"d01813745291ec33","type":"function","z":"5c17ae8417803497","name":"Global Context Entity Mapper (v2)","func":"// Global Context Mapper (v2)\n// Maps payload to global context object for use in automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current state\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global context value\n// ******************************************************************\n\n/*** START ***/\n//const utils = global.get(env.get(\"UTIL\") || \"util\");\nconst utils = context.global[env.get(\"MODULE_ID\")].util.common;\n\nif (!utils) {\n    // Utils module not loaded\n}\n\nlet status;\n// Return if no global_id\nif (!msg.global_id) {\n    status = `Missing msg.global_id: ${msg.global_id}`;\n    node.warn(status);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n\n// Return if no payload\nif (!utils.exists(msg.payload)) {\n    status = `Missing msg.payload: ${msg.payload}`\n    node.warn(status);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\nvar state = getStateMapping(msg.payload);\n//node.warn('inputSelectEntity: '+ inputSelectEntity);\n\nif (!utils.exists(state)) {\n    // Error? Log, needs to be fleshed out with proper cause identified\n    status = `Invalid/Missing Entity State/Mapping: [${msg.payload}:${state}]. Please ensure mapping is lowercase.`;\n    node.warn(status);\n    return [null, utils.status(msg, { fill: \"red\" })];\n}\n\nconst Entities = context.global.system.domain.models.Entities;\nconst entity = Entities.getEntity(msg.global_id);\n\nif (entity) msg.global_id = msg.global_id.split(\".\")[1];\n\nglobal.set(msg.global_id, state);\n\nstatus = `[${msg.global_id}] set to: ${state}`;\nnode.status(utils.status(status, { fill: \"green\" }).payload);\n\n// Return details in msg for further processing if needed\nmsg.payload = state;\n\nreturn [msg, utils.status(status)];\n\n/*** END ***/\n\n\n/*** HELPER FUNCTIONS ***/\n\n/**\n* Entity State Mapping Retrieval Function (v1.1) *\n* @param {string} state\n*/\nfunction getStateMapping(state) {\n    var entityMapping = msg.entities;\n    // If timeout value flag is true, ignore mapping\n    if (msg.timeout) {\n        return state;\n    }\n    // Return state as is if no mapping provided\n    if (!entityMapping) {\n        return state;\n    }\n    // Otherwise return corresponding mapping for state (lowercase) \n    // or default value if no map found, otherwise null\n    //node.warn('getStateMapping: ' + entities[entityStr.toLowerCase()] || entities['default']);\n    //return (entityMapping[state.toLowerCase()] || entityMapping['default'] || null);\n    return entityMapping[state.toLowerCase()] !== undefined ? entityMapping[state.toLowerCase()] :\n        entityMapping['default'] !== undefined ? entityMapping['default'] :\n            null;\n\n}","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":100,"wires":[[],[]]},{"id":"0ef5f7b2825dd360","type":"function","z":"5c17ae8417803497","name":"Global Context Entity Mapper (v1.7)","func":"// Global Context Mapper (v1.7)\n// Maps payload to global context object for use in automations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current state\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global context value\n// ******************************************************************\n\n/*** START ***/\n\n//const utils = global.get(\"utils\");\n\nlet utilsPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        const utils = global.get(\"utils\");\n        if (utils) {\n            resolve(utils);\n        } else {\n            reject(new Error(\"utils object not available\"));\n        }\n    }, 1000); // 1000 milliseconds = 1 second\n});\n\nutilsPromise\n    .then(utils => {\n        // Proceed with your code using the 'utils' object\n\n        let status;\n        // Return if no global_id\n        if (!msg.global_id) {\n            status = `Missing msg.global_id: ${msg.global_id}`;\n            node.warn(status);\n            return [null, utils.status(status, { fill: \"red\" })];\n        }\n\n        // Return if no payload\n        if (!utils.exists(msg.payload)) {\n            status = `Missing msg.payload: ${msg.payload}`\n            node.warn(status);\n            return [null, utils.status(status, { fill: \"red\" })];\n        }\n        var entityState = getStateMapping(msg.payload);\n        //node.warn('inputSelectEntity: '+ inputSelectEntity);\n\n        getGlobalID(msg.global_id)\n            .then(global_id => {\n                // This code will execute when the promise is resolved\n\n                if (entityState != null && global_id) {\n                    // Set global variable\n                    setGlobalVariable(global_id, entityState);\n                    // Return details in msg for further processing if needed\n                    msg.payload = entityState;\n                    msg.global_id = global_id;\n                    // Consider writing another function to determine whether to clear\n                    // the msg object and what items to potentially keep etc.\n                    status = `[${global_id}] set to: ${entityState}`;\n                    node.send([msg, utils.status(status)]);\n                } else {\n                    node.warn(entityState);\n                    node.warn(msg.entities['default']);\n                    // Error? Log, needs to be fleshed out with proper cause identified\n                    status = 'Invalid/Missing Entity Mapping: ' + msg.payload + ' please ensure mapping is lowercase';\n                    node.warn(status);\n                    node.send([null, utils.status(msg, { fill: \"red\" })]);\n                }\n            })\n            .catch(error => {\n                // This code will execute when the promise is rejected\n                const status = `Error retrieving global ID: ${error.message}`;\n                node.warn(status);\n                node.send([null, utils.status(status, { fill: \"red\" })]);\n            });\n\n        /*** HELPER FUNCTIONS ***/\n\n        /**\n        * Entity State Mapping Retrieval Function (v1.1) *\n        * @param {string} state\n        */\n        function getStateMapping(state) {\n            var entityMapping = msg.entities;\n            // If timeout value flag is true, ignore mapping\n            if (msg.timeout) {\n                return msg.payload;\n            }\n            // Return state as is if no mapping provided\n            if (entityMapping == null) {\n                return state;\n            }\n            // Otherwise return corresponding mapping for state (lowercase) \n            // or default value if no map found, otherwise null\n            //node.warn('getStateMapping: ' + entities[entityStr.toLowerCase()] || entities['default']);\n            //return (entityMapping[state.toLowerCase()] || entityMapping['default'] || null);\n            return entityMapping[state.toLowerCase()] !== undefined ? entityMapping[state.toLowerCase()] :\n                entityMapping['default'] !== undefined ? entityMapping['default'] :\n                    null;\n\n        }\n\n        function getGlobalID(global_id) {\n            const status = `Waiting for entities object...`;\n            node.status({ fill: \"yellow\", shape: \"dot\", text: status });\n            node.send([null, utils.status(status, { fill: \"yellow\" })]);\n            return utils.getEntity(global_id)\n                .then(entity => {\n                    // If an entity_id was passed, remove entity type\n                    if (entity) global_id = global_id.split(\".\")[1];\n\n                    // Return global ID\n                    return global_id;\n                })\n                .catch(error => {\n                    // Handle any errors thrown by getEntity\n                    const status = `[ERROR]: ${error.message}`;\n                    node.warn(status);\n                    node.status({ fill: \"red\", shape: \"dot\", text: status });\n                    return null;\n                });\n        }\n\n        /**\n        * Global Variable Setter Function (v1.0) *\n        * @param {string} global_id\n        * @param {string} value\n        */\n        function setGlobalVariable(global_id, value) {\n            // Set global value\n            global.set(global_id, value);\n            const status = `Global Context [${global_id}] set to: ${value}`;;\n            //node.warn(status);\n            node.status(utils.status(status, { fill: \"green\" }).payload);\n        }\n\n    })\n    .catch(error => {\n        node.warn(\"[ERROR]: \" + error.message);\n    });\n\n/*** END ***/","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":500,"wires":[[],[]]},{"id":"c6ca34d9.3892c8","type":"function","z":"1671b0eb36e8a5c9","name":"String Time Conversion Function (v1.5)","func":"//Time Conversion Routine v1.3\n//This routine takes strings such as \"5 Minutes\" and converts into \n//a usable DT format (ms for now, might add more options later)\n//milliseconds conversion\n//Seconds | 1000\n//Minutes | 60000\n//\n// Function Variables\nvar formattedTimeout    = 0;\nvar timeoutStr      = msg.payload.toString().split(\" \");\n//node.warn(\"timeoutStr: \"+ timeoutStr);\nvar timeoutValue    = getValue(timeoutStr[0]);\n//node.warn(\"timeoutValue: \"+ timeoutValue);\nvar timeoutUnit     = getUnit(timeoutStr[1]);\n//node.warn(\"timeoutUnit: \"+ timeoutUnit);\n\n// Conversion\nswitch(timeoutUnit) {\n  case \"S\":\n    // Seconds\n    formattedTimeout = timeoutValue * 1000;\n    break;\n  case \"M\":\n    // Minutes\n    formattedTimeout = timeoutValue * 60000;\n    break;\n  case \"H\":\n    // Hours\n    formattedTimeout = timeoutValue * 3600000;\n    break;\n  case \"D\":\n    // Hours\n    formattedTimeout = timeoutValue * 86400000;\n    break;\n  default:\n    // (Low/Medium/High/\"\") defaulting to minutes\n    formattedTimeout = timeoutValue * 1000;\n}\n//node.warn(\"formattedTimeout: \"+ formattedTimeout);\nmsg.payload = formattedTimeout;\nmsg.timeout = true;\nreturn msg;\n\n// Unit Retrieval Function\nfunction getUnit (unit){\n    //node.warn(\"getUnit\");\n    if (unit == undefined){\n        return \"\";\n    }\n  var units = \n  {\n    'seconds'   : 'S',\n    'second'    : 'S',\n    'minutes'   : 'M',\n    'minute'    : 'M',\n    'hours'     : 'H',\n    'hour'      : 'H',\n    'days'      : 'D',\n    'day'       : 'D'\n  };\n  return (units[unit.toLowerCase()] || \"\");\n}\nfunction getValue (value){\n    //node.warn(\"getValue\");\n  if (parseInt(value)){\n    //node.warn(\"Integer value: \" + value);  \n    return parseInt(value)\n  } else {\n    // Likely a string value\n    //node.warn(\"String value: \" + value);\n    var values = \n    {\n      'low'     : '15',\n      'medium'  : '30',\n      'high'    : '60',\n    };\n    //node.warn(values[value.toLowerCase()]);\n    return (values[value.toLowerCase()] || \"\");\n  }\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":80,"wires":[[]]},{"id":"e1011d7cb4a81c2f","type":"comment","z":"1671b0eb36e8a5c9","name":"","info":"add ability to take a string in the form:\n00:00:00:00\n\nshould allow for more precise intervals\n\ncan check for correct format by:\n\n1. string length = 12\n2. split by : gives 4 arrays\n3. each element should be parseint\n4. no negative numbers (no -5:10:20:30 etc)\n","x":250,"y":180,"wires":[]},{"id":"f33de604f4c1d599","type":"switch","z":"c4f2363dbcb3bd29","name":"GET Scheduled Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"SCHEDULED","vt":"str"},{"t":"eq","v":"DUSK-TO-DAWN","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":150,"y":200,"wires":[["6eb9e218b56e780e"],["f82626a49a5e5896"]]},{"id":"f82626a49a5e5896","type":"debug","z":"c4f2363dbcb3bd29","name":"AUTO TBC","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":450,"y":220,"wires":[]},{"id":"c8f08c29cf7d2b84","type":"api-current-state","z":"c4f2363dbcb3bd29","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{lighting_zone}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1090,"y":100,"wires":[["7c95a97b390dfd11"],[]]},{"id":"7c95a97b390dfd11","type":"api-call-service","z":"c4f2363dbcb3bd29","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{lighting_zone}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"queue":"none","x":1240,"y":100,"wires":[[]]},{"id":"d0ce0ec4cd5d01ea","type":"switch","z":"c4f2363dbcb3bd29","name":"Lights ON/OFF","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"ON","vt":"str"},{"t":"eq","v":"OFF","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":860,"y":140,"wires":[["7cae1bb27a982c2c","c8f08c29cf7d2b84"],["911abf95cd912fd0","dd2a8e55106dc5b5"]]},{"id":"7cae1bb27a982c2c","type":"api-call-service","z":"c4f2363dbcb3bd29","d":true,"name":"[DEBUG] LIGHTS ON","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"LIGHTS ON\"\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":860,"y":20,"wires":[[]]},{"id":"911abf95cd912fd0","type":"api-call-service","z":"c4f2363dbcb3bd29","d":true,"name":"[DEBUG] LIGHTS OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"LIGHTS OFF\",\t    \"data\": {\t        \"tag\": \"OFF\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":860,"y":240,"wires":[[]]},{"id":"de6da418b2da77f9","type":"api-call-service","z":"c4f2363dbcb3bd29","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{lighting_zone}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1250,"y":180,"wires":[[]]},{"id":"dd2a8e55106dc5b5","type":"api-current-state","z":"c4f2363dbcb3bd29","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{lighting_zone}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1090,"y":180,"wires":[["de6da418b2da77f9"],[]]},{"id":"6eb9e218b56e780e","type":"function","z":"c4f2363dbcb3bd29","name":"Light Scheduler Function v1.2 (beta)","func":"// Light Scheduler Function v1.0\n// This routine takes schedule times and checks whether lights\n// should be turned on/off\n//\n// Function Variables\nvar zone                = msg.zone;\nvar lightingZone        = global.get(msg.zone +'_lighting_zone');\nvar action              = '';\nvar currentDT           = new Date();\nvar scheduleStart       = global.get(zone + '_scheduled_lighting_start');\nvar scheduleStartValues = scheduleStart.split(\":\");\nvar scheduleEnd         = global.get(zone + '_scheduled_lighting_end');\nvar scheduleEndValues   = scheduleEnd.split(\":\");\n//\nvar scheduleStartDate = new Date();\nscheduleStartDate.setHours(scheduleStartValues[0]);\nscheduleStartDate.setMinutes(scheduleStartValues[1]);\nscheduleStartDate.setSeconds(scheduleStartValues[2]);\n//\nvar scheduleEndDate = new Date();\nscheduleEndDate.setHours(scheduleEndValues[0]);\nscheduleEndDate.setMinutes(scheduleEndValues[1]);\nscheduleEndDate.setSeconds(scheduleEndValues[2]);\n\nif (scheduleStart == scheduleEnd){\n    node.warn(\"[ERROR] Matching Lighting Schedule Start/End Times Found for [\"+ zone +\"]\");\n    return null;\n}\n// Main Processing\n//\n// Check direction of schedule start/end time\nvar direction = 'FORWARD';\nif (scheduleStartDate > scheduleEndDate){\n    direction = 'REVERSE'\n}\n// \nswitch(direction) {\n    case \"FORWARD\":\n        //\n        if (currentDT >= scheduleStartDate && currentDT <= scheduleEndDate){\n            node.warn('ON'); \n            action = 'ON';\n        } else {\n            node.warn('OFF');\n            action = 'OFF';\n        }\n        break;\n      case \"REVERSE\":\n        //\n        if ((currentDT >= scheduleStartDate && currentDT >= scheduleEndDate) || (currentDT <= scheduleStartDate && currentDT <= scheduleEndDate)){\n            node.warn('ON - REV'); \n            action = 'ON';\n        } else {\n            node.warn('OFF - REV');\n            action = 'OFF';\n        }\n        break;\n      default:\n        // \n}\n//node.warn(\"currentDT: \"+ currentDT);\n//node.warn(\"scheduleStartDate: \"+ scheduleStartDate);\n//node.warn(\"scheduleEndDate: \"+ scheduleEndDate);\nnewMsg = { payload : action };\nnewMsg.lighting_zone = lightingZone;\n//node.warn(newMsg);\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":140,"wires":[["d0ce0ec4cd5d01ea"]]},{"id":"cf6ec62d58c04e17","type":"ha-get-entities","z":"6afebbe9d3799590","name":"Get Entites (ALL)","server":"5e6a682a.ce8468","version":1,"rules":[],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":210,"y":80,"wires":[["3f7f6db113588619","6749a3028379acd4"]]},{"id":"3f7f6db113588619","type":"function","z":"6afebbe9d3799590","d":true,"name":"Entity Filter","func":"// Filters entities based on gives criteria\n// property of X.\n\nvar entity_list   = msg.payload;\nvar entity_areas  = (typeof msg.data[\"area\"] === 'undefined') ? \"\" : msg.data[\"area\"];\nvar entity_types  = (typeof msg.data[\"type\"] === 'undefined') ? \"\" : msg.data[\"type\"];\nvar entity_keys   = (typeof msg.data[\"key\"] === 'undefined') ? \"\" : msg.data[\"key\"];\nvar exclusions    = (typeof msg.data[\"exclude\"] === 'undefined') ? \"\" : msg.data[\"exclude\"];\nvar strict        = (typeof msg.data[\"strict\"] === 'undefined') ? \"\" : msg.data[\"strict\"]; // determines wheter all conditions must be met\n\n// Check if multiple items for each parameter has been passed and cast to array to avoid code duplication\nif (!Array.isArray(entity_types)) entity_types = [entity_types];\nif (!Array.isArray(entity_areas)) entity_areas = [entity_areas];\nif (!Array.isArray(entity_keys)) entity_keys   = [entity_keys];\nif (!Array.isArray(exclusions)) exclusions     = [exclusions];\n\n//Check for missing period in entity types (e.g. sensor.)\nfor (let i = 0; i < entity_types.length; i++){\n\n  if (entity_types[i].charAt(entity_types[i].length - 1) !== \".\") {\n    entity_types[i] = entity_types[i] + \".\";\n  }\n\n}\n//Display current entity list [DEBUG]\n//node.warn(entity_list);\n\n// Check conditions\nconst matches = entity_list.filter(element => {\n\n  // Filter by entity type(s)\n  if (entity_types != \"\" && !entityFilter(element[\"entity_id\"], entity_types, strict[\"type\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity key(s)\n  if (entity_keys != \"\" && !entityFilter(element[\"entity_id\"], entity_keys, strict[\"key\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity area(s)\n  if (entity_areas != \"\" && !entityFilter(element[\"entity_id\"], entity_areas, strict[\"area\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by exclusion(s)\n  if (exclusions != \"\" && entityFilter(element[\"entity_id\"], exclusions, strict[\"exclude\"])) {\n    return false;\n  }\n  return true;\n});\n\n// Display results [DEBUG]\nif (matches.length > 0) {\n  node.warn('Type(s): [' + entity_types + '], Area(s): [' + entity_areas + '], Key(s): [' + entity_keys + '], Exclusion(s) [' + exclusions + '], Entities Found: ' + matches.length);\n    // Filtered list\n    node.warn(matches);\n} else {\n  node.warn('[NO MATCHES FOUND] Type(s): [' + entity_types + '], Area(s): [' + entity_areas + '], Key(s): [' + entity_keys + '], Exclusion(s) [' + exclusions + ']');\n}\n// Return matches in msg.payload\nmsg.payload = matches;\nreturn msg;\n\nfunction entityFilter(entity_id, comparators, strict) {\n\n  var found = false;\n\n  // Check whether each comparator is in entity_id\n  for (let i = 0; i < comparators.length; i++) {\n\n    // Item not found (or empty for some reason, maybe missing array element? Not expected though so check last)\n    if (entity_id.indexOf(comparators[i]) === -1 && comparators[i] != \"\") {\n\n      // return false if any comparator isn't found (and strict)\n      found = false;\n      if (strict) return found;\n\n    } else {\n\n      // no need to keep searching if item found (and not strict)\n      found = true;\n      if (!strict) return found;\n\n    }\n  }\n  return found;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":220,"wires":[[]]},{"id":"6749a3028379acd4","type":"function","z":"6afebbe9d3799590","name":"Entity Filter 1.25","func":"// Entity Filter (v1.2)\n// Filters entities based on given criteria\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : [entity list]\n// msg.data.area            : [area(s)]\n// msg.data.type            : [domain(s)]\n// msg.data.key             : [attribute(s) to include]\n// msg.data.exclude         : [attribute(s) to exclude]\n// msg.data.strict          : Determines whether all conditions specified \n//                          : in the filters must be strictly matched or if \n//                          : any one of them suffices for a match.\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Filtered entities\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nconst entities = msg.payload;\nconst areas = msg.data.area ? utils.castToArray(msg.data.area) : \"\";\nconst domains = msg.data.domain ? formatDomains(msg.data.domain) : \"\";\nconst keys = msg.data.key ? utils.castToArray(msg.data.key) : \"\";\nconst exclusions = msg.data.exclude ? utils.castToArray(msg.data.exclude) : \"\";\nconst strict = msg.data.strict ? msg.data.strict : \"\";\n\nconst matches = entities.filter(element => {\n\n  // Filter by entity type(s)\n  if (domains != \"\" && !entityFilter(element[\"entity_id\"], domains, strict[\"domain\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity key(s)\n  if (keys != \"\" && !entityFilter(element[\"entity_id\"], keys, strict[\"key\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity area(s)\n  if (areas != \"\" && !entityFilter(element[\"entity_id\"], areas, strict[\"area\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by exclusion(s)\n  if (exclusions != \"\" && entityFilter(element[\"entity_id\"], exclusions, strict[\"exclude\"])) {\n    return false;\n  }\n  return true;\n\n});\n\nconst status = `[ENTITIES FOUND: ${matches.length}] Domains(s): [${domains}], Area(s): [${areas}], Key(s): [${keys}], Exclusion(s) [${exclusions}]`;\n//node.warn(status);\n//node.warn(matches);\n\nmsg.payload = matches;\nreturn [msg, utils.status(`[Entities Found: ${matches.length}]`)];\n\n/*** END ***/\n\n/*** HELPERS ***/\n\nfunction formatDomains(domains) {\n  //Check for missing period in domain (e.g. sensor.)\n  for (let i = 0; i < domains.length; i++) {\n\n    if (domains[i].charAt(domains[i].length - 1) !== \".\") {\n      domains[i] = domains[i] + \".\";\n    }\n\n  }\n  return domains;\n}\n\nfunction entityFilter(entityId, comparators, strict) {\n  // If strict mode is enabled, all comparators must be found in entityId\n  if (strict) {\n    return comparators.every(comparator => entityId.includes(comparator));\n  } else {\n    // If not strict, at least one comparator must be found in entityId\n    return comparators.some(comparator => entityId.includes(comparator));\n  }\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":80,"wires":[[],[]]},{"id":"458d1f689fbb1f10","type":"function","z":"6afebbe9d3799590","d":true,"name":"Entity Filter 1.1","func":"// Entity Filter (v1.1)\n// Filters entities based on given criteria\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : [entity list]\n// msg.data.area            : [area(s)]\n// msg.data.type            : [domain(s)]\n// msg.data.key             : [attribute(s) to include]\n// msg.data.exclude         : [attribute(s) to exclude]\n// msg.data.strict          : Determines whether all conditions specified \n//                          : in the filters must be strictly matched or if \n//                          : any one of them suffices for a match.\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Filtered entities\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nconst entities = msg.payload;\nconst areas = msg.data.area ? utils.castToArray(msg.data.area) : \"\";\nconst domains = msg.data.domain ? formatDomains(msg.data.domain) : \"\";\nconst keys = msg.data.key ? utils.castToArray(msg.data.key) : \"\";\nconst exclusions = msg.data.exclude ? utils.castToArray(msg.data.exclude) : \"\";\nconst strict = msg.data.strict ? msg.data.strict : \"\";\n\nconst matches = entities.filter(element => {\n\n  // Filter by entity type(s)\n  if (domains != \"\" && !entityFilter(element[\"entity_id\"], domains, strict[\"domain\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity key(s)\n  if (keys != \"\" && !entityFilter(element[\"entity_id\"], keys, strict[\"key\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity area(s)\n  if (areas != \"\" && !entityFilter(element[\"entity_id\"], areas, strict[\"area\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by exclusion(s)\n  if (exclusions != \"\" && entityFilter(element[\"entity_id\"], exclusions, strict[\"exclude\"])) {\n    return false;\n  }\n  return true;\n\n});\n\nconst status = `[ENTITIES FOUND: ${matches.length}] Domains(s): [${domains}], Area(s): [${areas}], Key(s): [${keys}], Exclusion(s) [${exclusions}]`;\nnode.warn(status);\nnode.warn(matches);\nmsg.payload = matches;\nreturn msg;\n\n/*** END ***/\n\n/*** HELPERS ***/\n\nfunction formatDomains(domains) {\n  //Check for missing period in domain (e.g. sensor.)\n  for (let i = 0; i < domains.length; i++) {\n\n    if (domains[i].charAt(domains[i].length - 1) !== \".\") {\n      domains[i] = domains[i] + \".\";\n    }\n\n  }\n  return domains;\n}\n\nfunction entityFilter2(entityId, comparators, strict) {\n  return strict ?\n    comparators.some(comparator => entityId.includes(comparator)) :\n    comparators.every(comparator => entityId.includes(comparator));\n}\n\nfunction entityFilter(entity_id, comparators, strict) {\n\n  var found = false;\n\n  // Check whether each comparator is in entity_id\n  for (let i = 0; i < comparators.length; i++) {\n\n    // Item not found (or empty for some reason, maybe missing array element? Not expected though so check last)\n    if (entity_id.indexOf(comparators[i]) === -1 && comparators[i] != \"\") {\n\n      // return false if any comparator isn't found (and strict)\n      found = false;\n      if (strict) return found;\n\n    } else {\n\n      // no need to keep searching if item found (and not strict)\n      found = true;\n      if (!strict) return found;\n\n    }\n  }\n  return found;\n}\n\nfunction filterEntities(entities, filters, exclusions, strict) {\n\n  /*return entities.filter(entity => {\n    // Check filters\n    for (const [property, value] of Object.entries(filters)) {\n      node.warn(property);\n      if (value && !entityFilter(entity.entity_id, value, strict[property])) {\n        return false;\n      }\n    }\n    // Check exclusions\n    if (exclusions && entityFilter(entity.entity_id, exclusions, strict[\"exclude\"])) {\n      return false;\n    }\n    return true;\n  });*/\n\n\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":260,"wires":[[]]},{"id":"ced37c9ea113744d","type":"function","z":"6afebbe9d3799590","name":"Entity Filter 1.2","func":"// Entity Filter (v1.2)\n// Filters entities based on given criteria\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : [entity list]\n// msg.data.area            : [area(s)]\n// msg.data.type            : [domain(s)]\n// msg.data.key             : [attribute(s) to include]\n// msg.data.exclude         : [attribute(s) to exclude]\n// msg.data.strict          : Determines whether all conditions specified \n//                          : in the filters must be strictly matched or if \n//                          : any one of them suffices for a match.\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Filtered entities\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nconst entities = msg.payload;\nconst areas = msg.data.area ? utils.castToArray(msg.data.area) : \"\";\nconst domains = msg.data.domain ? formatDomains(msg.data.domain) : \"\";\nconst keys = msg.data.key ? utils.castToArray(msg.data.key) : \"\";\nconst exclusions = msg.data.exclude ? utils.castToArray(msg.data.exclude) : \"\";\nconst strict = msg.data.strict ? msg.data.strict : \"\";\n\nconst matches = entities.filter(element => {\n\n  // Filter by entity type(s)\n  if (domains != \"\" && !entityFilter(element[\"entity_id\"], domains, strict[\"domain\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity key(s)\n  if (keys != \"\" && !entityFilter(element[\"entity_id\"], keys, strict[\"key\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by entity area(s)\n  if (areas != \"\" && !entityFilter(element[\"entity_id\"], areas, strict[\"area\"])) {\n    return false;\n  } else {\n  }\n\n  // Filter by exclusion(s)\n  if (exclusions != \"\" && entityFilter(element[\"entity_id\"], exclusions, strict[\"exclude\"])) {\n    return false;\n  }\n  return true;\n\n});\n\nconst status = `[ENTITIES FOUND: ${matches.length}] Domains(s): [${domains}], Area(s): [${areas}], Key(s): [${keys}], Exclusion(s) [${exclusions}]`;\n//node.warn(status);\n//node.warn(matches);\n\nmsg.payload = matches;\nreturn [msg, utils.status(`[Entities Found: ${matches.length}]`)];\n\n/*** END ***/\n\n/*** HELPERS ***/\n\nfunction formatDomains(domains) {\n  //Check for missing period in domain (e.g. sensor.)\n  for (let i = 0; i < domains.length; i++) {\n\n    if (domains[i].charAt(domains[i].length - 1) !== \".\") {\n      domains[i] = domains[i] + \".\";\n    }\n\n  }\n  return domains;\n}\n\nfunction entityFilter(entityId, comparators, strict) {\n  // If strict mode is enabled, all comparators must be found in entityId\n  if (strict) {\n    return comparators.every(comparator => entityId.includes(comparator));\n  } else {\n    // If not strict, at least one comparator must be found in entityId\n    return comparators.some(comparator => entityId.includes(comparator));\n  }\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":300,"wires":[[],[]]},{"id":"e19cc999bab22522","type":"function","z":"01b24619b55abe60","d":true,"name":"Calculate Average 1.0","func":"//Average Value Updater\n// This routine updates an average (temp/hum) helper entity for\n// an area based on an incoming array of sensor entities\n\n//Sensor Variables\nvar entities            = msg.payload;\nvar avgVal              = 0;\nvar available_sensors   = 0;\nvar unavailable_sensors = [];\nvar entity_areas        = (typeof msg.data[\"area\"] === 'undefined') ? \"\" : msg.data[\"area\"];\nvar entity_attributes   = (typeof msg.data[\"attributes\"] === 'undefined') ? \"\" : msg.data[\"attributes\"];\n//var strict = (typeof msg.data[\"strict\"] === 'undefined') ? \"\" : msg.data[\"strict\"];\n\n// Check if multiple items for each parameter has been passed and cast to array to avoid code duplication\nif (!Array.isArray(entity_attributes)) entity_attributes    = [entity_attributes];\nif (!Array.isArray(entity_areas)) entity_areas              = [entity_areas];\n\n// add up values\nfor (let i = 0; i < entities.length; i++) {\n\n    var val = entities[i]['state'];\n\n    // Ensure val is a number / available\n    if (val != 'unavailable' && !isNaN(val)) {\n        //node.warn(\"included: \" + val);\n        avgVal += parseFloat(val);\n        available_sensors ++;\n\n    } else {\n\n        // Check attributes\n        val = attributeFilter(entities[i]['attributes'], entity_attributes);\n\n        if (val){\n            //node.warn(\"attribute val found:\" + val);\n            avgVal += parseFloat(val);\n            available_sensors++;\n        }\n        // bad entity? Log\n        else {\n            unavailable_sensors[-1] = entities[i];\n        }\n    }\n}\n//calculate average to 1dp\navgVal = Math.round( (avgVal / available_sensors) * 10) / 10;\n\n// Display Debug/Output log\n//node.warn(\"avgVal: \" + avgVal + \" available_sensors: \" + available_sensors + \" unavailable_sensors: \" + unavailable_sensors.length + \" global_id: \" + msg.global_id);\n// Output unavailable sensors if any\nif (unavailable_sensors.length != 0) {\n    node.warn(unavailable_sensors);\n}\nmsg.payload = avgVal;\nreturn msg;\n\n// Function to search for attribte(s) within an entity\nfunction attributeFilter(attributes, comparators) {\n\n   //loop through each potential attribute key\n    for (let i = 0; i < comparators.length; i++) {\n\n        // Check whether a key exists in attributes and return the value\n        if (attributes != \"\" && comparators[i] in attributes) return attributes[comparators[i]];\n\n    }\n    //otherwise return false\n    return false;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":140,"wires":[[]]},{"id":"77ea6385a1d16d10","type":"function","z":"01b24619b55abe60","name":"Calculate Average State","func":"// Calculate Average State\n// This routine calculates the average .state for an array of objects\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : [object list]\n// msg.data.attributes      : [attributes to include]\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Average value of the specified attribute(s)\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nconst entities = msg.payload;\nconst attributes = msg.data.attributes ? utils.castToArray(msg.data.attributes) : [];\n\nlet average = 0;\nlet available_sensors = 0;\nconst unavailable_sensors = [];\n\n// Add up values\nentities.forEach(entity => {\n    const val = parseFloat(entity.state);\n\n    // Ensure val is a number / available\n    if (!isNaN(val)) {\n        average += val;\n        available_sensors++;\n    } else {\n        const attribute_value = attributeFilter(entity.attributes, attributes);\n        if (attribute_value !== false) {\n            average += parseFloat(attribute_value);\n            available_sensors++;\n        } else {\n            unavailable_sensors.push(entity);\n        }\n    }\n});\n\n// Calculate average to 1 decimal place\nmsg.payload = available_sensors > 0 ? Math.round((average / available_sensors) * 10) / 10 : 0;\n\nconst status = `Average: [${msg.payload}] Available: [${available_sensors}/${entities.length}]`;\n\n// Return average + status\nif (available_sensors == 0) {\n    return [msg, utils.status(status, {fill: \"red\"})];\n}\nreturn [msg, utils.status(status)];\n\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\n// Function to search for attribute(s) within an object\nfunction attributeFilter(attributes, comparators) {\n    for (const comparator of comparators) {\n        if (attributes && comparator in attributes) {\n            return attributes[comparator];\n        }\n    }\n    return false;\n}\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":80,"wires":[[],[]]},{"id":"f8606cf7fa9afeaa","type":"function","z":"14483421210c6f6b","name":"Update Average Humidity","func":"//Average Temperature Updater\n// This routine updates the average temperature helper entity for\n// an area based on an incoming array of sensor entities\n\n//Function Variables\n//var values          = flow.get([\"realavgtemp\", \"avgtemp\",\"mode\",\"speed\"])\n//node.warn(\"sensors: \"+ result);\n//var tempValues      = flow.get([\"temp1\", \"temp2\", \"temp3\", \"temp4\"])\n//var realAvgTemp = parseFloat(global.get(\"belcave_realavgtemp\"));\n//Sensor Variables\nvar entities = msg.payload;\nvar avgHum = 0;\nvar available_sensors = 0;\n//\nfor (let i = 0; i < entities.length; i++) {\n    var temp = entities[i]['state'];\n    // Ensure temp is a number / available\n    if (temp != 'unavailable' && !isNaN(temp)) {\n        //node.warn(\"included: \" + temp);\n        avgHum += parseFloat(temp);\n        available_sensors ++;\n    }\n}\n\navgHum = avgHum / available_sensors;\nnode.warn(\"avgHum: \" + avgHum + \" available_sensors: \" + available_sensors);\n\nmsg.payload = avgHum;\n// done in call service node\n//newMsg = { global_id: 'average_' + area + '_temperature' };\nnode.warn(msg);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":80,"wires":[["9ad0a10f940ec92c"]]},{"id":"9ad0a10f940ec92c","type":"api-call-service","z":"14483421210c6f6b","name":"Update Average Humidity","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"set_value","areaId":[],"deviceId":[],"entityId":["input_number.average_{{area}}_humidity"],"data":"{\t\"value\": payload\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":430,"y":80,"wires":[[]]},{"id":"43ece339e653edbc","type":"function","z":"14483421210c6f6b","name":"Update Average Temperature","func":"//Average Temperature Updater\n// This routine updates the average temperature helper entity for\n// an area based on an incoming array of sensor entities\n\n//Sensor Variables\nvar entities = msg.payload;\nvar avgTemp = 0;\nvar available_sensors = 0;\nvar unavailable_sensors = [];\nvar entity_areas = (typeof msg.data[\"area\"] === 'undefined') ? \"\" : msg.data[\"area\"];\nvar entity_attributes = (typeof msg.data[\"attributes\"] === 'undefined') ? \"\" : msg.data[\"attributes\"];\n//var strict = (typeof msg.data[\"strict\"] === 'undefined') ? \"\" : msg.data[\"strict\"];\n\n// Check if multiple items for each parameter has been passed and cast to array to avoid code duplication\nif (!Array.isArray(entity_attributes)) entity_attributes = [entity_attributes];\nif (!Array.isArray(entity_areas)) entity_areas = [entity_areas];\n\n// add up temps\nfor (let i = 0; i < entities.length; i++) {\n    var temp = entities[i]['state'];\n    //node.warn(entities[i]);\n    // Ensure temp is a number / available\n    if (temp != 'unavailable' && !isNaN(temp)) {\n        //node.warn(\"included: \" + temp);\n        avgTemp += parseFloat(temp);\n        available_sensors ++;\n    } else {\n        // Check attributes\n        temp = attributeFilter(entities[i]['attributes'], entity_attributes);\n        if (temp){\n            //node.warn(\"attribute temp found:\" + temp);\n            avgTemp += parseFloat(temp);\n            available_sensors++;\n        }\n        // bad entity, log\n        else {\n            unavailable_sensors[-1] = entities[i];\n        }\n    }\n}\n//calculate average to 1dp\navgTemp = Math.round( (avgTemp / available_sensors) * 10) / 10;\n\n// create global_id string, use existing msg.global_id if already populated\nif (msg.global_id === undefined) msg.global_id = 'average_' + entity_areas[0] + '_temperature';\n\nnode.warn(\"avgTemp: \" + avgTemp + \" available_sensors: \" + available_sensors + \" unavailable_sensors: \" + unavailable_sensors.length + \" global_id: \" + msg.global_id);\nif (unavailable_sensors.length != 0) node.warn(unavailable_sensors);\nmsg.payload = avgTemp;\nreturn msg;\n\n// Function to search for attribte(s) within an entity\nfunction attributeFilter(attributes, comparators) {\n\n   //loop through each potential attribute key\n    for (let i = 0; i < comparators.length; i++) {\n\n        // Check whether a key exists in attributes and return the value\n        if (attributes != \"\" && comparators[i] in attributes) return attributes[comparators[i]];\n\n    }\n    //otherwise return false\n    return false;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":140,"wires":[["e58b2c06c1ebc6ca"]]},{"id":"e58b2c06c1ebc6ca","type":"api-call-service","z":"14483421210c6f6b","name":"Update Average Temp","server":"5e6a682a.ce8468","version":5,"debugenabled":true,"domain":"input_number","service":"set_value","areaId":[],"deviceId":[],"entityId":["input_number.{{global_id}}"],"data":"{\t\"value\": payload\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":460,"y":140,"wires":[[]]},{"id":"9899a860acf12987","type":"function","z":"b0163a757372995f","name":"Format Start/End Date Window [v1.0]","func":"// Format Start/End Date Window [v1.0]\n// Gets the time window in ISO format based on msg.start_date and msg.end_date\n// otherwise gets the past 24hrs\n//\n// [INPUT]:\n// msg.start_date   : Start of the history period\n// msg.end_date     : End of the history period\n//\n// [OUTPUT]:\n// start_date   : msg.payload.start_date\n// end_date     : msg.payload.end_date\n\n// Hard-to-read one-line version, may struggle to check validity of date string or add more output formats in the future, \n// unless i try/catch the whole thing...\n//msg.payload.start_date = ((msg.start_date != (\"\" || undefined)) ? new Date(msg.start_date) :  new Date(Date.now() - (86400 * 1000))).toISOString();\n//msg.payload.end_date = ((msg.end_date != (\"\" || undefined)) ? new Date(msg.end_date) : new Date(Date.now())).toISOString();\n//node.warn(\"[TEST] msg.payload.start_date: \" + msg.payload.start_date);\n//node.warn(\"[TEST] msg.payload.end_date: \" + msg.payload.end_date);\n\nvar startDate;\nvar endDate;\n\n\nif ( msg.start_date != (\"\" || undefined) ) {\n    // Start date provided\n    startDate = new Date(msg.start_date).toISOString();\n\n    // Check if end date also provided\n    if ( msg.end_date != (\"\" || undefined) ) {\n        endDate = new Date(msg.end_date).toISOString();\n    } else {\n        endDate = new Date(Date.now()).toISOString();\n    }\n\n} else {\n\n    // Otherwise default to past 24hrs if msg.days also not passed\n    var days = (msg.days != (\"\" || undefined)) ? msg.days : 1;\n    var fromDate   = Date.now() - ( (86400 * 1000) * days) ;\n\n    startDate = new Date(fromDate).toISOString();\n    endDate = new Date(Date.now()).toISOString();\n\n}\n\n//node.warn(\"[OUTPUT] start_date: \" + start_date);\n//node.warn(\"[OUTPUT] end_date: \" + end_date);\n\n// Return via msg.payload object\nif (!(typeof msg.payload === 'object')) {\n    msg.payload = {};\n}\nmsg.payload.startdate  = startDate;\nmsg.payload.enddate    = endDate;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":80,"wires":[[]]},{"id":"af17fcb370ae3754","type":"function","z":"c503fec7b99f2355","name":"Process History","func":"// Calculates the average light level to try and get an idea of\n// when artifical light is in use and sunset/sunrise.\nvar sensorHistory = msg.payload;\nvar runningTotal = 0;\nvar unavailableElements = 0;\n\nsensorHistory.forEach(function(element) {\n    //node.warn(element);\n    if (element.state != \"unavailable\") {\n        runningTotal += parseFloat(element.state);\n    } else {\n        log(element);\n        unavailableElements++;\n    }\n\n});\nlog(msg.entity_id);\nlog(\"total: \" + runningTotal + \" unavailable: \" + unavailableElements);\nvar mean = runningTotal / (sensorHistory.length - unavailableElements);\nlog(\"mean: \" + mean);\n\n// get the mean of all values below the mean, may be useful for detecting dimming\nvar subRunningTotal = 0;\nvar subMean = 0;\nvar subCount = 0;\n\nsensorHistory.forEach(function (element) {\n    if (parseFloat(element.state) < mean) {\n        subRunningTotal += parseFloat(element.state);\n        subCount++;\n    }\n});\nsubMean = subRunningTotal / subCount;\nlog(\"sub mean: \" + subMean);\nmsg.payload = round(mean, 1);\nreturn msg;\n\n/**\n* Rounding function\n* @param {number} value\n* @param {number} precision\n*/\nfunction round(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n/**\n* node.warn wrapper for debugging\n* @param {string | object} message\n*/\nfunction log(message) {\n    // Print message if debug_flag is present\n    if (msg.debug_flag || msg.payload.debug_flag) {\n        node.warn(message);\n    };\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":80,"wires":[[]]},{"id":"32b2b183e325b9c7","type":"function","z":"218b018ab076dfbf","name":"Calculate Percentage (v1.0)","func":"// Calculate Percentage (v1.0)\n// This function calcluates the percentage of entitites which have a certain state\n// ******************************************************************\n// -*- INPUTS -*-\n// All properties of msg.payload\n// entities                 : Entities to operate on\n// attribute                : Attribute to be processed\n// state                    : Attribute state to check against\n// invert [OPTIONAL]        : inversion flag (returns percentage of entities that don't match)\n//\n// -*- OUTPUTS -*-\n// msg.payload              : calculated percentage\n// ******************************************************************\nlet entities    = global.get(msg.payload.entities);\nif (!entities) return null;\n\nvar attribute   = msg.payload.attribute;\nvar state = msg.payload.state;//todo: create func for [ comparators: < > <= >= = operators: & | ! ] \nvar invertFlag  = msg.payload.invert ? msg.payload.invert : false;\nvar precision   = (msg.payload.precision != (\"\" || undefined)) ? msg.payload.precision : null;\n\nlog(\"Attribute: \" + attribute + \" State: \" + state);\n\nvar matches = 0;\nvar total   = 0;\n\nfor (var key in entities) {\n    if (entities[key][attribute] == state) {\n        matches++;\n    }\n    total++;\n}\n\nlog(\"Matches: \" + matches + \" Total: \" + total);\n\nvar result;\n// Return percentage of values not matching if invert flag is true\nif (invertFlag) {\n    result = ( (total - matches) / total ) * 100;\n} else {\n    result = (matches / total) * 100;\n}\n// Round to specified precision value if present\nif (precision != null) {\n    result = round(result, precision);\n} \n\nlog(\"Attribute: [\" + attribute + \"] State: [\" + state + \"] Percentage: \" + result + \"%\");\nmsg.payload = result;\nreturn msg;\n\n/**\n* Rounding function\n* @param {number} value\n* @param {number} precision\n*/\nfunction round(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n/**\n* node.warn wrapper for debugging\n* @param {string | object} message\n*/\nfunction log(message) {\n    // Print message if debug_flag is present\n    if (msg.debug_flag || msg.payload.debug_flag) {\n        node.warn(message);\n    };\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":80,"wires":[[]]},{"id":"4df373d5ab42fe0d","type":"function","z":"94e56685e6cdc113","name":"Calculate Average State (v1.1)","func":"/**  \n * Calculate Average State (v1.0)\n * Calculates the average state for an incoming array of entities.\n ******************************************************************\n * -*- INPUTS -*-\n * @param { string | object } payload   - entity Array\n * @param { object } [config]           - configuration object\n * @param { object } [config.attribute] - entity attribute to use\n * @param { object } [config.precision] - number of decimal places\n *\n * -*- OUTPUTS -*-\n * @param { number } payload            - average entity state\n ******************************************************************\n */\n// Initialise variables\nvar entities                = msg.payload;\nvar attribute               = (typeof msg.config[\"attribute\"] === 'undefined') ? \"\" : msg.config[\"attribute\"];\nvar precision               = (typeof msg.config[\"precision\"] === 'undefined') ? \"\" : msg.config[\"precision\"];\nvar avgVal                  = 0;\nvar available_entities      = 0;\nvar unavailable_entities    = [];\n\n//var strict = (typeof msg.data[\"strict\"] === 'undefined') ? \"\" : msg.data[\"strict\"];\n\n// Check if multiple entitiesm have been passed and if not, cast to array to avoid errors / code duplication\nif (!Array.isArray(entities)) entities = [entities];\n\nvar val;\n\n// Sum values\nfor (let i = 0; i < entities.length; i++) {\n\n    val = entities[i]['state'];\n\n    // Ensure value is a number & available\n    if (val != 'unavailable' && !isNaN(val) && attribute == \"\") {\n        //log(\"included: \" + val);\n        avgVal += parseFloat(val);\n        available_entities ++;\n\n    } else {\n\n        // Check attribute\n        val = attributeFilter(entities[i]['attributes'], attribute);\n\n        if (val){\n            avgVal += parseFloat(val);\n            available_entities++;\n        }\n        // bad entity/attribute? Log + add to unavailable entities list\n        else {\n            log(\"[ERROR] Invalid entity / attribute\");\n            unavailable_entities[-1] = entities[i];\n        }\n    }\n}\n//calculate average to xdp\navgVal = (avgVal / available_entities);\navgVal = round(avgVal, precision);\n\n// Display Debug/Output log\nlog(\"avgVal: \" + avgVal + \" available_sensors: \" + available_entities + \" unavailable_sensors: \" + unavailable_entities.length + \" global_id: \" + msg.global_id);\n\n// Output unavailable sensors if any\nif (unavailable_entities.length != 0) log(unavailable_entities);\nmsg.payload = avgVal;\nreturn msg;\n\n// Function to search for attribute within an entity : TODO\nfunction attributeFilter(attributeObject, attribute) {\n\n    // Check if attribute object exists otherwise return false\n    if (attributeObject == (\"\" || undefined)) return false;\n\n    // TODO: Get attribute depth - test on persistent_notification.invalid_config:\n    var attributeParts = attribute.split(\".\");\n    log(\"[DEBUG] Attribute Parts: \" + attributeParts);\n\n    var attrDepthObject = attributeObject;\n\n   // Loop through each potential attribute level\n    for (let i = 0; i < attributeParts.length; i++) {\n\n        // Check whether key exists in attributes and return/search the value/object\n        if (attrDepthObject[attributeParts[i]] != (\"\" || undefined)) {\n            // Set attribute object to sub-object and repeat\n            attrDepthObject = attrDepthObject[attributeParts[i]];\n        }\n\n    }\n    log(\"Attribute Serach Result: \" + attrDepthObject);\n\n    // Return value if found\n    if (attrDepthObject != (\"\" || undefined)) return attrDepthObject;\n\n    // Otherwise return false\n    return false;\n}\n\nfunction round(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n/**\n* node.warn wrapper for debugging\n* @param {string | object} message\n*/\nfunction log(message) {\n    // Print message if debug_flag is present\n    if (msg.debug_flag || msg.payload.debug_flag) {\n        node.warn(message);\n    };\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":80,"wires":[[]]},{"id":"1b2387c87e33e1b8","type":"function","z":"2802501265df2123","name":"Sun Rise / Set (v1.0)","func":"// Sun Rise / Set (v1.0)\n//var lux                 = msg.config.lux;\nvar lux                 = global.get(msg.config.global_lux);\nvar lowerLuxThreshold   = exists(msg.config.lower_lux_threshold) ? msg.config.lower_lux_threshold : 2\nvar upperLuxThreshold   = global.get(msg.config.global_lux_mean);\nmsg.reset               = true;\nvar statusMsg           = {};\n//var upperLuxThreshold = msg.config.upper_lux_threshold;\n\n// Check if sun has risen\nif (msg.payload == \"above_horizon\") {\n\n    // Check if lux sensor(s) are present\n    if (exists(lux)) {\n\n        // Check if light level is above lower threshold\n        if (lux >= lowerLuxThreshold) {\n\n            // Sunrise (or artificial light) detected (maybe in the future check if motion lighting mode is active?)\n            return [msg, null, status(\"Sunrise\")];\n\n        }\n        \n        // Sun is still rising, not enough light detected\n        log (\"[DEBUG] Sun is rising...\");\n        return [null, null, status(\"Sun is rising...\")];\n\n    }\n\n    // No lux sensor(s), use sun state\n    return [msg, null, status(\"Sunrise\")];\n\n} \n\nif (msg.payload == \"below_horizon\") {\n\n    // Check if lux sensor(s) are present\n    if (exists(lux)) {\n\n        // Check if light level is below lower threshold or below average (if passed)\n        if (lux < lowerLuxThreshold || (exists(upperLuxThreshold) && lux > upperLuxThreshold)) {\n\n            // Sunset (insufficient/artificial light) detected\n            return [null, msg, status(\"Sunset\")];\n\n        }\n\n        // Sun is still setting, light still detected\n        log(\"[DEBUG] upperLuxThreshold: \" + upperLuxThreshold + \" lux: \" + lux);\n        log(\"[DEBUG] Sun is setting...\");\n        return [null, null, status(\"Sun is setting...\")];\n\n    }\n\n    // No lux sensor(s), use sun state\n    return [null, msg, status(\"Sunset\")];\n\n}\n\n// Potential change to integration?\nlog(\"[ERROR] Sun State: \" + msg.payload);\n\nreturn [null, null, status(\"[ERROR] Sun State: \" + msg.payload)];\n\n/**\n * Check if a value exists\n * @param {any} value\n**/\nfunction exists(value) {\n    return value != (\"\" || undefined || null);\n}\n\n/**\n * node.warn wrapper for debugging\n * @param {string | object} message\n**/\nfunction log(message) {\n    // Print message if debug_flag is present\n    if (msg.debug_flag || msg.payload.debug_flag) {\n        node.warn(message);\n    };\n}\n\n/**\n * Wrapper for creating status msg object with a payload\n * @param {any} message\n**/\nfunction status(message) {\n    // Create a new object and assign message to payload\n    return {\"payload\":message};\n}","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":180,"wires":[["258349af0878d2e2"],["258349af0878d2e2"],[]]},{"id":"258349af0878d2e2","type":"trigger","z":"2802501265df2123","name":"Trigger Delay","op1":"","op2":"","op1type":"pay","op2type":"pay","duration":"-250","extend":false,"overrideDelay":true,"units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":460,"y":80,"wires":[["1b2387c87e33e1b8"]]},{"id":"4ac5467cd4ac60fd","type":"switch","z":"2802501265df2123","name":"GET Scheduled Lighting Mode","property":"config.mode","propertyType":"msg","rules":[{"t":"eq","v":"DUSK-TO-DAWN","vt":"str"}],"checkall":"false","repair":false,"outputs":1,"x":210,"y":80,"wires":[["258349af0878d2e2"]]},{"id":"df964a73.694328","type":"inject","z":"f9586397.5973","name":"Trigger on start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"true","payloadType":"bool","x":120,"y":40,"wires":[["4469c59cdb2428b0","05bb98ad5bbf37ab","7d7eee51.7878a8","2012dbe6.92df34"]]},{"id":"4469c59cdb2428b0","type":"function","z":"f9586397.5973","name":"Load Module","func":"// Load Module\n// ******************************************************************\n// -*- INPUTS -*-\n// env.MODULE_ID            : module name / ID\n// env.UTILS_GC             : utils global context ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : status\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\n\nconst MODULE_ID = env.get(\"MODULE_ID\");\nconst UTILS = getPathObject(env.get(\"UTILS_GC\") || \"utils\");\n\n// load functionGlobalContext module into global context window\nglobal.set(MODULE_ID, context.global[MODULE_ID]);\n\n// Create a new object and assign message to payload\nfunction status(message, properties = { fill: \"green\", shape: \"dot\" }) {\n    return {\n        \"payload\": {\n            ...properties,\n            text: message\n        }\n    };\n}\n\n// Check if a value exists\nfunction exists(value) {\n\n    var valueType = typeof value;\n\n    // Check for empty string\n    if (valueType === \"string\") {\n        if (value == \"\" || (value.length == 0)) return false;\n    }\n\n    // null check\n    if (value === null) return false;\n\n    // undefined check\n    if (valueType === \"undefined\") return false;\n\n    // Empty object check\n    if (valueType == \"object\") {\n        if (Object.keys(value).length === 0) return false;\n    }\n\n    //return value != (\"\" || undefined || null || (value.length == 0));\n    return true;\n\n}\n\nclass Remote {\n    constructor(remoteId, buttons = {}) {\n        this.remoteId = remoteId;\n        this.buttons = {};\n\n        // Check if buttons is an instance of Remote, if not, convert each entry to a Button instance\n        if (!(buttons instanceof Remote)) {\n            for (const buttonId in buttons) {\n                if (buttons.hasOwnProperty(buttonId)) {\n                    this.addButton(buttonId, buttons[buttonId]);\n                }\n            }\n        }\n    }\n\n    addButton(buttonId, sourceButton = null) {\n        const button = sourceButton instanceof Button ? sourceButton : new Button(buttonId, sourceButton);\n        this.buttons[buttonId] = button;\n        return button;\n    }\n\n    getId() {\n        return this.remoteId;\n    }\n\n    getObject() {\n        const remoteObject = {};\n        Object.keys(this.buttons).forEach(buttonId => {\n            remoteObject[buttonId] = this.buttons[buttonId].getObject();\n        });\n        return remoteObject;\n    }\n}\n\nclass Button {\n    constructor(buttonId, commands = {}) {\n        this.buttonId = buttonId;\n        this.commands = {};\n\n        // Check if commands is an instance of Button, if not, convert each entry to a Command instance\n        if (!(commands instanceof Button)) {\n            for (const commandId in commands) {\n                if (commands.hasOwnProperty(commandId)) {\n                    this.addCommand(commandId, commands[commandId]);\n                }\n            }\n        }\n    }\n\n    addCommand(commandId, sourceCommand = null) {\n        const command = sourceCommand instanceof Command ? sourceCommand : new Command(commandId, sourceCommand);\n        this.commands[commandId] = command;\n        return command;\n    }\n\n    getId() {\n        return this.buttonId;\n    }\n\n    getObject() {\n        const buttonObject = {};\n        Object.keys(this.commands).forEach(commandId => {\n            buttonObject[commandId] = this.commands[commandId].getObject();\n        });\n        return buttonObject;\n    }\n}\n\nclass Command {\n    constructor(commandId, action = {}) {\n        this.commandId = commandId;\n        this.action = action;\n    }\n\n    getId() {\n        return this.commandId;\n    }\n\n    getObject() {\n        return this.action;\n    }\n}\n\n\nclass RemoteInterface {\n    constructor(remoteConfig = {}) {\n        this.remotes = {};\n        if (remoteConfig instanceof Remote) {\n            this.setRemote(remoteConfig.getId(), remoteConfig);\n        } else {\n            const remotes = remoteConfig.remotes || {};\n            Object.keys(remotes).forEach(remoteId => {\n                this.setRemote(remoteId, remotes[remoteId]);\n            });\n        }\n    }\n\n\n    setRemote(remoteId, sourceRemote = null) {\n        if (sourceRemote instanceof Remote) {\n            this.remotes[remoteId] = sourceRemote;\n        } else if (sourceRemote) {\n\n            if (!validateRemote(sourceRemote)) {\n                throw new Error('Invalid remote configuration');\n            }\n            this.remotes[remoteId] = new Remote(remoteId, sourceRemote);\n        } else {\n            this.remotes[remoteId] = new Remote(remoteId);\n        }\n        return this.remotes[remoteId];\n    }\n\n    setButton(remoteId, buttonId, sourceButton = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId); // Ensure remote exists before setting button\n        }\n        const button = this.remotes[remoteId].addButton(buttonId, sourceButton);\n        return button;\n    }\n\n\n    setCommand(remoteId, buttonId, commandId, sourceCommand = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId);\n        }\n        if (!this.remotes[remoteId].buttons[buttonId]) {\n            this.setButton(remoteId, buttonId);\n        }\n        const button = this.remotes[remoteId].buttons[buttonId];\n        const command = button.addCommand(commandId, sourceCommand);\n        return command;\n    }\n\n    getCommand(remoteId, buttonId, commandId) {\n        const remote = this.remotes[remoteId];\n\n        if (!remote) {\n            throw new Error(`Remote not found for ID ${remoteId}`);\n        }\n\n        const button = remote.buttons[buttonId];\n        if (!button) {\n            throw new Error(`Button not found for ID ${buttonId}`);\n        }\n\n        const command = button.commands[commandId];\n        if (!command) {\n            throw new Error(`Command not found for ID ${commandId}`);\n        }\n\n        return command;\n    }\n\n    getRemoteIds() {\n        return Object.keys(this.remotes);\n    }\n\n    // Ignore this, it's for debugging\n    getButtonIds2(remoteId) {\n        if (this.remotes[remoteId]) {\n            return Object.keys(this.remotes[remoteId].buttons);\n        }\n        return [];\n    }\n\n    getButtonIds(remoteId) {\n        if (this.remotes[remoteId]) {\n            if (this.remotes[remoteId] instanceof Button) {\n                // If the value is an instance of Button, return its ID\n                return [this.remotes[remoteId].getId()];\n            } else {\n                // Otherwise, assume it's an object with button IDs as keys\n                return Object.keys(this.remotes[remoteId]);\n            }\n        }\n        return [];\n    }\n\n    getCommandIds(remoteId, buttonId) {\n        if (this.remotes[remoteId] && this.remotes[remoteId].buttons[buttonId]) {\n            return Object.keys(this.remotes[remoteId].buttons[buttonId].commands);\n        }\n        return [];\n    }\n\n    getObject() {\n        return {\n            remotes: this.remotes\n        };\n    }\n}\n\n// Validation functions\nfunction validateRemote(remoteConfig) {\n    if (remoteConfig instanceof Remote) {\n        // If remoteConfig is already an instance of Remote, it's valid\n        return true;\n    } else if (typeof remoteConfig === 'object' && remoteConfig !== null) {\n        const remoteInstance = new Remote('remoteId');\n\n        // Iterate over each button in the remote\n        Object.keys(remoteConfig).forEach(buttonId => {\n            const commandConfigs = remoteConfig[buttonId];\n            const buttonInstance = new Button(buttonId);\n\n            // Iterate over each command in the button\n            Object.keys(commandConfigs).forEach(commandId => {\n                const commandInstance = new Command(commandId, commandConfigs[commandId]);\n\n                // Add the command to the button\n                buttonInstance.addCommand(commandId, commandInstance);\n            });\n\n            // Add the button to the remote\n            remoteInstance.addButton(buttonId, buttonInstance);\n        });\n\n        // Validate the remote instance\n        const isValid = validateRemote(remoteInstance);\n        return isValid;\n    } else {\n        return false; // Invalid remote configuration\n    }\n}\n\n\n\nfunction validateButton(buttonConfig) {\n    if (buttonConfig instanceof Button) {\n        // If buttonConfig is an instance of Button class, we'll validate its commands\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            const command = buttonConfig.commands[commandId];\n            if (!(command instanceof Command)) {\n                return false; // Invalid command within the button\n            }\n            // Optionally, add specific validation logic for command configuration here\n        }\n        return true; // All checks passed\n    } else if (typeof buttonConfig === 'object' && buttonConfig !== null && buttonConfig.hasOwnProperty('commands')) {\n        // If buttonConfig is an object representation, we'll recursively call validateCommand for each command\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            if (!validateCommand(buttonConfig.commands[commandId])) {\n                return false; // Invalid command configuration\n            }\n        }\n        return true; // All checks passed\n    } else {\n        return false; // Invalid button configuration\n    }\n}\n\nfunction validateCommand(commandConfig) {\n    if (commandConfig instanceof Command) {\n        // If commandConfig is an instance of Command class, it's valid\n        return true;\n    } else if (typeof commandConfig === 'object' && commandConfig !== null) {\n        // If commandConfig is an object representation, we'll check its properties\n        if (commandConfig.hasOwnProperty('commandId') && commandConfig.hasOwnProperty('action')) {\n            // Optionally, add specific validation logic for command configuration here\n            return true; // All checks passed\n        }\n    }\n    return false; // Invalid command configuration\n}\n\nclass DeviceManager {\n    constructor(mapping = {}) {\n        this.devices = mapping;\n    }\n\n    setDevice(device_id, data) {\n        this.devices[device_id] = data;\n    }\n\n    getDevice(device_id) {\n        return this.devices[device_id];\n    }\n\n    removeDevice(device_id) {\n        if (this.devices.hasOwnProperty(device_id)) {\n            delete this.devices[device_id];\n        }\n    }\n\n    getDevices() {\n        return this.devices;\n    }\n}\n\nclass DebounceTimerManager {\n    constructor() {\n        this.timers = {};\n    }\n\n    createTimer(attributeValues, debounceTimers, callback, delay) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            nestedObject[attrValue] = nestedObject[attrValue] || {};\n            nestedObject = nestedObject[attrValue];\n        }\n        if (!nestedObject.hasOwnProperty('timer')) {\n            nestedObject.timer = setTimeout(callback, delay);\n        }\n    }\n\n    updateTimer(attributeValues, debounceTimers, callback, delay) {\n        this.clearTimer(attributeValues, debounceTimers);\n        this.createTimer(attributeValues, debounceTimers, callback, delay);\n    }\n\n    clearTimer(attributeValues, debounceTimers) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            if (!nestedObject[attrValue]) {\n                return;\n            }\n            nestedObject = nestedObject[attrValue];\n        }\n        if (nestedObject.timer) {\n            clearTimeout(nestedObject.timer);\n            delete nestedObject.timer;\n        }\n    }\n}\n\n// Append character to end of string if not present\nfunction append(value, character) {\n\n    // Check if end of string matches character\n    if (value.charAt(value.length - character.length) !== character) {\n\n        // Append character if not found\n        value = value + character;\n    }\n\n    return value;\n\n}\n\n// Remove character from end of string\nfunction abate(value, character) {\n\n    // Check if end of string matches character(s) \n    if (value.charAt(value.length - character.length) === character) {\n\n        // Abate character if found\n        value = value.substring(0, value.length - character.length);\n    }\n\n    return value;\n\n}\n\nfunction getPathObject(path) {\n\n    return {\n        REPOSITORY: append(path, \".\"),\n        OBJECT: abate(path, \".\")\n    };\n}\n\n// Cast Object to array\nfunction castToArray(value) {\n    return (Array.isArray(value)) ? value : [value];\n}\n\n// Function to get attribute values from event data\nfunction getEventAttributes(event, attributes) {\n    return attributes.map(attr => event[attr]);\n}\n\nfunction cleanString(str) {\n    return str.replace(/^\"+|\"+$/g, '');\n}\n\nvar loaded = false;\nvar gc = global.keys();\n\n// Check if module object is loaded\nfor (let i = 0; i < gc.length; i++) {\n\n    if (gc[i] === MODULE_ID) loaded = true;\n\n}\n\n// General\nglobal.set(`${UTILS.REPOSITORY}exists`, exists);\nglobal.set(`${UTILS.REPOSITORY}getEventAttributes`, getEventAttributes);\n\n// RemoteInterface\nglobal.set(`${UTILS.REPOSITORY}RemoteInterface`, RemoteInterface);\nglobal.set(`${UTILS.REPOSITORY}Remote`, Remote);\nglobal.set(`${UTILS.REPOSITORY}Button`, Button);\nglobal.set(`${UTILS.REPOSITORY}Command`, Command);\n\n// Device Manager\nglobal.set(`${UTILS.REPOSITORY}DeviceManager`, DeviceManager);\n\n// Timer Managers\nglobal.set(`${UTILS.REPOSITORY}DebounceTimerManager`, DebounceTimerManager);\n\nglobal.set(`${UTILS.REPOSITORY}status`, status);\nglobal.set(`${UTILS.REPOSITORY}castToArray`, castToArray);\nglobal.set(`${UTILS.REPOSITORY}cleanString`, cleanString);\n\n// Return loaded status\nif (loaded) return status(`Module Loaded [${MODULE_ID}]`);\n\n// Return non-loaded status\nreturn status(`Module Not loaded [${MODULE_ID}]`);\n\n/*** END ***/","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":40,"wires":[[]]},{"id":"8d636e35e38fbe0d","type":"function","z":"f9586397.5973","name":"domain","func":"// Domain Logic\n// General Use-Case Domain Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.domain       : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\n\nclass Entity {\n    constructor(entityObject) {\n        this._aliases = entityObject.aliases || [];\n        this._areaId = entityObject.area_id || null;\n        this._capabilities = entityObject.capabilities || null;\n        this._configEntryId = entityObject.config_entry_id || null;\n        this._deviceClass = entityObject.device_class || null;\n        this._deviceId = entityObject.device_id || null;\n        this._disabledBy = entityObject.disabled_by || null;\n        this._entityCategory = entityObject.entity_category || null;\n        this._entityId = entityObject.entity_id || null;\n        this._hiddenBy = entityObject.hidden_by || null;\n        this._icon = entityObject.icon || null;\n        this._id = entityObject.id || null;\n        this._hasEntityName = entityObject.has_entity_name || null;\n        this._name = entityObject.name || null;\n        this._options = entityObject.options || null;\n        this._originalDeviceClass = entityObject.original_device_class || null;\n        this._originalIcon = entityObject.original_icon || null;\n        this._originalName = entityObject.original_name || null;\n        this._platform = entityObject.platform || null;\n        this._supportedFeatures = entityObject.supported_features || null;\n        this._translationKey = entityObject.translation_key || null;\n        this._uniqueId = entityObject.unique_id || null;\n        this._unitOfMeasurement = entityObject.unit_of_measurement || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get areaId() {\n        return this._areaId;\n    }\n\n    get capabilities() {\n        return this._capabilities;\n    }\n\n    get configEntryId() {\n        return this._configEntryId;\n    }\n\n    get deviceClass() {\n        return this._deviceClass;\n    }\n\n    get deviceId() {\n        return this._deviceId;\n    }\n\n    get disabledBy() {\n        return this._disabledBy;\n    }\n\n    get entityCategory() {\n        return this._entityCategory;\n    }\n\n    get entityId() {\n        return this._entityId;\n    }\n\n    get hiddenBy() {\n        return this._hiddenBy;\n    }\n\n    get icon() {\n        return this._icon;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get hasEntityName() {\n        return this._hasEntityName;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    get originalDeviceClass() {\n        return this._originalDeviceClass;\n    }\n\n    get originalIcon() {\n        return this._originalIcon;\n    }\n\n    get originalName() {\n        return this._originalName;\n    }\n\n    get platform() {\n        return this._platform;\n    }\n\n    get supportedFeatures() {\n        return this._supportedFeatures;\n    }\n\n    get translationKey() {\n        return this._translationKey;\n    }\n\n    get uniqueId() {\n        return this._uniqueId;\n    }\n\n    get unitOfMeasurement() {\n        return this._unitOfMeasurement;\n    }\n}\n\nclass Area {\n    constructor(areaObject) {\n        this._aliases = areaObject.aliases || [];\n        this._name = areaObject.name || null;\n        this._id = areaObject.id || null;\n        this._picture = areaObject.picture || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get picture() {\n        return this._picture;\n    }\n}\n\nclass Device {\n    constructor(deviceObject) {\n        this._area_id = deviceObject.area_id || null;\n        this._config_entries = deviceObject.config_entries || [];\n        this._configuration_url = deviceObject.configuration_url || null;\n        this._connections = deviceObject.connections || [];\n        this._disabled_by = deviceObject.disabled_by || null;\n        this._entry_type = deviceObject.entry_type || null;\n        this._hw_version = deviceObject.hw_version || null;\n        this._id = deviceObject.id || null;\n        this._identifiers = deviceObject.identifiers || [];\n        this._manufacturer = deviceObject.manufacturer || null;\n        this._model = deviceObject.model || null;\n        this._name_by_user = deviceObject.name_by_user || null;\n        this._name = deviceObject.name || null;\n        this._sw_version = deviceObject.sw_version || null;\n        this._via_device_id = deviceObject.via_device_id || null;\n    }\n\n    get area_id() {\n        return this._area_id;\n    }\n\n    get config_entries() {\n        return this._config_entries;\n    }\n\n    get configuration_url() {\n        return this._configuration_url;\n    }\n\n    get connections() {\n        return this._connections;\n    }\n\n    get disabled_by() {\n        return this._disabled_by;\n    }\n\n    get entry_type() {\n        return this._entry_type;\n    }\n\n    get hw_version() {\n        return this._hw_version;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get identifiers() {\n        return this._identifiers;\n    }\n\n    get manufacturer() {\n        return this._manufacturer;\n    }\n\n    get model() {\n        return this._model;\n    }\n\n    get name_by_user() {\n        return this._name_by_user;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get sw_version() {\n        return this._sw_version;\n    }\n\n    get via_device_id() {\n        return this._via_device_id;\n    }\n}\n\n\nconst domain = {\n\n    models: {\n        Entity,\n        Area,\n        Device\n    }\n}\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":720,"wires":[[]]},{"id":"b85b43214d3bf1da","type":"function","z":"f9586397.5973","name":"ports","func":"// Domain Logic\n// General Use-Case Domain Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.domain       : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\n\nclass Entity {\n    constructor(entityObject) {\n        this._aliases = entityObject.aliases || [];\n        this._areaId = entityObject.area_id || null;\n        this._capabilities = entityObject.capabilities || null;\n        this._configEntryId = entityObject.config_entry_id || null;\n        this._deviceClass = entityObject.device_class || null;\n        this._deviceId = entityObject.device_id || null;\n        this._disabledBy = entityObject.disabled_by || null;\n        this._entityCategory = entityObject.entity_category || null;\n        this._entityId = entityObject.entity_id || null;\n        this._hiddenBy = entityObject.hidden_by || null;\n        this._icon = entityObject.icon || null;\n        this._id = entityObject.id || null;\n        this._hasEntityName = entityObject.has_entity_name || null;\n        this._name = entityObject.name || null;\n        this._options = entityObject.options || null;\n        this._originalDeviceClass = entityObject.original_device_class || null;\n        this._originalIcon = entityObject.original_icon || null;\n        this._originalName = entityObject.original_name || null;\n        this._platform = entityObject.platform || null;\n        this._supportedFeatures = entityObject.supported_features || null;\n        this._translationKey = entityObject.translation_key || null;\n        this._uniqueId = entityObject.unique_id || null;\n        this._unitOfMeasurement = entityObject.unit_of_measurement || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get areaId() {\n        return this._areaId;\n    }\n\n    get capabilities() {\n        return this._capabilities;\n    }\n\n    get configEntryId() {\n        return this._configEntryId;\n    }\n\n    get deviceClass() {\n        return this._deviceClass;\n    }\n\n    get deviceId() {\n        return this._deviceId;\n    }\n\n    get disabledBy() {\n        return this._disabledBy;\n    }\n\n    get entityCategory() {\n        return this._entityCategory;\n    }\n\n    get entityId() {\n        return this._entityId;\n    }\n\n    get hiddenBy() {\n        return this._hiddenBy;\n    }\n\n    get icon() {\n        return this._icon;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get hasEntityName() {\n        return this._hasEntityName;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    get originalDeviceClass() {\n        return this._originalDeviceClass;\n    }\n\n    get originalIcon() {\n        return this._originalIcon;\n    }\n\n    get originalName() {\n        return this._originalName;\n    }\n\n    get platform() {\n        return this._platform;\n    }\n\n    get supportedFeatures() {\n        return this._supportedFeatures;\n    }\n\n    get translationKey() {\n        return this._translationKey;\n    }\n\n    get uniqueId() {\n        return this._uniqueId;\n    }\n\n    get unitOfMeasurement() {\n        return this._unitOfMeasurement;\n    }\n}\n\nclass Area {\n    constructor(areaObject) {\n        this._aliases = areaObject.aliases || [];\n        this._name = areaObject.name || null;\n        this._id = areaObject.id || null;\n        this._picture = areaObject.picture || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get picture() {\n        return this._picture;\n    }\n}\n\nclass Device {\n    constructor(deviceObject) {\n        this._area_id = deviceObject.area_id || null;\n        this._config_entries = deviceObject.config_entries || [];\n        this._configuration_url = deviceObject.configuration_url || null;\n        this._connections = deviceObject.connections || [];\n        this._disabled_by = deviceObject.disabled_by || null;\n        this._entry_type = deviceObject.entry_type || null;\n        this._hw_version = deviceObject.hw_version || null;\n        this._id = deviceObject.id || null;\n        this._identifiers = deviceObject.identifiers || [];\n        this._manufacturer = deviceObject.manufacturer || null;\n        this._model = deviceObject.model || null;\n        this._name_by_user = deviceObject.name_by_user || null;\n        this._name = deviceObject.name || null;\n        this._sw_version = deviceObject.sw_version || null;\n        this._via_device_id = deviceObject.via_device_id || null;\n    }\n\n    get area_id() {\n        return this._area_id;\n    }\n\n    get config_entries() {\n        return this._config_entries;\n    }\n\n    get configuration_url() {\n        return this._configuration_url;\n    }\n\n    get connections() {\n        return this._connections;\n    }\n\n    get disabled_by() {\n        return this._disabled_by;\n    }\n\n    get entry_type() {\n        return this._entry_type;\n    }\n\n    get hw_version() {\n        return this._hw_version;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get identifiers() {\n        return this._identifiers;\n    }\n\n    get manufacturer() {\n        return this._manufacturer;\n    }\n\n    get model() {\n        return this._model;\n    }\n\n    get name_by_user() {\n        return this._name_by_user;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get sw_version() {\n        return this._sw_version;\n    }\n\n    get via_device_id() {\n        return this._via_device_id;\n    }\n}\n\n\nconst models = {\n    Entity,\n    Area,\n    Device\n}\n\nmsg.payload.domain.models = models;\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":290,"y":760,"wires":[[]]},{"id":"5958ba5595c9bb1a","type":"function","z":"f9586397.5973","name":"adapters","func":"// Domain Logic\n// General Use-Case Domain Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.domain       : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\n\nclass Entity {\n    constructor(entityObject) {\n        this._aliases = entityObject.aliases || [];\n        this._areaId = entityObject.area_id || null;\n        this._capabilities = entityObject.capabilities || null;\n        this._configEntryId = entityObject.config_entry_id || null;\n        this._deviceClass = entityObject.device_class || null;\n        this._deviceId = entityObject.device_id || null;\n        this._disabledBy = entityObject.disabled_by || null;\n        this._entityCategory = entityObject.entity_category || null;\n        this._entityId = entityObject.entity_id || null;\n        this._hiddenBy = entityObject.hidden_by || null;\n        this._icon = entityObject.icon || null;\n        this._id = entityObject.id || null;\n        this._hasEntityName = entityObject.has_entity_name || null;\n        this._name = entityObject.name || null;\n        this._options = entityObject.options || null;\n        this._originalDeviceClass = entityObject.original_device_class || null;\n        this._originalIcon = entityObject.original_icon || null;\n        this._originalName = entityObject.original_name || null;\n        this._platform = entityObject.platform || null;\n        this._supportedFeatures = entityObject.supported_features || null;\n        this._translationKey = entityObject.translation_key || null;\n        this._uniqueId = entityObject.unique_id || null;\n        this._unitOfMeasurement = entityObject.unit_of_measurement || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get areaId() {\n        return this._areaId;\n    }\n\n    get capabilities() {\n        return this._capabilities;\n    }\n\n    get configEntryId() {\n        return this._configEntryId;\n    }\n\n    get deviceClass() {\n        return this._deviceClass;\n    }\n\n    get deviceId() {\n        return this._deviceId;\n    }\n\n    get disabledBy() {\n        return this._disabledBy;\n    }\n\n    get entityCategory() {\n        return this._entityCategory;\n    }\n\n    get entityId() {\n        return this._entityId;\n    }\n\n    get hiddenBy() {\n        return this._hiddenBy;\n    }\n\n    get icon() {\n        return this._icon;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get hasEntityName() {\n        return this._hasEntityName;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    get originalDeviceClass() {\n        return this._originalDeviceClass;\n    }\n\n    get originalIcon() {\n        return this._originalIcon;\n    }\n\n    get originalName() {\n        return this._originalName;\n    }\n\n    get platform() {\n        return this._platform;\n    }\n\n    get supportedFeatures() {\n        return this._supportedFeatures;\n    }\n\n    get translationKey() {\n        return this._translationKey;\n    }\n\n    get uniqueId() {\n        return this._uniqueId;\n    }\n\n    get unitOfMeasurement() {\n        return this._unitOfMeasurement;\n    }\n}\n\nclass Area {\n    constructor(areaObject) {\n        this._aliases = areaObject.aliases || [];\n        this._name = areaObject.name || null;\n        this._id = areaObject.id || null;\n        this._picture = areaObject.picture || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get picture() {\n        return this._picture;\n    }\n}\n\nclass Device {\n    constructor(deviceObject) {\n        this._area_id = deviceObject.area_id || null;\n        this._config_entries = deviceObject.config_entries || [];\n        this._configuration_url = deviceObject.configuration_url || null;\n        this._connections = deviceObject.connections || [];\n        this._disabled_by = deviceObject.disabled_by || null;\n        this._entry_type = deviceObject.entry_type || null;\n        this._hw_version = deviceObject.hw_version || null;\n        this._id = deviceObject.id || null;\n        this._identifiers = deviceObject.identifiers || [];\n        this._manufacturer = deviceObject.manufacturer || null;\n        this._model = deviceObject.model || null;\n        this._name_by_user = deviceObject.name_by_user || null;\n        this._name = deviceObject.name || null;\n        this._sw_version = deviceObject.sw_version || null;\n        this._via_device_id = deviceObject.via_device_id || null;\n    }\n\n    get area_id() {\n        return this._area_id;\n    }\n\n    get config_entries() {\n        return this._config_entries;\n    }\n\n    get configuration_url() {\n        return this._configuration_url;\n    }\n\n    get connections() {\n        return this._connections;\n    }\n\n    get disabled_by() {\n        return this._disabled_by;\n    }\n\n    get entry_type() {\n        return this._entry_type;\n    }\n\n    get hw_version() {\n        return this._hw_version;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get identifiers() {\n        return this._identifiers;\n    }\n\n    get manufacturer() {\n        return this._manufacturer;\n    }\n\n    get model() {\n        return this._model;\n    }\n\n    get name_by_user() {\n        return this._name_by_user;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get sw_version() {\n        return this._sw_version;\n    }\n\n    get via_device_id() {\n        return this._via_device_id;\n    }\n}\n\n\nconst models = {\n    Entity,\n    Area,\n    Device\n}\n\nmsg.payload.domain.models = models;\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":800,"wires":[[]]},{"id":"9a27cdc622ef191c","type":"function","z":"f9586397.5973","name":"Utility Functions","func":"/** Utility Functions **/\n\n// Default to utils object if no UTIL_GC environment variable passed\nconst UTILS = getPathObject(env.get(\"UTIL_GC\") || \"utils\");\nconst object_id = UTILS.REPOSITORY;\n\nconst SOURCE = getPathObject(env.get(\"GLOBAL_ID\") || \"system\");\n\nconst ENTITIES = getPathObject(`${SOURCE.REPOSITORY}entities`);\nconst AREAS = getPathObject(`${SOURCE.REPOSITORY}areas`);\nconst DEVICES = getPathObject(`${SOURCE.REPOSITORY}devices`);\nconst OCCUPANCY = getPathObject(`${SOURCE.REPOSITORY}occupancy`);\nconst PRESENCE = getPathObject(`${SOURCE.REPOSITORY}presence`);\n\n// For testing / debugging purposes\nfunction healthCheck () {\n    return true;\n}\n\n// For global context path setup\nfunction getPathObject(path) {\n\n    return {\n        REPOSITORY: append(path, \".\"),\n        OBJECT: abate(path, \".\")\n    };\n}\n\n// Rounding function with precision\nfunction round(value, precision) {\n\n    // Return raw value if no precision passed\n    if (!exists(precision)) return value;\n\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n// Check if entity_id was passed, and remove domain\nfunction getGlobalID(globalID) {\n\n    // If an entity_id was passed, remove domain\n    if (exists(globalID) && globalID.includes(\".\")) {\n\n        globalID = globalID.split(\".\")[1];\n\n    }\n\n    // Return global ID\n    return globalID;\n}\n\n// Check if a value exists\nfunction exists(value) {\n\n    var valueType = typeof value;\n\n    // Check for empty string\n    if (valueType === \"string\") {\n        if (value == \"\" || (value.length == 0)) return false;\n    }\n\n    // null check\n    if (value === null) return false;\n\n    // undefined check\n    if (valueType === \"undefined\") return false;\n\n    // Empty object check\n    if (valueType == \"object\") {\n        if (Object.keys(value).length === 0) return false;\n    }\n\n    //return value != (\"\" || undefined || null || (value.length == 0));\n    return true;\n\n}\n\n// Create a new object and assign message to payload\nfunction status(message, properties = { fill: \"green\", shape: \"dot\" }) {\n    return {\n        \"payload\": {\n            ...properties,\n            text: message\n        }\n    };\n}\n\n// Create a new object and assign message to payload (finish for me pls <3)\nfunction statusOld(message) {\n    return { \"payload\": message };\n}\n\n// Sets an object attribute to a given value\nfunction setAttribute (property, attribute, value) {\n    \n    // Check if msg property is an object\n    if (!(typeof property === 'object')) {\n        property = {};\n    }\n    \n    // If attribute not passed, default to payload\n    if (!exists(attribute)) {\n        attribute = \"payload\";\n    }\n\n    // Set value\n    property[attribute] = value;\n\n    return property;\n\n}\n\n// Append character to end of string if not present\nfunction append(value, character) {\n\n    // Check if end of string matches character\n    if (value.charAt(value.length - character.length) !== character) {\n\n        // Append character if not found\n        value = value + character;\n    }\n\n    return value;\n\n}\n\n// Remove character from end of string\nfunction abate(value, character) {\n\n    // Check if end of string matches character(s) \n    if (value.charAt(value.length - character.length) === character) {\n\n        // Abate character if found\n        value = value.substring(0, value.length - character.length);\n    }\n\n    return value;\n\n}\n\n// Cast Object to array\nfunction castToArray(value) {\n    return (Array.isArray(value)) ? value : [value];\n}\n\n// Function to get attribute values from event data\nfunction getEventAttributes(event, attributes) {\n    return attributes.map(attr => event[attr]);\n}\n\n// Function to get an entity from an entities object\nfunction getEntity(entity_id) {\n    return new Promise((resolve, reject) => {\n\n        // Timeout value in milliseconds\n        const TIMEOUT = 10000; \n\n        const entities = global.get(ENTITIES.OBJECT);\n        //const entities = EntitiesRepository.getObject();\n\n        // Check if entities are already available\n        if (exists(entities)) {\n            resolve(entities[entity_id]);\n        } else {\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Entities not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the entities object and resolve the promise\n                    const loaded_entities = global.get(ENTITIES.OBJECT);\n                    //const loaded_entities = EntitiesRepository.getObject();\n                    if (loaded_entities) {\n                        // Fetch the entity from the entities object\n                        resolve(loaded_entities[entity_id]);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(ENTITIES.OBJECT); \n                    }\n                    // Entities object not available yet, retrying...\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(ENTITIES.OBJECT, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for entities...\");\n        }\n    });\n}\n\n// Function to get an object from global context\nfunction waitForGlobalContext(global_id, TIMEOUT = 10000) {\n    return new Promise((resolve, reject) => {\n\n        const object_value = global.get(global_id);\n\n        // Check if value is already available\n        if (exists(object_value)) {\n            resolve(object_value);\n        } else {\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Object not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the object and resolve the promise\n                    const loaded_object_value = global.get(global_id);\n                    node.warn(`Reloading object: ${loaded_object_value}`);\n                    if (loaded_object_value) {\n                        node.warn(`Object loaded (${global_id}): ${loaded_object_value}`);\n                        resolve(loaded_object_value);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(global_id);\n                    }\n                    node.warn(`Object not available yet, retrying...`);\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(global_id, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for object...\");\n        }\n    });\n}\n\nfunction getGlobalAsync(globalId, timeout = 10000) {\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            const obj = global.get(globalId);\n            if (obj !== undefined) {\n                clearInterval(interval);\n                resolve(obj);\n            }\n        }, 1000); // Check every second\n\n        setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timeout reached while waiting for global context object: ${globalId}`));\n        }, timeout);\n    });\n}\n\n\n//**API **//\n\nfunction createResponseObject(response_code, message) {\n    return {\n        \"response_code\": response_code,\n        \"data\": message\n    }\n}\n\nfunction generateToggleSwitchValueTemplate(toggleEntityId, triggerEntityId, triggerEntityState) {\n    return `{% if is_state('${toggleEntityId}', 'on') %}\n        {{ is_state('${triggerEntityId}', '${triggerEntityState}') }}\n        {% else %}\n        {{ is_state('${toggleEntityId}', 'on') }}\n        {% endif %}`;\n}\n\nfunction generateTemplateSwitchObject(switchId, friendlyName, valueTemplate, turnOnAction, turnOffAction, iconTemplate) {\n    const switchObject = {\n        [switchId]: {\n            friendly_name: friendlyName,\n            value_template: valueTemplate,\n            turn_on: [turnOnAction],\n            turn_off: [turnOffAction],\n            icon_template: iconTemplate\n        }\n    };\n    return switchObject;\n}\n\nfunction generateYamlTemplateObject(entity_type) {\n    const yamlObject = {\n        platform: 'template',\n        [entity_type]: {}\n    };\n    return [yamlObject];\n}\n\nfunction addEntityToTemplateObject(yamlObject, entity_type, entity) {\n    yamlObject[0][entity_type] = {\n        ...yamlObject[0][entity_type],\n        ...entity\n    };\n    return yamlObject;\n}\n\nfunction createTurnOnOffObject(service, data = {}) {\n    return {\n        turn_on: [\n            {\n                service: service,\n                ...data.turn_on // Spread additional turn_on data if provided\n            }\n        ],\n        turn_off: [\n            {\n                service: service,\n                ...data.turn_off // Spread additional turn_off data if provided\n            }\n        ]\n    };\n}\n\nfunction createIconTemplate(onStateIcon, offStateIcon = null, triggerEntityId = null, triggerEntityState = null) {\n    if (!offStateIcon) {\n        return `mdi:${onStateIcon}`;\n    } else {\n        return `{% if is_state('${triggerEntityId}', '${triggerEntityState}') %}\n            mdi:${onStateIcon}\n        {% else %}\n            mdi:${offStateIcon}\n        {% endif %}`;\n    }\n}\n\nfunction getFileNameFromPath(filePath) {\n    const parts = filePath.split('/');\n    return parts[parts.length - 1];\n}\n\nfunction mapArrayToDict(entities, key) {\n    const entityDict = {};\n\n    entities.forEach(entity => {\n        entityDict[entity[key]] = entity;\n    });\n\n    return entityDict;\n}\n\nfunction currentState(entityId) {\n    return global.get(\"homeassistant.homeAssistant.states\")[entityId];\n}\n\nclass Remote {\n    constructor(remoteId, buttons = {}) {\n        this.remoteId = remoteId;\n        this.buttons = {};\n\n        // Check if buttons is an instance of Remote, if not, convert each entry to a Button instance\n        if (!(buttons instanceof Remote)) {\n            for (const buttonId in buttons) {\n                if (buttons.hasOwnProperty(buttonId)) {\n                    this.addButton(buttonId, buttons[buttonId]);\n                }\n            }\n        }\n    }\n\n    addButton(buttonId, sourceButton = null) {\n        const button = sourceButton instanceof Button ? sourceButton : new Button(buttonId, sourceButton);\n        this.buttons[buttonId] = button;\n        return button;\n    }\n\n    getId() {\n        return this.remoteId;\n    }\n\n    getObject() {\n        const remoteObject = {};\n        Object.keys(this.buttons).forEach(buttonId => {\n            remoteObject[buttonId] = this.buttons[buttonId].getObject();\n        });\n        return remoteObject;\n    }\n}\n\nclass Button {\n    constructor(buttonId, commands = {}) {\n        this.buttonId = buttonId;\n        this.commands = {};\n\n        // Check if commands is an instance of Button, if not, convert each entry to a Command instance\n        if (!(commands instanceof Button)) {\n            for (const commandId in commands) {\n                if (commands.hasOwnProperty(commandId)) {\n                    this.addCommand(commandId, commands[commandId]);\n                }\n            }\n        }\n    }\n\n    addCommand(commandId, sourceCommand = null) {\n        const command = sourceCommand instanceof Command ? sourceCommand : new Command(commandId, sourceCommand);\n        this.commands[commandId] = command;\n        return command;\n    }\n\n    getId() {\n        return this.buttonId;\n    }\n\n    getObject() {\n        const buttonObject = {};\n        Object.keys(this.commands).forEach(commandId => {\n            buttonObject[commandId] = this.commands[commandId].getObject();\n        });\n        return buttonObject;\n    }\n}\n\nclass Command {\n    constructor(commandId, action = {}) {\n        this.commandId = commandId;\n        this.action = action;\n    }\n\n    getId() {\n        return this.commandId;\n    }\n\n    getObject() {\n        return this.action;\n    }\n}\n\n\nclass RemoteInterface {\n    constructor(remoteConfig = {}) {\n        this.remotes = {};\n        if (remoteConfig instanceof Remote) {\n            this.setRemote(remoteConfig.getId(), remoteConfig);\n        } else {\n            const remotes = remoteConfig.remotes || {};\n            Object.keys(remotes).forEach(remoteId => {\n                this.setRemote(remoteId, remotes[remoteId]);\n            });\n        }\n    }\n\n\n    setRemote(remoteId, sourceRemote = null) {\n        if (sourceRemote instanceof Remote) {\n            this.remotes[remoteId] = sourceRemote;\n        } else if (sourceRemote) {\n\n            if (!validateRemote(sourceRemote)) {\n                throw new Error('Invalid remote configuration');\n            }\n            this.remotes[remoteId] = new Remote(remoteId, sourceRemote);\n        } else {\n            this.remotes[remoteId] = new Remote(remoteId);\n        }\n        return this.remotes[remoteId];\n    }\n\n    setButton(remoteId, buttonId, sourceButton = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId); // Ensure remote exists before setting button\n        }\n        const button = this.remotes[remoteId].addButton(buttonId, sourceButton);\n        return button;\n    }\n\n\n    setCommand(remoteId, buttonId, commandId, sourceCommand = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId);\n        }\n        if (!this.remotes[remoteId].buttons[buttonId]) {\n            this.setButton(remoteId, buttonId);\n        }\n        const button = this.remotes[remoteId].buttons[buttonId];\n        const command = button.addCommand(commandId, sourceCommand);\n        return command;\n    }\n\n    getCommand(remoteId, buttonId, commandId) {\n        const remote = this.remotes[remoteId];\n\n        if (!remote) {\n            throw new Error(`Remote not found for ID ${remoteId}`);\n        }\n\n        const button = remote.buttons[buttonId];\n        if (!button) {\n            throw new Error(`Button not found for ID ${buttonId}`);\n        }\n\n        const command = button.commands[commandId];\n        if (!command) {\n            throw new Error(`Command not found for ID ${commandId}`);\n        }\n\n        return command;\n    }\n\n    getRemoteIds() {\n        return Object.keys(this.remotes);\n    }\n\n    // Ignore this, it's for debugging\n    getButtonIds2(remoteId) {\n        if (this.remotes[remoteId]) {\n            return Object.keys(this.remotes[remoteId].buttons);\n        }\n        return [];\n    }\n\n    getButtonIds(remoteId) {\n        if (this.remotes[remoteId]) {\n            if (this.remotes[remoteId] instanceof Button) {\n                // If the value is an instance of Button, return its ID\n                return [this.remotes[remoteId].getId()];\n            } else {\n                // Otherwise, assume it's an object with button IDs as keys\n                return Object.keys(this.remotes[remoteId]);\n            }\n        }\n        return [];\n    }\n\n    getCommandIds(remoteId, buttonId) {\n        if (this.remotes[remoteId] && this.remotes[remoteId].buttons[buttonId]) {\n            return Object.keys(this.remotes[remoteId].buttons[buttonId].commands);\n        }\n        return [];\n    }\n\n    getObject() {\n        return {\n            remotes: this.remotes\n        };\n    }\n}\n\n// Validation functions\nfunction validateRemote(remoteConfig) {\n    if (remoteConfig instanceof Remote) {\n        // If remoteConfig is already an instance of Remote, it's valid\n        return true;\n    } else if (typeof remoteConfig === 'object' && remoteConfig !== null) {\n        const remoteInstance = new Remote('remoteId');\n\n        // Iterate over each button in the remote\n        Object.keys(remoteConfig).forEach(buttonId => {\n            const commandConfigs = remoteConfig[buttonId];\n            const buttonInstance = new Button(buttonId);\n\n            // Iterate over each command in the button\n            Object.keys(commandConfigs).forEach(commandId => {\n                const commandInstance = new Command(commandId, commandConfigs[commandId]);\n\n                // Add the command to the button\n                buttonInstance.addCommand(commandId, commandInstance);\n            });\n\n            // Add the button to the remote\n            remoteInstance.addButton(buttonId, buttonInstance);\n        });\n\n        // Validate the remote instance\n        const isValid = validateRemote(remoteInstance);\n        return isValid;\n    } else {\n        return false; // Invalid remote configuration\n    }\n}\n\n\n\nfunction validateButton(buttonConfig) {\n    if (buttonConfig instanceof Button) {\n        // If buttonConfig is an instance of Button class, we'll validate its commands\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            const command = buttonConfig.commands[commandId];\n            if (!(command instanceof Command)) {\n                return false; // Invalid command within the button\n            }\n            // Optionally, add specific validation logic for command configuration here\n        }\n        return true; // All checks passed\n    } else if (typeof buttonConfig === 'object' && buttonConfig !== null && buttonConfig.hasOwnProperty('commands')) {\n        // If buttonConfig is an object representation, we'll recursively call validateCommand for each command\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            if (!validateCommand(buttonConfig.commands[commandId])) {\n                return false; // Invalid command configuration\n            }\n        }\n        return true; // All checks passed\n    } else {\n        return false; // Invalid button configuration\n    }\n}\n\nfunction validateCommand(commandConfig) {\n    if (commandConfig instanceof Command) {\n        // If commandConfig is an instance of Command class, it's valid\n        return true;\n    } else if (typeof commandConfig === 'object' && commandConfig !== null) {\n        // If commandConfig is an object representation, we'll check its properties\n        if (commandConfig.hasOwnProperty('commandId') && commandConfig.hasOwnProperty('action')) {\n            // Optionally, add specific validation logic for command configuration here\n            return true; // All checks passed\n        }\n    }\n    return false; // Invalid command configuration\n}\n\nclass DeviceManager {\n    constructor(mapping = {}) {\n        this.devices = mapping;\n    }\n\n    setDevice(device_id, data) {\n        this.devices[device_id] = data;\n    }\n\n    getDevice(device_id) {\n        return this.devices[device_id];\n    }\n\n    removeDevice(device_id) {\n        if (this.devices.hasOwnProperty(device_id)) {\n            delete this.devices[device_id];\n        }\n    }\n\n    getDevices() {\n        return this.devices;\n    }\n}\n\nclass DebounceTimerManager {\n    constructor() {\n        this.timers = {};\n    }\n\n    createTimer(attributeValues, debounceTimers, callback, delay) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            nestedObject[attrValue] = nestedObject[attrValue] || {};\n            nestedObject = nestedObject[attrValue];\n        }\n        if (!nestedObject.hasOwnProperty('timer')) {\n            nestedObject.timer = setTimeout(callback, delay);\n        }\n    }\n\n    updateTimer(attributeValues, debounceTimers, callback, delay) {\n        this.clearTimer(attributeValues, debounceTimers);\n        this.createTimer(attributeValues, debounceTimers, callback, delay);\n    }\n\n    clearTimer(attributeValues, debounceTimers) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            if (!nestedObject[attrValue]) {\n                return;\n            }\n            nestedObject = nestedObject[attrValue];\n        }\n        if (nestedObject.timer) {\n            clearTimeout(nestedObject.timer);\n            delete nestedObject.timer;\n        }\n    }\n}\n\nclass WaitTimerManager {\n    constructor() {\n        this.timers = {};\n        this.callbacks = {}; // Store callbacks for each event or condition\n        this.checkInterval = 1000; // Interval in milliseconds for checking existence\n    }\n\n    // Create a timer that waits for the item to exist\n    createWaitTimer(item, callback, timeout = null) {\n        // Check if the item already has callbacks registered\n        if (!this.callbacks[item]) {\n            this.callbacks[item] = [];\n        }\n\n        // Add the new callback to the list of callbacks for this item\n        this.callbacks[item].push(callback);\n\n        // If the timer doesn't exist, create it\n        if (!this.timers[item]) {\n            if (timeout !== null) {\n                // If timeout is provided, clear the timer after the specified duration\n                this.timers[item] = setTimeout(() => {\n                    this.clearWaitTimer(item);\n                    this.invokeCallbacks(item, new Error(`Timeout waiting for ${item}`));\n                }, timeout);\n            }\n\n            // Check for the existence of the item periodically\n            this.checkExistence(item);\n        }\n    }\n\n    // Check for the existence of the item periodically\n    checkExistence(item) {\n        const interval = setInterval(() => {\n            if (global.get(item) !== undefined) {\n                clearInterval(interval);\n                this.invokeCallbacks(item, null); // Item found\n            }\n        }, this.checkInterval);\n    }\n\n    // Invoke all callbacks associated with the item\n    invokeCallbacks(item, error) {\n        if (this.callbacks[item]) {\n            this.callbacks[item].forEach(callback => {\n                callback(error);\n            });\n            delete this.callbacks[item]; // Remove the callbacks for this item\n        }\n    }\n\n    // Clear the timer associated with the item\n    clearWaitTimer(item) {\n        if (this.timers[item]) {\n            clearTimeout(this.timers[item]);\n            delete this.timers[item];\n        }\n    }\n}\n\n// Create a singleton instance of WaitTimerManager\nconst waitTimerManager = new WaitTimerManager();\n\nclass Person {\n    constructor(person_object) {\n        // Assign properties from the personObj parameter\n        this.entityId = person_object.entity_id;\n        this.oldState = person_object.old_state;\n        this.newState = person_object.new_state;\n    }\n\n    isPresent() {\n        return this.newState.state !== 'not_home';\n    }\n\n    getId() {\n        return this.newState.attributes.id;\n    }\n\n    // Other methods for manipulating the person object can be added here\n}\n\nclass MotionEvent {\n    constructor(sensor_id, location, timestamp, state = \"on\", attr = {}) {\n        this.sensor_id = sensor_id;\n        this.location = location;\n        this.timestamp = timestamp;\n        // Check if state is passed as an attribute\n        if (typeof state === \"object\") {\n            attr = state; // Treat state as part of the attributes\n            state = \"on\"; // Default state if not provided separately\n        }\n        this.state = state;\n        // Spread optional attributes onto the class instance\n        Object.assign(this, attr);\n    }\n}\n\n// Motion detection handler function\nfunction motionDetectionHandler(event_data) {\n\n    if (!event_data) {\n        const message = \"[ERROR]: Missing motion event data\";\n        node.warn(message);\n        node.status(status(message, { fill: \"red\" }).payload);\n        return null;\n    }\n\n    const sensor_id = event_data.entity_id;\n\n    return getEntity(sensor_id)\n        .then(entity => {\n            // If an entity_id was found, get location/area_id\n            const location = entity.area_id;\n\n            // Create MotionEvent object\n            const motion_event_obj = new MotionEvent(\n                sensor_id, // entity\n                location, // area_id\n                event_data.last_changed, // timestamp\n                //{ last_updated: event_data.last_updated }\n                event_data\n            );\n            // Call the registered callback function on the motion sensor port with the event data\n            return motionSensorPort(motion_event_obj);\n        })\n        .catch(error => {\n            // Handle any errors thrown by getEntity\n            const message = `[ERROR]: ${error.message}`;\n            node.warn(message);\n            node.status(status(message, { fill: \"red\" }).payload);\n            return null;\n        });\n\n}\n\n// Occupancy Repository\nclass OccupancyRepository {\n    static getObject() {\n        return global.get(OCCUPANCY.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(OCCUPANCY.OBJECT, value);\n    }\n}\n\n// Presence Repository\nclass PresenceRepository {\n    static getObject() {\n        return global.get(PRESENCE.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(PRESENCE.OBJECT, value);\n    }\n}\n\n// Source Repository\nclass SourceRepository {\n    static getObject() {\n        return global.get(SOURCE.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(SOURCE.OBJECT, value);\n    }\n}\n\n// Entities Repository\nclass EntitiesRepository {\n    static getObject() {\n        return global.get(ENTITIES.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(ENTITIES.OBJECT, value);\n    }\n}\n\n// Areas Repository\nclass AreasRepository {\n    static getObject() {\n        return global.get(AREAS.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(AREAS.OBJECT, value);\n    }\n}\n\n// Devices Repository\nclass DevicesRepository {\n    static getObject() {\n        return global.get(DEVICES.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(DEVICES.OBJECT, value);\n    }\n}\n\nfunction motionSensorPort(motion_event) {\n    try {\n        const status = `Motion detected [${motion_event.state}] at [${motion_event.location}: ${motion_event.sensor_id}] at [${new Date(motion_event.timestamp)}]`;\n        // Core domain logic for processing motion events\n\n        return {motion_event, status};\n    } catch (error) {\n        // If an error occurs during processing, return the error message\n        return {motion_event, status:`Error processing motion event: ${error.message}`}\n    }\n}\n\n// General\nglobal.set(`${object_id}healthCheck`, healthCheck);\nglobal.set(`${object_id}round`, round);\nglobal.set(`${object_id}getGlobalID`, getGlobalID);\nglobal.set(`${object_id}exists`, exists);\nglobal.set(`${object_id}status`, status);\nglobal.set(`${object_id}setAttribute`, setAttribute);\nglobal.set(`${object_id}append`, append);\nglobal.set(`${object_id}abate`, abate);\nglobal.set(`${object_id}getFileNameFromPath`, getFileNameFromPath);\nglobal.set(`${object_id}mapArrayToDict`, mapArrayToDict);\nglobal.set(`${object_id}currentState`, currentState);\nglobal.set(`${object_id}castToArray`, castToArray);\nglobal.set(`${object_id}getEventAttributes`, getEventAttributes);\nglobal.set(`${object_id}getEntity`, getEntity);\nglobal.set(`${object_id}waitForGlobalContext`, waitForGlobalContext);\nglobal.set(`${object_id}getGlobalAsync`, getGlobalAsync);\n\n// API\nglobal.set(`${object_id}createResponseObject`, createResponseObject);\n\n// .yaml template generation\nglobal.set(`${object_id}generateToggleSwitchValueTemplate`, generateToggleSwitchValueTemplate);\nglobal.set(`${object_id}generateTemplateSwitchObject`, generateTemplateSwitchObject);\nglobal.set(`${object_id}generateYamlTemplateObject`, generateYamlTemplateObject);\nglobal.set(`${object_id}addEntityToTemplateObject`, addEntityToTemplateObject);\nglobal.set(`${object_id}createTurnOnOffObject`, createTurnOnOffObject);\nglobal.set(`${object_id}createIconTemplate`, createIconTemplate);\n\n// RemoteInterface\nglobal.set(`${object_id}RemoteInterface`, RemoteInterface);\nglobal.set(`${object_id}Remote`, Remote);\nglobal.set(`${object_id}Button`, Button);\nglobal.set(`${object_id}Command`, Command);\n\n// Device Manager\nglobal.set(`${object_id}DeviceManager`, DeviceManager);\n\n// Timer Managers\nglobal.set(`${object_id}DebounceTimerManager`, DebounceTimerManager);\nglobal.set(`${object_id}WaitTimerManager`, WaitTimerManager);\n\n// Person\nglobal.set(`${object_id}Person`, Person);\n\n// Domains\nglobal.set(`${object_id}MotionEvent`, MotionEvent);\nglobal.set(`${object_id}motionDetectionHandler`, motionDetectionHandler);\nglobal.set(`${object_id}OccupancyRepository`, OccupancyRepository);\nglobal.set(`${object_id}PresenceRepository`, PresenceRepository);\nglobal.set(`${object_id}SourceRepository`, SourceRepository);\nglobal.set(`${object_id}EntitiesRepository`, EntitiesRepository);\nglobal.set(`${object_id}AreasRepository`, AreasRepository);\nglobal.set(`${object_id}DevicesRepository`, DevicesRepository);\n\n// Ports\nconst ports = {\n    motionSensorPort\n};\nglobal.set(`${object_id}motionSensorPort`, motionSensorPort);\n\n// Adapters\nconst adapters = {};\n\n// Domain\nconst domain = {\n    MotionEvent,\n    motionDetectionHandler,\n    OccupancyRepository,\n    PresenceRepository,\n\n};\n\n// General\nconst util = {};\n\nconst utils = {\n    adapters,\n    domain,\n    ports,\n    util\n};\n\nvar loaded = false;\nvar gc = global.keys();\n\n// Check if utils object is loaded\nfor (let i = 0; i < gc.length; i++) {\n\n    if (gc[i] === UTILS.OBJECT) loaded = true;\n\n}\n\nglobal.set(`${SOURCE.REPOSITORY}${UTILS.OBJECT}`, utils);\n\n// Return loaded status\nif (loaded) return status(`Utility Functions Loaded [${UTILS.OBJECT}]`);\n\n// Return non-loaded status\nreturn status(`Utility Functions Not loaded [${UTILS.OBJECT}]`);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":180,"y":860,"wires":[[]]},{"id":"90bc71eda9d6d26a","type":"function","z":"f9586397.5973","name":"Utility Functions","func":"/** Utility Functions **/\n\n// Default to utils object if no UTIL_GC environment variable passed\nconst UTILS = getPathObject(env.get(\"UTIL_GC\") || \"utils\");\nconst object_id = UTILS.REPOSITORY;\n\nconst SOURCE = getPathObject(env.get(\"GLOBAL_ID\") || \"system\");\n\nconst ENTITIES = getPathObject(`${SOURCE.REPOSITORY}entities`);\nconst AREAS = getPathObject(`${SOURCE.REPOSITORY}areas`);\nconst DEVICES = getPathObject(`${SOURCE.REPOSITORY}devices`);\nconst OCCUPANCY = getPathObject(`${SOURCE.REPOSITORY}occupancy`);\nconst PRESENCE = getPathObject(`${SOURCE.REPOSITORY}presence`);\n\n// For testing / debugging purposes\nfunction healthCheck () {\n    return true;\n}\n\n// For global context path setup\nfunction getPathObject(path) {\n\n    return {\n        REPOSITORY: append(path, \".\"),\n        OBJECT: abate(path, \".\")\n    };\n}\n\n// Rounding function with precision\nfunction round(value, precision) {\n\n    // Return raw value if no precision passed\n    if (!exists(precision)) return value;\n\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n// Check if entity_id was passed, and remove domain\nfunction getGlobalID(globalID) {\n\n    // If an entity_id was passed, remove domain\n    if (exists(globalID) && globalID.includes(\".\")) {\n\n        globalID = globalID.split(\".\")[1];\n\n    }\n\n    // Return global ID\n    return globalID;\n}\n\n// Check if a value exists\nfunction exists(value) {\n\n    var valueType = typeof value;\n\n    // Check for empty string\n    if (valueType === \"string\") {\n        if (value == \"\" || (value.length == 0)) return false;\n    }\n\n    // null check\n    if (value === null) return false;\n\n    // undefined check\n    if (valueType === \"undefined\") return false;\n\n    // Empty object check\n    if (valueType == \"object\") {\n        if (Object.keys(value).length === 0) return false;\n    }\n\n    //return value != (\"\" || undefined || null || (value.length == 0));\n    return true;\n\n}\n\n// Create a new object and assign message to payload\nfunction status(message, properties = { fill: \"green\", shape: \"dot\" }) {\n    return {\n        \"payload\": {\n            ...properties,\n            text: message\n        }\n    };\n}\n\n// Create a new object and assign message to payload (finish for me pls <3)\nfunction statusOld(message) {\n    return { \"payload\": message };\n}\n\n// Sets an object attribute to a given value\nfunction setAttribute (property, attribute, value) {\n    \n    // Check if msg property is an object\n    if (!(typeof property === 'object')) {\n        property = {};\n    }\n    \n    // If attribute not passed, default to payload\n    if (!exists(attribute)) {\n        attribute = \"payload\";\n    }\n\n    // Set value\n    property[attribute] = value;\n\n    return property;\n\n}\n\n// Append character to end of string if not present\nfunction append(value, character) {\n\n    // Check if end of string matches character\n    if (value.charAt(value.length - character.length) !== character) {\n\n        // Append character if not found\n        value = value + character;\n    }\n\n    return value;\n\n}\n\n// Remove character from end of string\nfunction abate(value, character) {\n\n    // Check if end of string matches character(s) \n    if (value.charAt(value.length - character.length) === character) {\n\n        // Abate character if found\n        value = value.substring(0, value.length - character.length);\n    }\n\n    return value;\n\n}\n\n// Cast Object to array\nfunction castToArray(value) {\n    return (Array.isArray(value)) ? value : [value];\n}\n\n// Function to get attribute values from event data\nfunction getEventAttributes(event, attributes) {\n    return attributes.map(attr => event[attr]);\n}\n\n// Function to get an entity from an entities object\nfunction getEntity(entity_id) {\n    return new Promise((resolve, reject) => {\n\n        // Timeout value in milliseconds\n        const TIMEOUT = 10000; \n\n        const entities = global.get(ENTITIES.OBJECT);\n        //const entities = EntitiesRepository.getObject();\n\n        // Check if entities are already available\n        if (exists(entities)) {\n            resolve(entities[entity_id]);\n        } else {\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Entities not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the entities object and resolve the promise\n                    const loaded_entities = global.get(ENTITIES.OBJECT);\n                    //const loaded_entities = EntitiesRepository.getObject();\n                    if (loaded_entities) {\n                        // Fetch the entity from the entities object\n                        resolve(loaded_entities[entity_id]);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(ENTITIES.OBJECT); \n                    }\n                    // Entities object not available yet, retrying...\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(ENTITIES.OBJECT, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for entities...\");\n        }\n    });\n}\n\n// Function to get an object from global context\nfunction waitForGlobalContext(global_id, TIMEOUT = 10000) {\n    return new Promise((resolve, reject) => {\n\n        const object_value = global.get(global_id);\n\n        // Check if value is already available\n        if (exists(object_value)) {\n            resolve(object_value);\n        } else {\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Object not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the object and resolve the promise\n                    const loaded_object_value = global.get(global_id);\n                    node.warn(`Reloading object: ${loaded_object_value}`);\n                    if (loaded_object_value) {\n                        node.warn(`Object loaded (${global_id}): ${loaded_object_value}`);\n                        resolve(loaded_object_value);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(global_id);\n                    }\n                    node.warn(`Object not available yet, retrying...`);\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(global_id, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for object...\");\n        }\n    });\n}\n\nfunction getGlobalAsync(globalId, timeout = 10000) {\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            const obj = global.get(globalId);\n            if (obj !== undefined) {\n                clearInterval(interval);\n                resolve(obj);\n            }\n        }, 1000); // Check every second\n\n        setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timeout reached while waiting for global context object: ${globalId}`));\n        }, timeout);\n    });\n}\n\n\n//**API **//\n\nfunction createResponseObject(response_code, message) {\n    return {\n        \"response_code\": response_code,\n        \"data\": message\n    }\n}\n\nfunction generateToggleSwitchValueTemplate(toggleEntityId, triggerEntityId, triggerEntityState) {\n    return `{% if is_state('${toggleEntityId}', 'on') %}\n        {{ is_state('${triggerEntityId}', '${triggerEntityState}') }}\n        {% else %}\n        {{ is_state('${toggleEntityId}', 'on') }}\n        {% endif %}`;\n}\n\nfunction generateTemplateSwitchObject(switchId, friendlyName, valueTemplate, turnOnAction, turnOffAction, iconTemplate) {\n    const switchObject = {\n        [switchId]: {\n            friendly_name: friendlyName,\n            value_template: valueTemplate,\n            turn_on: [turnOnAction],\n            turn_off: [turnOffAction],\n            icon_template: iconTemplate\n        }\n    };\n    return switchObject;\n}\n\nfunction generateYamlTemplateObject(entity_type) {\n    const yamlObject = {\n        platform: 'template',\n        [entity_type]: {}\n    };\n    return [yamlObject];\n}\n\nfunction addEntityToTemplateObject(yamlObject, entity_type, entity) {\n    yamlObject[0][entity_type] = {\n        ...yamlObject[0][entity_type],\n        ...entity\n    };\n    return yamlObject;\n}\n\nfunction createTurnOnOffObject(service, data = {}) {\n    return {\n        turn_on: [\n            {\n                service: service,\n                ...data.turn_on // Spread additional turn_on data if provided\n            }\n        ],\n        turn_off: [\n            {\n                service: service,\n                ...data.turn_off // Spread additional turn_off data if provided\n            }\n        ]\n    };\n}\n\nfunction createIconTemplate(onStateIcon, offStateIcon = null, triggerEntityId = null, triggerEntityState = null) {\n    if (!offStateIcon) {\n        return `mdi:${onStateIcon}`;\n    } else {\n        return `{% if is_state('${triggerEntityId}', '${triggerEntityState}') %}\n            mdi:${onStateIcon}\n        {% else %}\n            mdi:${offStateIcon}\n        {% endif %}`;\n    }\n}\n\nfunction getFileNameFromPath(filePath) {\n    const parts = filePath.split('/');\n    return parts[parts.length - 1];\n}\n\nfunction mapArrayToDict(entities, key) {\n    const entityDict = {};\n\n    entities.forEach(entity => {\n        entityDict[entity[key]] = entity;\n    });\n\n    return entityDict;\n}\n\nfunction currentState(entityId) {\n    return global.get(\"homeassistant.homeAssistant.states\")[entityId];\n}\n\nclass Remote {\n    constructor(remoteId, buttons = {}) {\n        this.remoteId = remoteId;\n        this.buttons = {};\n\n        // Check if buttons is an instance of Remote, if not, convert each entry to a Button instance\n        if (!(buttons instanceof Remote)) {\n            for (const buttonId in buttons) {\n                if (buttons.hasOwnProperty(buttonId)) {\n                    this.addButton(buttonId, buttons[buttonId]);\n                }\n            }\n        }\n    }\n\n    addButton(buttonId, sourceButton = null) {\n        const button = sourceButton instanceof Button ? sourceButton : new Button(buttonId, sourceButton);\n        this.buttons[buttonId] = button;\n        return button;\n    }\n\n    getId() {\n        return this.remoteId;\n    }\n\n    getObject() {\n        const remoteObject = {};\n        Object.keys(this.buttons).forEach(buttonId => {\n            remoteObject[buttonId] = this.buttons[buttonId].getObject();\n        });\n        return remoteObject;\n    }\n}\n\nclass Button {\n    constructor(buttonId, commands = {}) {\n        this.buttonId = buttonId;\n        this.commands = {};\n\n        // Check if commands is an instance of Button, if not, convert each entry to a Command instance\n        if (!(commands instanceof Button)) {\n            for (const commandId in commands) {\n                if (commands.hasOwnProperty(commandId)) {\n                    this.addCommand(commandId, commands[commandId]);\n                }\n            }\n        }\n    }\n\n    addCommand(commandId, sourceCommand = null) {\n        const command = sourceCommand instanceof Command ? sourceCommand : new Command(commandId, sourceCommand);\n        this.commands[commandId] = command;\n        return command;\n    }\n\n    getId() {\n        return this.buttonId;\n    }\n\n    getObject() {\n        const buttonObject = {};\n        Object.keys(this.commands).forEach(commandId => {\n            buttonObject[commandId] = this.commands[commandId].getObject();\n        });\n        return buttonObject;\n    }\n}\n\nclass Command {\n    constructor(commandId, action = {}) {\n        this.commandId = commandId;\n        this.action = action;\n    }\n\n    getId() {\n        return this.commandId;\n    }\n\n    getObject() {\n        return this.action;\n    }\n}\n\n\nclass RemoteInterface {\n    constructor(remoteConfig = {}) {\n        this.remotes = {};\n        if (remoteConfig instanceof Remote) {\n            this.setRemote(remoteConfig.getId(), remoteConfig);\n        } else {\n            const remotes = remoteConfig.remotes || {};\n            Object.keys(remotes).forEach(remoteId => {\n                this.setRemote(remoteId, remotes[remoteId]);\n            });\n        }\n    }\n\n\n    setRemote(remoteId, sourceRemote = null) {\n        if (sourceRemote instanceof Remote) {\n            this.remotes[remoteId] = sourceRemote;\n        } else if (sourceRemote) {\n\n            if (!validateRemote(sourceRemote)) {\n                throw new Error('Invalid remote configuration');\n            }\n            this.remotes[remoteId] = new Remote(remoteId, sourceRemote);\n        } else {\n            this.remotes[remoteId] = new Remote(remoteId);\n        }\n        return this.remotes[remoteId];\n    }\n\n    setButton(remoteId, buttonId, sourceButton = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId); // Ensure remote exists before setting button\n        }\n        const button = this.remotes[remoteId].addButton(buttonId, sourceButton);\n        return button;\n    }\n\n\n    setCommand(remoteId, buttonId, commandId, sourceCommand = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId);\n        }\n        if (!this.remotes[remoteId].buttons[buttonId]) {\n            this.setButton(remoteId, buttonId);\n        }\n        const button = this.remotes[remoteId].buttons[buttonId];\n        const command = button.addCommand(commandId, sourceCommand);\n        return command;\n    }\n\n    getCommand(remoteId, buttonId, commandId) {\n        const remote = this.remotes[remoteId];\n\n        if (!remote) {\n            throw new Error(`Remote not found for ID ${remoteId}`);\n        }\n\n        const button = remote.buttons[buttonId];\n        if (!button) {\n            throw new Error(`Button not found for ID ${buttonId}`);\n        }\n\n        const command = button.commands[commandId];\n        if (!command) {\n            throw new Error(`Command not found for ID ${commandId}`);\n        }\n\n        return command;\n    }\n\n    getRemoteIds() {\n        return Object.keys(this.remotes);\n    }\n\n    // Ignore this, it's for debugging\n    getButtonIds2(remoteId) {\n        if (this.remotes[remoteId]) {\n            return Object.keys(this.remotes[remoteId].buttons);\n        }\n        return [];\n    }\n\n    getButtonIds(remoteId) {\n        if (this.remotes[remoteId]) {\n            if (this.remotes[remoteId] instanceof Button) {\n                // If the value is an instance of Button, return its ID\n                return [this.remotes[remoteId].getId()];\n            } else {\n                // Otherwise, assume it's an object with button IDs as keys\n                return Object.keys(this.remotes[remoteId]);\n            }\n        }\n        return [];\n    }\n\n    getCommandIds(remoteId, buttonId) {\n        if (this.remotes[remoteId] && this.remotes[remoteId].buttons[buttonId]) {\n            return Object.keys(this.remotes[remoteId].buttons[buttonId].commands);\n        }\n        return [];\n    }\n\n    getObject() {\n        return {\n            remotes: this.remotes\n        };\n    }\n}\n\n// Validation functions\nfunction validateRemote(remoteConfig) {\n    if (remoteConfig instanceof Remote) {\n        // If remoteConfig is already an instance of Remote, it's valid\n        return true;\n    } else if (typeof remoteConfig === 'object' && remoteConfig !== null) {\n        const remoteInstance = new Remote('remoteId');\n\n        // Iterate over each button in the remote\n        Object.keys(remoteConfig).forEach(buttonId => {\n            const commandConfigs = remoteConfig[buttonId];\n            const buttonInstance = new Button(buttonId);\n\n            // Iterate over each command in the button\n            Object.keys(commandConfigs).forEach(commandId => {\n                const commandInstance = new Command(commandId, commandConfigs[commandId]);\n\n                // Add the command to the button\n                buttonInstance.addCommand(commandId, commandInstance);\n            });\n\n            // Add the button to the remote\n            remoteInstance.addButton(buttonId, buttonInstance);\n        });\n\n        // Validate the remote instance\n        const isValid = validateRemote(remoteInstance);\n        return isValid;\n    } else {\n        return false; // Invalid remote configuration\n    }\n}\n\n\n\nfunction validateButton(buttonConfig) {\n    if (buttonConfig instanceof Button) {\n        // If buttonConfig is an instance of Button class, we'll validate its commands\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            const command = buttonConfig.commands[commandId];\n            if (!(command instanceof Command)) {\n                return false; // Invalid command within the button\n            }\n            // Optionally, add specific validation logic for command configuration here\n        }\n        return true; // All checks passed\n    } else if (typeof buttonConfig === 'object' && buttonConfig !== null && buttonConfig.hasOwnProperty('commands')) {\n        // If buttonConfig is an object representation, we'll recursively call validateCommand for each command\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            if (!validateCommand(buttonConfig.commands[commandId])) {\n                return false; // Invalid command configuration\n            }\n        }\n        return true; // All checks passed\n    } else {\n        return false; // Invalid button configuration\n    }\n}\n\nfunction validateCommand(commandConfig) {\n    if (commandConfig instanceof Command) {\n        // If commandConfig is an instance of Command class, it's valid\n        return true;\n    } else if (typeof commandConfig === 'object' && commandConfig !== null) {\n        // If commandConfig is an object representation, we'll check its properties\n        if (commandConfig.hasOwnProperty('commandId') && commandConfig.hasOwnProperty('action')) {\n            // Optionally, add specific validation logic for command configuration here\n            return true; // All checks passed\n        }\n    }\n    return false; // Invalid command configuration\n}\n\nclass DeviceManager {\n    constructor(mapping = {}) {\n        this.devices = mapping;\n    }\n\n    setDevice(device_id, data) {\n        this.devices[device_id] = data;\n    }\n\n    getDevice(device_id) {\n        return this.devices[device_id];\n    }\n\n    removeDevice(device_id) {\n        if (this.devices.hasOwnProperty(device_id)) {\n            delete this.devices[device_id];\n        }\n    }\n\n    getDevices() {\n        return this.devices;\n    }\n}\n\nclass DebounceTimerManager {\n    constructor() {\n        this.timers = {};\n    }\n\n    createTimer(attributeValues, debounceTimers, callback, delay) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            nestedObject[attrValue] = nestedObject[attrValue] || {};\n            nestedObject = nestedObject[attrValue];\n        }\n        if (!nestedObject.hasOwnProperty('timer')) {\n            nestedObject.timer = setTimeout(callback, delay);\n        }\n    }\n\n    updateTimer(attributeValues, debounceTimers, callback, delay) {\n        this.clearTimer(attributeValues, debounceTimers);\n        this.createTimer(attributeValues, debounceTimers, callback, delay);\n    }\n\n    clearTimer(attributeValues, debounceTimers) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            if (!nestedObject[attrValue]) {\n                return;\n            }\n            nestedObject = nestedObject[attrValue];\n        }\n        if (nestedObject.timer) {\n            clearTimeout(nestedObject.timer);\n            delete nestedObject.timer;\n        }\n    }\n}\n\nclass WaitTimerManager {\n    constructor() {\n        this.timers = {};\n        this.callbacks = {}; // Store callbacks for each event or condition\n        this.checkInterval = 1000; // Interval in milliseconds for checking existence\n    }\n\n    // Create a timer that waits for the item to exist\n    createWaitTimer(item, callback, timeout = null) {\n        // Check if the item already has callbacks registered\n        if (!this.callbacks[item]) {\n            this.callbacks[item] = [];\n        }\n\n        // Add the new callback to the list of callbacks for this item\n        this.callbacks[item].push(callback);\n\n        // If the timer doesn't exist, create it\n        if (!this.timers[item]) {\n            if (timeout !== null) {\n                // If timeout is provided, clear the timer after the specified duration\n                this.timers[item] = setTimeout(() => {\n                    this.clearWaitTimer(item);\n                    this.invokeCallbacks(item, new Error(`Timeout waiting for ${item}`));\n                }, timeout);\n            }\n\n            // Check for the existence of the item periodically\n            this.checkExistence(item);\n        }\n    }\n\n    // Check for the existence of the item periodically\n    checkExistence(item) {\n        const interval = setInterval(() => {\n            if (global.get(item) !== undefined) {\n                clearInterval(interval);\n                this.invokeCallbacks(item, null); // Item found\n            }\n        }, this.checkInterval);\n    }\n\n    // Invoke all callbacks associated with the item\n    invokeCallbacks(item, error) {\n        if (this.callbacks[item]) {\n            this.callbacks[item].forEach(callback => {\n                callback(error);\n            });\n            delete this.callbacks[item]; // Remove the callbacks for this item\n        }\n    }\n\n    // Clear the timer associated with the item\n    clearWaitTimer(item) {\n        if (this.timers[item]) {\n            clearTimeout(this.timers[item]);\n            delete this.timers[item];\n        }\n    }\n}\n\n// Create a singleton instance of WaitTimerManager\nconst waitTimerManager = new WaitTimerManager();\n\nclass Person {\n    constructor(person_object) {\n        // Assign properties from the personObj parameter\n        this.entityId = person_object.entity_id;\n        this.oldState = person_object.old_state;\n        this.newState = person_object.new_state;\n    }\n\n    isPresent() {\n        return this.newState.state !== 'not_home';\n    }\n\n    getId() {\n        return this.newState.attributes.id;\n    }\n\n    // Other methods for manipulating the person object can be added here\n}\n\nclass MotionEvent {\n    constructor(sensor_id, location, timestamp, state = \"on\", attr = {}) {\n        this.sensor_id = sensor_id;\n        this.location = location;\n        this.timestamp = timestamp;\n        // Check if state is passed as an attribute\n        if (typeof state === \"object\") {\n            attr = state; // Treat state as part of the attributes\n            state = \"on\"; // Default state if not provided separately\n        }\n        this.state = state;\n        // Spread optional attributes onto the class instance\n        Object.assign(this, attr);\n    }\n}\n\n// Motion detection handler function\nfunction motionDetectionHandler(event_data) {\n\n    if (!event_data) {\n        const message = \"[ERROR]: Missing motion event data\";\n        node.warn(message);\n        node.status(status(message, { fill: \"red\" }).payload);\n        return null;\n    }\n\n    const sensor_id = event_data.entity_id;\n\n    return getEntity(sensor_id)\n        .then(entity => {\n            // If an entity_id was found, get location/area_id\n            const location = entity.area_id;\n\n            // Create MotionEvent object\n            const motion_event_obj = new MotionEvent(\n                sensor_id, // entity\n                location, // area_id\n                event_data.last_changed, // timestamp\n                //{ last_updated: event_data.last_updated }\n                event_data\n            );\n            // Call the registered callback function on the motion sensor port with the event data\n            return motionSensorPort(motion_event_obj);\n        })\n        .catch(error => {\n            // Handle any errors thrown by getEntity\n            const message = `[ERROR]: ${error.message}`;\n            node.warn(message);\n            node.status(status(message, { fill: \"red\" }).payload);\n            return null;\n        });\n\n}\n\n// Occupancy Repository\nclass OccupancyRepository {\n    static getObject() {\n        return global.get(OCCUPANCY.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(OCCUPANCY.OBJECT, value);\n    }\n}\n\n// Presence Repository\nclass PresenceRepository {\n    static getObject() {\n        return global.get(PRESENCE.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(PRESENCE.OBJECT, value);\n    }\n}\n\n// Source Repository\nclass SourceRepository {\n    static getObject() {\n        return global.get(SOURCE.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(SOURCE.OBJECT, value);\n    }\n}\n\n// Entities Repository\nclass EntitiesRepository {\n    static getObject() {\n        return global.get(ENTITIES.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(ENTITIES.OBJECT, value);\n    }\n}\n\n// Areas Repository\nclass AreasRepository {\n    static getObject() {\n        return global.get(AREAS.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(AREAS.OBJECT, value);\n    }\n}\n\n// Devices Repository\nclass DevicesRepository {\n    static getObject() {\n        return global.get(DEVICES.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(DEVICES.OBJECT, value);\n    }\n}\n\nfunction motionSensorPort(motion_event) {\n    try {\n        const status = `Motion detected [${motion_event.state}] at [${motion_event.location}: ${motion_event.sensor_id}] at [${new Date(motion_event.timestamp)}]`;\n        // Core domain logic for processing motion events\n\n        return {motion_event, status};\n    } catch (error) {\n        // If an error occurs during processing, return the error message\n        return {motion_event, status:`Error processing motion event: ${error.message}`}\n    }\n}\n\n// General\nglobal.set(`${object_id}healthCheck`, healthCheck);\nglobal.set(`${object_id}round`, round);\nglobal.set(`${object_id}getGlobalID`, getGlobalID);\nglobal.set(`${object_id}exists`, exists);\nglobal.set(`${object_id}status`, status);\nglobal.set(`${object_id}setAttribute`, setAttribute);\nglobal.set(`${object_id}append`, append);\nglobal.set(`${object_id}abate`, abate);\nglobal.set(`${object_id}getFileNameFromPath`, getFileNameFromPath);\nglobal.set(`${object_id}mapArrayToDict`, mapArrayToDict);\nglobal.set(`${object_id}currentState`, currentState);\nglobal.set(`${object_id}castToArray`, castToArray);\nglobal.set(`${object_id}getEventAttributes`, getEventAttributes);\nglobal.set(`${object_id}getEntity`, getEntity);\nglobal.set(`${object_id}waitForGlobalContext`, waitForGlobalContext);\nglobal.set(`${object_id}getGlobalAsync`, getGlobalAsync);\n\n// API\nglobal.set(`${object_id}createResponseObject`, createResponseObject);\n\n// .yaml template generation\nglobal.set(`${object_id}generateToggleSwitchValueTemplate`, generateToggleSwitchValueTemplate);\nglobal.set(`${object_id}generateTemplateSwitchObject`, generateTemplateSwitchObject);\nglobal.set(`${object_id}generateYamlTemplateObject`, generateYamlTemplateObject);\nglobal.set(`${object_id}addEntityToTemplateObject`, addEntityToTemplateObject);\nglobal.set(`${object_id}createTurnOnOffObject`, createTurnOnOffObject);\nglobal.set(`${object_id}createIconTemplate`, createIconTemplate);\n\n// RemoteInterface\nglobal.set(`${object_id}RemoteInterface`, RemoteInterface);\nglobal.set(`${object_id}Remote`, Remote);\nglobal.set(`${object_id}Button`, Button);\nglobal.set(`${object_id}Command`, Command);\n\n// Device Manager\nglobal.set(`${object_id}DeviceManager`, DeviceManager);\n\n// Timer Managers\nglobal.set(`${object_id}DebounceTimerManager`, DebounceTimerManager);\nglobal.set(`${object_id}WaitTimerManager`, WaitTimerManager);\n\n// Person\nglobal.set(`${object_id}Person`, Person);\n\n// Domains\nglobal.set(`${object_id}MotionEvent`, MotionEvent);\nglobal.set(`${object_id}motionDetectionHandler`, motionDetectionHandler);\nglobal.set(`${object_id}OccupancyRepository`, OccupancyRepository);\nglobal.set(`${object_id}PresenceRepository`, PresenceRepository);\nglobal.set(`${object_id}SourceRepository`, SourceRepository);\nglobal.set(`${object_id}EntitiesRepository`, EntitiesRepository);\nglobal.set(`${object_id}AreasRepository`, AreasRepository);\nglobal.set(`${object_id}DevicesRepository`, DevicesRepository);\n\n// Ports\nconst ports = {\n    motionSensorPort\n};\nglobal.set(`${object_id}motionSensorPort`, motionSensorPort);\n\n// Adapters\nconst adapters = {};\n\n// Domain\nconst domain = {\n    MotionEvent,\n    motionDetectionHandler,\n    OccupancyRepository,\n    PresenceRepository,\n\n};\n\n// General\nconst util = {};\n\nconst utils = {\n    adapters,\n    domain,\n    ports,\n    util\n};\n\nvar loaded = false;\nvar gc = global.keys();\n\n// Check if utils object is loaded\nfor (let i = 0; i < gc.length; i++) {\n\n    if (gc[i] === UTILS.OBJECT) loaded = true;\n\n}\n\nglobal.set(`${SOURCE.REPOSITORY}${UTILS.OBJECT}`, utils);\n\n// Return loaded status\nif (loaded) return status(`Utility Functions Loaded [${UTILS.OBJECT}]`);\n\n// Return non-loaded status\nreturn status(`Utility Functions Not loaded [${UTILS.OBJECT}]`);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":560,"wires":[[]]},{"id":"aba74432494ec151","type":"batch","z":"f9586397.5973","name":"","mode":"concat","count":10,"overlap":0,"interval":10,"allowEmptySequence":false,"topics":[{"topic":"domain"},{"topic":"ports"},{"topic":"adapters"}],"x":450,"y":820,"wires":[[]]},{"id":"52b194acf61aa6ea","type":"function","z":"f9586397.5973","name":"domain","func":"// Domain Logic\n// General Use-Case Domain Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.domain       : Domain object repository\n// ******************************************************************\n\n/*** START ***/\n\nclass Entity {\n    constructor(entityObject) {\n        this._aliases = entityObject.aliases || [];\n        this._areaId = entityObject.area_id || null;\n        this._capabilities = entityObject.capabilities || null;\n        this._configEntryId = entityObject.config_entry_id || null;\n        this._deviceClass = entityObject.device_class || null;\n        this._deviceId = entityObject.device_id || null;\n        this._disabledBy = entityObject.disabled_by || null;\n        this._entityCategory = entityObject.entity_category || null;\n        this._entityId = entityObject.entity_id || null;\n        this._hiddenBy = entityObject.hidden_by || null;\n        this._icon = entityObject.icon || null;\n        this._id = entityObject.id || null;\n        this._hasEntityName = entityObject.has_entity_name || null;\n        this._name = entityObject.name || null;\n        this._options = entityObject.options || null;\n        this._originalDeviceClass = entityObject.original_device_class || null;\n        this._originalIcon = entityObject.original_icon || null;\n        this._originalName = entityObject.original_name || null;\n        this._platform = entityObject.platform || null;\n        this._supportedFeatures = entityObject.supported_features || null;\n        this._translationKey = entityObject.translation_key || null;\n        this._uniqueId = entityObject.unique_id || null;\n        this._unitOfMeasurement = entityObject.unit_of_measurement || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get areaId() {\n        return this._areaId;\n    }\n\n    get capabilities() {\n        return this._capabilities;\n    }\n\n    get configEntryId() {\n        return this._configEntryId;\n    }\n\n    get deviceClass() {\n        return this._deviceClass;\n    }\n\n    get deviceId() {\n        return this._deviceId;\n    }\n\n    get disabledBy() {\n        return this._disabledBy;\n    }\n\n    get entityCategory() {\n        return this._entityCategory;\n    }\n\n    get entityId() {\n        return this._entityId;\n    }\n\n    get hiddenBy() {\n        return this._hiddenBy;\n    }\n\n    get icon() {\n        return this._icon;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get hasEntityName() {\n        return this._hasEntityName;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    get originalDeviceClass() {\n        return this._originalDeviceClass;\n    }\n\n    get originalIcon() {\n        return this._originalIcon;\n    }\n\n    get originalName() {\n        return this._originalName;\n    }\n\n    get platform() {\n        return this._platform;\n    }\n\n    get supportedFeatures() {\n        return this._supportedFeatures;\n    }\n\n    get translationKey() {\n        return this._translationKey;\n    }\n\n    get uniqueId() {\n        return this._uniqueId;\n    }\n\n    get unitOfMeasurement() {\n        return this._unitOfMeasurement;\n    }\n}\n\nclass Area {\n    constructor(areaObject) {\n        this._aliases = areaObject.aliases || [];\n        this._name = areaObject.name || null;\n        this._id = areaObject.id || null;\n        this._picture = areaObject.picture || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get picture() {\n        return this._picture;\n    }\n}\n\nclass Device {\n    constructor(deviceObject) {\n        this._area_id = deviceObject.area_id || null;\n        this._config_entries = deviceObject.config_entries || [];\n        this._configuration_url = deviceObject.configuration_url || null;\n        this._connections = deviceObject.connections || [];\n        this._disabled_by = deviceObject.disabled_by || null;\n        this._entry_type = deviceObject.entry_type || null;\n        this._hw_version = deviceObject.hw_version || null;\n        this._id = deviceObject.id || null;\n        this._identifiers = deviceObject.identifiers || [];\n        this._manufacturer = deviceObject.manufacturer || null;\n        this._model = deviceObject.model || null;\n        this._name_by_user = deviceObject.name_by_user || null;\n        this._name = deviceObject.name || null;\n        this._sw_version = deviceObject.sw_version || null;\n        this._via_device_id = deviceObject.via_device_id || null;\n    }\n\n    get area_id() {\n        return this._area_id;\n    }\n\n    get config_entries() {\n        return this._config_entries;\n    }\n\n    get configuration_url() {\n        return this._configuration_url;\n    }\n\n    get connections() {\n        return this._connections;\n    }\n\n    get disabled_by() {\n        return this._disabled_by;\n    }\n\n    get entry_type() {\n        return this._entry_type;\n    }\n\n    get hw_version() {\n        return this._hw_version;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get identifiers() {\n        return this._identifiers;\n    }\n\n    get manufacturer() {\n        return this._manufacturer;\n    }\n\n    get model() {\n        return this._model;\n    }\n\n    get name_by_user() {\n        return this._name_by_user;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get sw_version() {\n        return this._sw_version;\n    }\n\n    get via_device_id() {\n        return this._via_device_id;\n    }\n}\n\nconst domain = {\n\n    models: {\n        Entity,\n        Area,\n        Device\n    }\n};\n\nmsg.payload = domain;\nmsg.topic = \"domain\";\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":600,"wires":[["b9408e7154a080e1"]]},{"id":"cf92dcbd555ff7b3","type":"function","z":"f9586397.5973","name":"ports","func":"// Ports\n// General Use-Case Port Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.ports        : Ports object repository\n// ******************************************************************\n\n/*** START ***/\n\nfunction motionSensorPort(motion_event) {\n    try {\n        const status = `Motion detected [${motion_event.state}] at [${motion_event.location}: ${motion_event.sensor_id}] at [${new Date(motion_event.timestamp)}]`;\n        // Core domain logic for processing motion events\n\n        return { motion_event, status };\n    } catch (error) {\n        // If an error occurs during processing, return the error message\n        return { motion_event, status: `Error processing motion event: ${error.message}` }\n    }\n}\n\nfunction climatePort(temperature, sensor_id, area) {\n    try {\n        const status = `Climate Updated: [${temperature}] at [${area}: ${sensor_id}] at [${Date.now()}]`;\n        // Core domain logic for processing temperature events\n        const temperature_event = {\n            state : temperature,\n            location: area,\n            last_updated: Date.now()\n        }\n\n        return { temperature_event, status };\n    } catch (error) {\n        // If an error occurs during processing, return the error message\n        return { temperature, sensor_id, area, status: `Error processing temperature event: ${error.message}` }\n    }\n}\n\nconst ports = {\n    motionSensorPort,\n    climatePort\n};\n\nmsg.payload = ports;\nmsg.topic = \"ports\";\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":640,"wires":[["b9408e7154a080e1"]]},{"id":"0fad4bf7b7fb21fe","type":"function","z":"f9586397.5973","name":"adapters","func":"// Adapter Logic\n// General Use-Case Adapter Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.adapters     : adapters object repository\n// ******************************************************************\n\n/*** START ***/\n\nfunction testAdapter() {\n    node.warn(\"hello!\");\n}\n\nconst adapters = {\n    testAdapter\n};\n\nmsg.topic = \"adapters\";\nmsg.payload = adapters;\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":680,"wires":[["b9408e7154a080e1"]]},{"id":"05bb98ad5bbf37ab","type":"function","z":"f9586397.5973","d":true,"name":"util","func":"// Load Environment Variables\n// Load Environment Variables + utils\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.adapters     : adapters object repository\n// ******************************************************************\n\n// Default to system, object if no GLOBAL_ID environment variable passed\nconst SOURCE = getPathObject(env.get(\"GLOBAL_ID\") || \"system\");\n\n// Core Modules\nconst DOMAIN = getPathObject(`${SOURCE.REPOSITORY}domain`);\nconst PORTS = getPathObject(`${SOURCE.REPOSITORY}ports`);\nconst ADAPTERS = getPathObject(`${SOURCE.REPOSITORY}adapters`);\nconst UTIL = getPathObject(`${SOURCE.REPOSITORY}util`);\n\n// Core Data\nconst ENTITIES = getPathObject(`${SOURCE.REPOSITORY}entities`);\nconst AREAS = getPathObject(`${SOURCE.REPOSITORY}areas`);\nconst DEVICES = getPathObject(`${SOURCE.REPOSITORY}devices`);\n\n// Use Cases\nconst OCCUPANCY = getPathObject(`${SOURCE.REPOSITORY}occupancy`);\nconst PRESENCE = getPathObject(`${SOURCE.REPOSITORY}presence`);\n\nconst WaitTimerManager = global.get(`${DOMAIN.OBJECT}.models.WaitTimerManager`);\n\nconst path = {\n    SOURCE,\n    DOMAIN,\n    PORTS,\n    ADAPTERS,\n    UTIL,\n    ENTITIES,\n    AREAS,\n    DEVICES,\n    OCCUPANCY,\n    PRESENCE\n};\n\n// For global context path setup\nfunction getPathObject(path) {\n\n    return {\n        REPOSITORY: append(path, \".\"),\n        OBJECT: abate(path, \".\")\n    };\n}\n\n// Rounding function with precision\nfunction round(value, precision) {\n\n    // Return raw value if no precision passed\n    if (!exists(precision)) return value;\n\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n// Check if entity_id was passed, and remove domain\nfunction getGlobalID(globalID) {\n\n    // If an entity_id was passed, remove domain\n    if (exists(globalID) && globalID.includes(\".\")) {\n\n        globalID = globalID.split(\".\")[1];\n\n    }\n\n    // Return global ID\n    return globalID;\n}\n\n// Check if a value exists\nfunction exists(value) {\n\n    var valueType = typeof value;\n\n    // Check for empty string\n    if (valueType === \"string\") {\n        if (value == \"\" || (value.length == 0)) return false;\n    }\n\n    // null check\n    if (value === null) return false;\n\n    // undefined check\n    if (valueType === \"undefined\") return false;\n\n    // Empty object check\n    if (valueType == \"object\") {\n        if (Object.keys(value).length === 0) return false;\n    }\n\n    //return value != (\"\" || undefined || null || (value.length == 0));\n    return true;\n\n}\n\n// Create a new object and assign message to payload\nfunction status(message, properties = { fill: \"green\", shape: \"dot\" }) {\n    return {\n        \"payload\": {\n            ...properties,\n            text: message\n        }\n    };\n}\n\n// Sets an object attribute to a given value\nfunction setAttribute(property, attribute, value) {\n\n    // Check if msg property is an object\n    if (!(typeof property === 'object')) {\n        property = {};\n    }\n\n    // If attribute not passed, default to payload\n    if (!exists(attribute)) {\n        attribute = \"payload\";\n    }\n\n    // Set value\n    property[attribute] = value;\n\n    return property;\n\n}\n\n// Append character to end of string if not present\nfunction append(value, character) {\n\n    // Check if end of string matches character\n    if (value.charAt(value.length - character.length) !== character) {\n\n        // Append character if not found\n        value = value + character;\n    }\n\n    return value;\n\n}\n\n// Remove character from end of string\nfunction abate(value, character) {\n\n    // Check if end of string matches character(s) \n    if (value.charAt(value.length - character.length) === character) {\n\n        // Abate character if found\n        value = value.substring(0, value.length - character.length);\n    }\n\n    return value;\n\n}\n\nfunction getFileNameFromPath(filePath) {\n    const parts = filePath.split('/');\n    return parts[parts.length - 1];\n}\n\nfunction mapArrayToDict(entities, key) {\n    const entityDict = {};\n\n    entities.forEach(entity => {\n        entityDict[entity[key]] = entity;\n    });\n\n    return entityDict;\n}\n\nfunction currentState(entityId) {\n    return global.get(\"homeassistant.homeAssistant.states\")[entityId];\n}\n\n// Cast Object to array\nfunction castToArray(value) {\n    return (Array.isArray(value)) ? value : [value];\n}\n\n// Function to get attribute values from event data\nfunction getEventAttributes(event, attributes) {\n    return attributes.map(attr => event[attr]);\n}\n\n// Function to get an entity from an entities object\nfunction getEntity(entity_id) {\n\n    return new Promise((resolve, reject) => {\n\n        // Timeout value in milliseconds\n        const TIMEOUT = 10000;\n\n        const entities = global.get(ENTITIES.OBJECT);\n        //const entities = EntitiesRepository.getObject();\n\n        // Check if entities are already available\n        if (exists(entities)) {\n            resolve(entities[entity_id]);\n        } else {\n            const WaitTimerManager = global.get(`${DOMAIN.REPOSITORY}`).models.WaitTimerManager;\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Entities not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the entities object and resolve the promise\n                    const loaded_entities = global.get(ENTITIES.OBJECT);\n                    //const loaded_entities = EntitiesRepository.getObject();\n                    if (loaded_entities) {\n                        // Fetch the entity from the entities object\n                        resolve(loaded_entities[entity_id]);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(ENTITIES.OBJECT);\n                    }\n                    // Entities object not available yet, retrying...\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(ENTITIES.OBJECT, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for entities...\");\n        }\n    });\n}\n\n// Function to get an object from global context\nfunction waitForGlobalContext(global_id, TIMEOUT = 10000) {\n    return new Promise((resolve, reject) => {\n\n        const object_value = global.get(global_id);\n\n        // Check if value is already available\n        if (exists(object_value)) {\n            resolve(object_value);\n        } else {\n\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Object not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the object and resolve the promise\n                    const loaded_object_value = global.get(global_id);\n                    node.warn(`Reloading object: ${loaded_object_value}`);\n                    if (loaded_object_value) {\n                        node.warn(`Object loaded (${global_id}): ${loaded_object_value}`);\n                        resolve(loaded_object_value);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(global_id);\n                    }\n                    node.warn(`Object not available yet, retrying...`);\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(global_id, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for object...\");\n        }\n    });\n}\n\nfunction getGlobalAsync(globalId, timeout = 10000) {\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            const obj = global.get(globalId);\n            if (obj !== undefined) {\n                clearInterval(interval);\n                resolve(obj);\n            }\n        }, 1000); // Check every second\n\n        setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timeout reached while waiting for global context object: ${globalId}`));\n        }, timeout);\n    });\n}\n\nconst util = {\n    path,\n    round,\n    getGlobalID,\n    exists,\n    status,\n    setAttribute,\n    append,\n    abate,\n    getFileNameFromPath,\n    mapArrayToDict,\n    currentState,\n    castToArray,\n    getEventAttributes,\n    getEntity,\n    waitForGlobalContext,\n    getGlobalAsync\n\n};\nmsg.topic = \"util\";\nmsg.payload = util;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":640,"wires":[["cf92dcbd555ff7b3","52b194acf61aa6ea","0fad4bf7b7fb21fe","b9408e7154a080e1"]]},{"id":"b9408e7154a080e1","type":"join","z":"f9586397.5973","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":770,"y":640,"wires":[["cdba6a1bd9ad79e5"]]},{"id":"cdba6a1bd9ad79e5","type":"function","z":"f9586397.5973","name":"Load Modules","func":"/** Load Modules **/\n\nconst SOURCE = msg.payload.util.path.SOURCE;\n\n// Store repository object to global context \nglobal.set(`${SOURCE.OBJECT}`, msg.payload);\n\nconst gc = global.keys();\nconst loaded = gc.includes(SOURCE.OBJECT);\nconst status = msg.payload.util.status;\n\n// Return loaded status\nif (loaded) return status(`Modules Loaded [${SOURCE.OBJECT}]`);\n\n// Return non-loaded status\nreturn status(`Modules Not loaded [${SOURCE.OBJECT}]`);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":640,"wires":[[]]},{"id":"b757f49d58e470e6","type":"function","z":"f9586397.5973","d":true,"name":"Utility Functions","func":"/** Utility Functions **/\n\n// Default to utils object if no UTIL_GC environment variable passed\nconst UTILS = getPathObject(env.get(\"UTIL_GC\") || \"utils\");\nconst object_id = UTILS.REPOSITORY;\n\nconst SOURCE = getPathObject(env.get(\"GLOBAL_ID\") || \"system\");\n\nconst ENTITIES = getPathObject(`${SOURCE.REPOSITORY}entities`);\nconst AREAS = getPathObject(`${SOURCE.REPOSITORY}areas`);\nconst DEVICES = getPathObject(`${SOURCE.REPOSITORY}devices`);\nconst OCCUPANCY = getPathObject(`${SOURCE.REPOSITORY}occupancy`);\nconst PRESENCE = getPathObject(`${SOURCE.REPOSITORY}presence`);\n\n// For testing / debugging purposes\nfunction healthCheck () {\n    return true;\n}\n\n// For global context path setup\nfunction getPathObject(path) {\n\n    return {\n        REPOSITORY: append(path, \".\"),\n        OBJECT: abate(path, \".\")\n    };\n}\n\n// Rounding function with precision\nfunction round(value, precision) {\n\n    // Return raw value if no precision passed\n    if (!exists(precision)) return value;\n\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n// Check if entity_id was passed, and remove domain\nfunction getGlobalID(globalID) {\n\n    // If an entity_id was passed, remove domain\n    if (exists(globalID) && globalID.includes(\".\")) {\n\n        globalID = globalID.split(\".\")[1];\n\n    }\n\n    // Return global ID\n    return globalID;\n}\n\n// Check if a value exists\nfunction exists(value) {\n\n    var valueType = typeof value;\n\n    // Check for empty string\n    if (valueType === \"string\") {\n        if (value == \"\" || (value.length == 0)) return false;\n    }\n\n    // null check\n    if (value === null) return false;\n\n    // undefined check\n    if (valueType === \"undefined\") return false;\n\n    // Empty object check\n    if (valueType == \"object\") {\n        if (Object.keys(value).length === 0) return false;\n    }\n\n    //return value != (\"\" || undefined || null || (value.length == 0));\n    return true;\n\n}\n\n// Create a new object and assign message to payload\nfunction status(message, properties = { fill: \"green\", shape: \"dot\" }) {\n    return {\n        \"payload\": {\n            ...properties,\n            text: message\n        }\n    };\n}\n\n// Create a new object and assign message to payload (finish for me pls <3)\nfunction statusOld(message) {\n    return { \"payload\": message };\n}\n\n// Sets an object attribute to a given value\nfunction setAttribute (property, attribute, value) {\n    \n    // Check if msg property is an object\n    if (!(typeof property === 'object')) {\n        property = {};\n    }\n    \n    // If attribute not passed, default to payload\n    if (!exists(attribute)) {\n        attribute = \"payload\";\n    }\n\n    // Set value\n    property[attribute] = value;\n\n    return property;\n\n}\n\n// Append character to end of string if not present\nfunction append(value, character) {\n\n    // Check if end of string matches character\n    if (value.charAt(value.length - character.length) !== character) {\n\n        // Append character if not found\n        value = value + character;\n    }\n\n    return value;\n\n}\n\n// Remove character from end of string\nfunction abate(value, character) {\n\n    // Check if end of string matches character(s) \n    if (value.charAt(value.length - character.length) === character) {\n\n        // Abate character if found\n        value = value.substring(0, value.length - character.length);\n    }\n\n    return value;\n\n}\n\n// Cast Object to array\nfunction castToArray(value) {\n    return (Array.isArray(value)) ? value : [value];\n}\n\n// Function to get attribute values from event data\nfunction getEventAttributes(event, attributes) {\n    return attributes.map(attr => event[attr]);\n}\n\n// Function to get an entity from an entities object\nfunction getEntity(entity_id) {\n    return new Promise((resolve, reject) => {\n\n        // Timeout value in milliseconds\n        const TIMEOUT = 10000; \n\n        const entities = global.get(ENTITIES.OBJECT);\n        //const entities = EntitiesRepository.getObject();\n\n        // Check if entities are already available\n        if (exists(entities)) {\n            resolve(entities[entity_id]);\n        } else {\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Entities not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the entities object and resolve the promise\n                    const loaded_entities = global.get(ENTITIES.OBJECT);\n                    //const loaded_entities = EntitiesRepository.getObject();\n                    if (loaded_entities) {\n                        // Fetch the entity from the entities object\n                        resolve(loaded_entities[entity_id]);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(ENTITIES.OBJECT); \n                    }\n                    // Entities object not available yet, retrying...\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(ENTITIES.OBJECT, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for entities...\");\n        }\n    });\n}\n\n// Function to get an object from global context\nfunction waitForGlobalContext(global_id, TIMEOUT = 10000) {\n    return new Promise((resolve, reject) => {\n\n        const object_value = global.get(global_id);\n\n        // Check if value is already available\n        if (exists(object_value)) {\n            resolve(object_value);\n        } else {\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Object not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the object and resolve the promise\n                    const loaded_object_value = global.get(global_id);\n                    node.warn(`Reloading object: ${loaded_object_value}`);\n                    if (loaded_object_value) {\n                        node.warn(`Object loaded (${global_id}): ${loaded_object_value}`);\n                        resolve(loaded_object_value);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(global_id);\n                    }\n                    node.warn(`Object not available yet, retrying...`);\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(global_id, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for object...\");\n        }\n    });\n}\n\nfunction getGlobalAsync(globalId, timeout = 10000) {\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            const obj = global.get(globalId);\n            if (obj !== undefined) {\n                clearInterval(interval);\n                resolve(obj);\n            }\n        }, 1000); // Check every second\n\n        setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timeout reached while waiting for global context object: ${globalId}`));\n        }, timeout);\n    });\n}\n\n\n//**API **//\n\nfunction createResponseObject(response_code, message) {\n    return {\n        \"response_code\": response_code,\n        \"data\": message\n    }\n}\n\nfunction generateToggleSwitchValueTemplate(toggleEntityId, triggerEntityId, triggerEntityState) {\n    return `{% if is_state('${toggleEntityId}', 'on') %}\n        {{ is_state('${triggerEntityId}', '${triggerEntityState}') }}\n        {% else %}\n        {{ is_state('${toggleEntityId}', 'on') }}\n        {% endif %}`;\n}\n\nfunction generateTemplateSwitchObject(switchId, friendlyName, valueTemplate, turnOnAction, turnOffAction, iconTemplate) {\n    const switchObject = {\n        [switchId]: {\n            friendly_name: friendlyName,\n            value_template: valueTemplate,\n            turn_on: [turnOnAction],\n            turn_off: [turnOffAction],\n            icon_template: iconTemplate\n        }\n    };\n    return switchObject;\n}\n\nfunction generateYamlTemplateObject(entity_type) {\n    const yamlObject = {\n        platform: 'template',\n        [entity_type]: {}\n    };\n    return [yamlObject];\n}\n\nfunction addEntityToTemplateObject(yamlObject, entity_type, entity) {\n    yamlObject[0][entity_type] = {\n        ...yamlObject[0][entity_type],\n        ...entity\n    };\n    return yamlObject;\n}\n\nfunction createTurnOnOffObject(service, data = {}) {\n    return {\n        turn_on: [\n            {\n                service: service,\n                ...data.turn_on // Spread additional turn_on data if provided\n            }\n        ],\n        turn_off: [\n            {\n                service: service,\n                ...data.turn_off // Spread additional turn_off data if provided\n            }\n        ]\n    };\n}\n\nfunction createIconTemplate(onStateIcon, offStateIcon = null, triggerEntityId = null, triggerEntityState = null) {\n    if (!offStateIcon) {\n        return `mdi:${onStateIcon}`;\n    } else {\n        return `{% if is_state('${triggerEntityId}', '${triggerEntityState}') %}\n            mdi:${onStateIcon}\n        {% else %}\n            mdi:${offStateIcon}\n        {% endif %}`;\n    }\n}\n\nfunction getFileNameFromPath(filePath) {\n    const parts = filePath.split('/');\n    return parts[parts.length - 1];\n}\n\nfunction mapArrayToDict(entities, key) {\n    const entityDict = {};\n\n    entities.forEach(entity => {\n        entityDict[entity[key]] = entity;\n    });\n\n    return entityDict;\n}\n\nfunction currentState(entityId) {\n    return global.get(\"homeassistant.homeAssistant.states\")[entityId];\n}\n\nclass Remote {\n    constructor(remoteId, buttons = {}) {\n        this.remoteId = remoteId;\n        this.buttons = {};\n\n        // Check if buttons is an instance of Remote, if not, convert each entry to a Button instance\n        if (!(buttons instanceof Remote)) {\n            for (const buttonId in buttons) {\n                if (buttons.hasOwnProperty(buttonId)) {\n                    this.addButton(buttonId, buttons[buttonId]);\n                }\n            }\n        }\n    }\n\n    addButton(buttonId, sourceButton = null) {\n        const button = sourceButton instanceof Button ? sourceButton : new Button(buttonId, sourceButton);\n        this.buttons[buttonId] = button;\n        return button;\n    }\n\n    getId() {\n        return this.remoteId;\n    }\n\n    getObject() {\n        const remoteObject = {};\n        Object.keys(this.buttons).forEach(buttonId => {\n            remoteObject[buttonId] = this.buttons[buttonId].getObject();\n        });\n        return remoteObject;\n    }\n}\n\nclass Button {\n    constructor(buttonId, commands = {}) {\n        this.buttonId = buttonId;\n        this.commands = {};\n\n        // Check if commands is an instance of Button, if not, convert each entry to a Command instance\n        if (!(commands instanceof Button)) {\n            for (const commandId in commands) {\n                if (commands.hasOwnProperty(commandId)) {\n                    this.addCommand(commandId, commands[commandId]);\n                }\n            }\n        }\n    }\n\n    addCommand(commandId, sourceCommand = null) {\n        const command = sourceCommand instanceof Command ? sourceCommand : new Command(commandId, sourceCommand);\n        this.commands[commandId] = command;\n        return command;\n    }\n\n    getId() {\n        return this.buttonId;\n    }\n\n    getObject() {\n        const buttonObject = {};\n        Object.keys(this.commands).forEach(commandId => {\n            buttonObject[commandId] = this.commands[commandId].getObject();\n        });\n        return buttonObject;\n    }\n}\n\nclass Command {\n    constructor(commandId, action = {}) {\n        this.commandId = commandId;\n        this.action = action;\n    }\n\n    getId() {\n        return this.commandId;\n    }\n\n    getObject() {\n        return this.action;\n    }\n}\n\n\nclass RemoteInterface {\n    constructor(remoteConfig = {}) {\n        this.remotes = {};\n        if (remoteConfig instanceof Remote) {\n            this.setRemote(remoteConfig.getId(), remoteConfig);\n        } else {\n            const remotes = remoteConfig.remotes || {};\n            Object.keys(remotes).forEach(remoteId => {\n                this.setRemote(remoteId, remotes[remoteId]);\n            });\n        }\n    }\n\n\n    setRemote(remoteId, sourceRemote = null) {\n        if (sourceRemote instanceof Remote) {\n            this.remotes[remoteId] = sourceRemote;\n        } else if (sourceRemote) {\n\n            if (!validateRemote(sourceRemote)) {\n                throw new Error('Invalid remote configuration');\n            }\n            this.remotes[remoteId] = new Remote(remoteId, sourceRemote);\n        } else {\n            this.remotes[remoteId] = new Remote(remoteId);\n        }\n        return this.remotes[remoteId];\n    }\n\n    setButton(remoteId, buttonId, sourceButton = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId); // Ensure remote exists before setting button\n        }\n        const button = this.remotes[remoteId].addButton(buttonId, sourceButton);\n        return button;\n    }\n\n\n    setCommand(remoteId, buttonId, commandId, sourceCommand = null) {\n        if (!this.remotes[remoteId]) {\n            this.setRemote(remoteId);\n        }\n        if (!this.remotes[remoteId].buttons[buttonId]) {\n            this.setButton(remoteId, buttonId);\n        }\n        const button = this.remotes[remoteId].buttons[buttonId];\n        const command = button.addCommand(commandId, sourceCommand);\n        return command;\n    }\n\n    getCommand(remoteId, buttonId, commandId) {\n        const remote = this.remotes[remoteId];\n\n        if (!remote) {\n            throw new Error(`Remote not found for ID ${remoteId}`);\n        }\n\n        const button = remote.buttons[buttonId];\n        if (!button) {\n            throw new Error(`Button not found for ID ${buttonId}`);\n        }\n\n        const command = button.commands[commandId];\n        if (!command) {\n            throw new Error(`Command not found for ID ${commandId}`);\n        }\n\n        return command;\n    }\n\n    getRemoteIds() {\n        return Object.keys(this.remotes);\n    }\n\n    // Ignore this, it's for debugging\n    getButtonIds2(remoteId) {\n        if (this.remotes[remoteId]) {\n            return Object.keys(this.remotes[remoteId].buttons);\n        }\n        return [];\n    }\n\n    getButtonIds(remoteId) {\n        if (this.remotes[remoteId]) {\n            if (this.remotes[remoteId] instanceof Button) {\n                // If the value is an instance of Button, return its ID\n                return [this.remotes[remoteId].getId()];\n            } else {\n                // Otherwise, assume it's an object with button IDs as keys\n                return Object.keys(this.remotes[remoteId]);\n            }\n        }\n        return [];\n    }\n\n    getCommandIds(remoteId, buttonId) {\n        if (this.remotes[remoteId] && this.remotes[remoteId].buttons[buttonId]) {\n            return Object.keys(this.remotes[remoteId].buttons[buttonId].commands);\n        }\n        return [];\n    }\n\n    getObject() {\n        return {\n            remotes: this.remotes\n        };\n    }\n}\n\n// Validation functions\nfunction validateRemote(remoteConfig) {\n    if (remoteConfig instanceof Remote) {\n        // If remoteConfig is already an instance of Remote, it's valid\n        return true;\n    } else if (typeof remoteConfig === 'object' && remoteConfig !== null) {\n        const remoteInstance = new Remote('remoteId');\n\n        // Iterate over each button in the remote\n        Object.keys(remoteConfig).forEach(buttonId => {\n            const commandConfigs = remoteConfig[buttonId];\n            const buttonInstance = new Button(buttonId);\n\n            // Iterate over each command in the button\n            Object.keys(commandConfigs).forEach(commandId => {\n                const commandInstance = new Command(commandId, commandConfigs[commandId]);\n\n                // Add the command to the button\n                buttonInstance.addCommand(commandId, commandInstance);\n            });\n\n            // Add the button to the remote\n            remoteInstance.addButton(buttonId, buttonInstance);\n        });\n\n        // Validate the remote instance\n        const isValid = validateRemote(remoteInstance);\n        return isValid;\n    } else {\n        return false; // Invalid remote configuration\n    }\n}\n\n\n\nfunction validateButton(buttonConfig) {\n    if (buttonConfig instanceof Button) {\n        // If buttonConfig is an instance of Button class, we'll validate its commands\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            const command = buttonConfig.commands[commandId];\n            if (!(command instanceof Command)) {\n                return false; // Invalid command within the button\n            }\n            // Optionally, add specific validation logic for command configuration here\n        }\n        return true; // All checks passed\n    } else if (typeof buttonConfig === 'object' && buttonConfig !== null && buttonConfig.hasOwnProperty('commands')) {\n        // If buttonConfig is an object representation, we'll recursively call validateCommand for each command\n        for (const commandId in buttonConfig.commands) {\n            if (!buttonConfig.commands.hasOwnProperty(commandId)) {\n                continue;\n            }\n            if (!validateCommand(buttonConfig.commands[commandId])) {\n                return false; // Invalid command configuration\n            }\n        }\n        return true; // All checks passed\n    } else {\n        return false; // Invalid button configuration\n    }\n}\n\nfunction validateCommand(commandConfig) {\n    if (commandConfig instanceof Command) {\n        // If commandConfig is an instance of Command class, it's valid\n        return true;\n    } else if (typeof commandConfig === 'object' && commandConfig !== null) {\n        // If commandConfig is an object representation, we'll check its properties\n        if (commandConfig.hasOwnProperty('commandId') && commandConfig.hasOwnProperty('action')) {\n            // Optionally, add specific validation logic for command configuration here\n            return true; // All checks passed\n        }\n    }\n    return false; // Invalid command configuration\n}\n\nclass DeviceManager {\n    constructor(mapping = {}) {\n        this.devices = mapping;\n    }\n\n    setDevice(device_id, data) {\n        this.devices[device_id] = data;\n    }\n\n    getDevice(device_id) {\n        return this.devices[device_id];\n    }\n\n    removeDevice(device_id) {\n        if (this.devices.hasOwnProperty(device_id)) {\n            delete this.devices[device_id];\n        }\n    }\n\n    getDevices() {\n        return this.devices;\n    }\n}\n\nclass DebounceTimerManager {\n    constructor() {\n        this.timers = {};\n    }\n\n    createTimer(attributeValues, debounceTimers, callback, delay) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            nestedObject[attrValue] = nestedObject[attrValue] || {};\n            nestedObject = nestedObject[attrValue];\n        }\n        if (!nestedObject.hasOwnProperty('timer')) {\n            nestedObject.timer = setTimeout(callback, delay);\n        }\n    }\n\n    updateTimer(attributeValues, debounceTimers, callback, delay) {\n        this.clearTimer(attributeValues, debounceTimers);\n        this.createTimer(attributeValues, debounceTimers, callback, delay);\n    }\n\n    clearTimer(attributeValues, debounceTimers) {\n        let nestedObject = debounceTimers;\n        for (const attrValue of attributeValues) {\n            if (!nestedObject[attrValue]) {\n                return;\n            }\n            nestedObject = nestedObject[attrValue];\n        }\n        if (nestedObject.timer) {\n            clearTimeout(nestedObject.timer);\n            delete nestedObject.timer;\n        }\n    }\n}\n\nclass WaitTimerManager {\n    constructor() {\n        this.timers = {};\n        this.callbacks = {}; // Store callbacks for each event or condition\n        this.checkInterval = 1000; // Interval in milliseconds for checking existence\n    }\n\n    // Create a timer that waits for the item to exist\n    createWaitTimer(item, callback, timeout = null) {\n        // Check if the item already has callbacks registered\n        if (!this.callbacks[item]) {\n            this.callbacks[item] = [];\n        }\n\n        // Add the new callback to the list of callbacks for this item\n        this.callbacks[item].push(callback);\n\n        // If the timer doesn't exist, create it\n        if (!this.timers[item]) {\n            if (timeout !== null) {\n                // If timeout is provided, clear the timer after the specified duration\n                this.timers[item] = setTimeout(() => {\n                    this.clearWaitTimer(item);\n                    this.invokeCallbacks(item, new Error(`Timeout waiting for ${item}`));\n                }, timeout);\n            }\n\n            // Check for the existence of the item periodically\n            this.checkExistence(item);\n        }\n    }\n\n    // Check for the existence of the item periodically\n    checkExistence(item) {\n        const interval = setInterval(() => {\n            if (global.get(item) !== undefined) {\n                clearInterval(interval);\n                this.invokeCallbacks(item, null); // Item found\n            }\n        }, this.checkInterval);\n    }\n\n    // Invoke all callbacks associated with the item\n    invokeCallbacks(item, error) {\n        if (this.callbacks[item]) {\n            this.callbacks[item].forEach(callback => {\n                callback(error);\n            });\n            delete this.callbacks[item]; // Remove the callbacks for this item\n        }\n    }\n\n    // Clear the timer associated with the item\n    clearWaitTimer(item) {\n        if (this.timers[item]) {\n            clearTimeout(this.timers[item]);\n            delete this.timers[item];\n        }\n    }\n}\n\n// Create a singleton instance of WaitTimerManager\nconst waitTimerManager = new WaitTimerManager();\n\nclass Person {\n    constructor(person_object) {\n        // Assign properties from the personObj parameter\n        this.entityId = person_object.entity_id;\n        this.oldState = person_object.old_state;\n        this.newState = person_object.new_state;\n    }\n\n    isPresent() {\n        return this.newState.state !== 'not_home';\n    }\n\n    getId() {\n        return this.newState.attributes.id;\n    }\n\n    // Other methods for manipulating the person object can be added here\n}\n\nclass MotionEvent {\n    constructor(sensor_id, location, timestamp, state = \"on\", attr = {}) {\n        this.sensor_id = sensor_id;\n        this.location = location;\n        this.timestamp = timestamp;\n        // Check if state is passed as an attribute\n        if (typeof state === \"object\") {\n            attr = state; // Treat state as part of the attributes\n            state = \"on\"; // Default state if not provided separately\n        }\n        this.state = state;\n        // Spread optional attributes onto the class instance\n        Object.assign(this, attr);\n    }\n}\n\n// Motion detection handler function\nfunction motionDetectionHandler(event_data) {\n\n    if (!event_data) {\n        const message = \"[ERROR]: Missing motion event data\";\n        node.warn(message);\n        node.status(status(message, { fill: \"red\" }).payload);\n        return null;\n    }\n\n    const sensor_id = event_data.entity_id;\n\n    return getEntity(sensor_id)\n        .then(entity => {\n            // If an entity_id was found, get location/area_id\n            const location = entity.area_id;\n\n            // Create MotionEvent object\n            const motion_event_obj = new MotionEvent(\n                sensor_id, // entity\n                location, // area_id\n                event_data.last_changed, // timestamp\n                //{ last_updated: event_data.last_updated }\n                event_data\n            );\n            // Call the registered callback function on the motion sensor port with the event data\n            return motionSensorPort(motion_event_obj);\n        })\n        .catch(error => {\n            // Handle any errors thrown by getEntity\n            const message = `[ERROR]: ${error.message}`;\n            node.warn(message);\n            node.status(status(message, { fill: \"red\" }).payload);\n            return null;\n        });\n\n}\n\n// Occupancy Repository\nclass OccupancyRepository {\n    static getObject() {\n        return global.get(OCCUPANCY.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(OCCUPANCY.OBJECT, value);\n    }\n}\n\n// Presence Repository\nclass PresenceRepository {\n    static getObject() {\n        return global.get(PRESENCE.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(PRESENCE.OBJECT, value);\n    }\n}\n\n// Source Repository\nclass SourceRepository {\n    static getObject() {\n        return global.get(SOURCE.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(SOURCE.OBJECT, value);\n    }\n}\n\n// Entities Repository\nclass EntitiesRepository {\n    static getObject() {\n        return global.get(ENTITIES.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(ENTITIES.OBJECT, value);\n    }\n}\n\n// Areas Repository\nclass AreasRepository {\n    static getObject() {\n        return global.get(AREAS.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(AREAS.OBJECT, value);\n    }\n}\n\n// Devices Repository\nclass DevicesRepository {\n    static getObject() {\n        return global.get(DEVICES.OBJECT);\n    }\n\n    static setObject(value) {\n        global.set(DEVICES.OBJECT, value);\n    }\n}\n\nfunction motionSensorPort(motion_event) {\n    try {\n        const status = `Motion detected [${motion_event.state}] at [${motion_event.location}: ${motion_event.sensor_id}] at [${new Date(motion_event.timestamp)}]`;\n        // Core domain logic for processing motion events\n\n        return {motion_event, status};\n    } catch (error) {\n        // If an error occurs during processing, return the error message\n        return {motion_event, status:`Error processing motion event: ${error.message}`}\n    }\n}\n\n// General\nglobal.set(`${object_id}healthCheck`, healthCheck);\nglobal.set(`${object_id}round`, round);\nglobal.set(`${object_id}getGlobalID`, getGlobalID);\nglobal.set(`${object_id}exists`, exists);\nglobal.set(`${object_id}status`, status);\nglobal.set(`${object_id}setAttribute`, setAttribute);\nglobal.set(`${object_id}append`, append);\nglobal.set(`${object_id}abate`, abate);\nglobal.set(`${object_id}getFileNameFromPath`, getFileNameFromPath);\nglobal.set(`${object_id}mapArrayToDict`, mapArrayToDict);\nglobal.set(`${object_id}currentState`, currentState);\nglobal.set(`${object_id}castToArray`, castToArray);\nglobal.set(`${object_id}getEventAttributes`, getEventAttributes);\nglobal.set(`${object_id}getEntity`, getEntity);\nglobal.set(`${object_id}waitForGlobalContext`, waitForGlobalContext);\nglobal.set(`${object_id}getGlobalAsync`, getGlobalAsync);\n\n// API\nglobal.set(`${object_id}createResponseObject`, createResponseObject);\n\n// .yaml template generation\nglobal.set(`${object_id}generateToggleSwitchValueTemplate`, generateToggleSwitchValueTemplate);\nglobal.set(`${object_id}generateTemplateSwitchObject`, generateTemplateSwitchObject);\nglobal.set(`${object_id}generateYamlTemplateObject`, generateYamlTemplateObject);\nglobal.set(`${object_id}addEntityToTemplateObject`, addEntityToTemplateObject);\nglobal.set(`${object_id}createTurnOnOffObject`, createTurnOnOffObject);\nglobal.set(`${object_id}createIconTemplate`, createIconTemplate);\n\n// RemoteInterface\nglobal.set(`${object_id}RemoteInterface`, RemoteInterface);\nglobal.set(`${object_id}Remote`, Remote);\nglobal.set(`${object_id}Button`, Button);\nglobal.set(`${object_id}Command`, Command);\n\n// Device Manager\nglobal.set(`${object_id}DeviceManager`, DeviceManager);\n\n// Timer Managers\nglobal.set(`${object_id}DebounceTimerManager`, DebounceTimerManager);\nglobal.set(`${object_id}WaitTimerManager`, WaitTimerManager);\n\n// Person\nglobal.set(`${object_id}Person`, Person);\n\n// Domains\nglobal.set(`${object_id}MotionEvent`, MotionEvent);\nglobal.set(`${object_id}motionDetectionHandler`, motionDetectionHandler);\nglobal.set(`${object_id}OccupancyRepository`, OccupancyRepository);\nglobal.set(`${object_id}PresenceRepository`, PresenceRepository);\nglobal.set(`${object_id}SourceRepository`, SourceRepository);\nglobal.set(`${object_id}EntitiesRepository`, EntitiesRepository);\nglobal.set(`${object_id}AreasRepository`, AreasRepository);\nglobal.set(`${object_id}DevicesRepository`, DevicesRepository);\n\n// Ports\nconst ports = {\n    motionSensorPort\n};\nglobal.set(`${object_id}motionSensorPort`, motionSensorPort);\n\n// Adapters\nconst adapters = {};\n\n// Domain\nconst domain = {\n    MotionEvent,\n    motionDetectionHandler,\n    OccupancyRepository,\n    PresenceRepository,\n\n};\n\n// General\nconst util = {};\n\nconst utils = {\n    adapters,\n    domain,\n    ports,\n    util\n};\n\nvar loaded = false;\nvar gc = global.keys();\n\n// Check if utils object is loaded\nfor (let i = 0; i < gc.length; i++) {\n\n    if (gc[i] === UTILS.OBJECT) loaded = true;\n\n}\n\n//global.set(`${SOURCE.REPOSITORY}${UTILS.OBJECT}`, utils);\n\n// load functionGlobalContext import\n//global.set(SOURCE.OBJECT, context.global[SOURCE.OBJECT]);\nconst MODULE_ID = env.get(\"MODULE_ID\");\nglobal.set(MODULE_ID, context.global[MODULE_ID]);\n\n// Return loaded status\nif (loaded) return status(`Utility Functions Loaded [${UTILS.OBJECT}]`);\n\n// Return non-loaded status\nreturn status(`Utility Functions Not loaded [${UTILS.OBJECT}]`);","outputs":1,"timeout":"","noerr":101,"initialize":"","finalize":"","libs":[],"x":760,"y":700,"wires":[[]]},{"id":"7d7eee51.7878a8","type":"function","z":"f9586397.5973","d":true,"name":"hex2dec","func":"global.set('hex2dec', function(hexa) {\n    return parseInt(hexa, 16);\n}, 'memoryOnly');\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":100,"y":260,"wires":[[]]},{"id":"2012dbe6.92df34","type":"function","z":"f9586397.5973","d":true,"name":"hex2bin","func":"global.set('hex2bin', function(hex) {\n    return (\"00000000\" + (parseInt(hex, 16)).toString(2)).substr(-8);\n}, 'memoryOnly');\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":100,"y":220,"wires":[[]]},{"id":"ad3085040347cd43","type":"http response","z":"886885a440f0f2a6","name":"http response","statusCode":"","headers":{},"x":200,"y":80,"wires":[]},{"id":"ca033a37eb9cedd1","type":"change","z":"886885a440f0f2a6","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"statusCode","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":200,"y":140,"wires":[[]]},{"id":"e58f4c00.51b6a","type":"function","z":"e7f66014407acf38","name":"Format Service Calls","func":"// Format Button Service Calls\nvar serviceParts        = msg.payload.split(\",\");\nnode.warn(\"serviceParts: \"+ serviceParts);\n\n/* Target must be one of te following\n\"target\": {\n    \"area_id\": [\"kitchen\"],\n        \"device_id\": [\"8932894082930482903\"],\n            \"entity_id\": [\"light.kitchen\", \"switch.garage_light\"]\n}*/\n\nmsg.payload   = { \n    domain      : serviceParts[0],\n    service     : serviceParts[1],\n    target      : { entity_id: serviceParts[2]}\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":80,"wires":[[]]},{"id":"2b492d55e4e3848d","type":"api-call-service","z":"ba939a5db2308e08","name":"ACTIVATE HOME mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.system_occupancy_home"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":80,"wires":[[]]},{"id":"037801f4cf301084","type":"json","z":"b6a890be694a7c3e","name":"Convert JSON to Object","property":"payload","action":"obj","pretty":false,"x":690,"y":80,"wires":[["b1d0c0f0c86f2de2"]]},{"id":"e077c1298efed5fb","type":"file in","z":"b6a890be694a7c3e","name":"Load File","filename":"path","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":500,"y":80,"wires":[["037801f4cf301084"]]},{"id":"b1d0c0f0c86f2de2","type":"function","z":"b6a890be694a7c3e","name":"Function Template","func":"// Function Template (v1.1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nvar utils = global.get(\"utils\");\n\n// Set Global Context ID, default to \"areas\"\nvar areaRegistryGlobalContext = utils.exists(env.get(\"AREA_REGISTRY_GC\")) ? env.get(\"AREA_REGISTRY_GC_GC\") : \"areas\";\n\nvar areas = msg.payload.data.areas;\nnode.warn(areas);\n\nif (utils.exists(areas)) {\n\n    // Set Global Context\n    global.set(areaRegistryGlobalContext, msg.payload.data.areas);\n\n    // Return loaded status\n    return status(\"Area Registry loaded [\" + areaRegistryGlobalContext + \"]\");\n\n}\n\n// Return non-loaded status\nreturn status(\"Area Registry Not loaded [\" + areaRegistryGlobalContext + \"]\");\n\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\nfunction status(message) {\n\n    return { \"payload\": message };\n\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":80,"wires":[[]]},{"id":"6a574c4bb9138042","type":"inject","z":"b6a890be694a7c3e","name":"Load Area Registry","props":[{"p":"path2","v":"/config/.storage/core.area_registry","vt":"str"},{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":"1","topic":"","payload":"true","payloadType":"bool","x":150,"y":80,"wires":[["0a50c09793bac87b"]]},{"id":"0a50c09793bac87b","type":"function","z":"b6a890be694a7c3e","name":"Utility Functions","func":"// Function Template (v1.1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nvar utils = global.get(\"utils\");\n// Default to /config/.storage/core.area_registry if no PATH environment variable passed\nmsg.path = utils.exists(env.get(\"AREA_REGISTRY_PATH\")) ? env.get(\"AREA_REGISTRY_PATH\") : \"/config/.storage/core.area_registry\";\n\nnode.warn(msg.path);\n\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":80,"wires":[["e077c1298efed5fb"]]},{"id":"1ee26ee40bc9de64","type":"json","z":"bd6afb792041214f","name":"Convert JSON to Object","property":"payload","action":"obj","pretty":false,"x":350,"y":100,"wires":[["576e7618aa1c1f3c"]]},{"id":"576e7618aa1c1f3c","type":"function","z":"bd6afb792041214f","name":"Store Object","func":"// Function Template (v1.1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.data         : file data\n// msg.global_id            : Global Context identifier / Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nconst utils = context.global[env.get(\"MODULE_ID\")].util.common;\nconst fileName = utils.getFileNameFromPath(msg.filename);\nconst file_data = msg.payload.data;\n\nif (!utils.exists(file_data)) {\n\n    // Return non-loaded status\n    return [null, utils.status(\"Object Not loaded [\" + fileName + \"]\")];\n\n}\n\nmsg.payload = file_data;\n\n// Return loaded status\nreturn [msg, utils.status(\"Object loaded [\" + fileName + \"]\")];\n\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":100,"wires":[[],[]]},{"id":"81d2e25bf7ee74d1","type":"subflow:a5ba79dede304e04","z":"bd6afb792041214f","name":"","x":140,"y":140,"wires":[["1ee26ee40bc9de64"],[]]},{"id":"825e840c9fccbb3e","type":"catch","z":"bd6afb792041214f","name":"","scope":null,"uncaught":false,"x":560,"y":180,"wires":[[]]},{"id":"d8ca55012a5de042","type":"function","z":"20b25024f4366686","name":"Event Poller 1.5","func":"// Event Poller (v1.5)\n// Event Poller\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.reset                    : flag to stop polling\n// msg.delay || env.POLL_RATE   : Entity/Global ID || delay value\n//\n// -*- OUTPUTS -*-\n// msg.payload                  : existing message payload\n// msg.delay                    : delay value in milliseconds\n// ******************************************************************\n\n/*** START ***/\nconst repository = context.global[env.get(\"MODULE_ID\")];\nconst utils = repository.util.common;\nconst { TimeoutConverter } = repository.domain.models;\n\n// Reset existing timers\nnode.send([{reset:true}, null]);\n\n// Pass on reset flag if found\nif (msg.reset) return [msg, utils.status(\"RESET\")];\n\nconst poll_rate = env.get(\"POLL_RATE\");\n\nif (!poll_rate && !msg.delay) return ([null, utils.status(`[ERROR] Missing msg.delay|$POLL_RATE: ${msg.delay}|${poll_rate}`, { fill: \"red\" })]);\n\ntry {\n\n    // Check if msg.delay or $POLL_RATE was passed\n    msg.delay = msg.delay ? msg.delay : poll_rate;\n\n    const delay_entity_state = global.get(`homeassistant.homeAssistant.states['${msg.delay}']`);\n\n    // Check if positive integer value was passed\n    if (typeof msg.delay === \"number\" && msg.delay > 0) {\n    // Continue\n\n    // Check if entity ID was passed\n    } else if (delay_entity_state) {\n        \n        msg.delay = TimeoutConverter.convertToMilliseconds(delay_entity_state.state, delay_entity_state.attributes.unit_of_measurement);\n\n    // Should be a global context ID\n    } else {\n        msg.delay = TimeoutConverter.convertTimeoutString(global.get(msg.delay));\n    }\n\n    if (!msg.delay) return ([null, utils.status(`[ERROR] Invalid msg.delay|$POLL_RATE: ${msg.delay}|${poll_rate}`, { fill: \"red\" })]);;\n\n    // Apply multiplier if present\n    const multiplier = env.get(\"POLL_RATE_MULTIPLIER\") || 1;\n    console.log(`MULTIPLIER: ${multiplier}`);\n    msg.delay = msg.delay * multiplier;\n\n    return [msg, utils.status(`${msg.delay} milliseconds`)];\n\n} catch (error) {\n    return ([null, utils.status(`Error retrieving msg.delay|$POLL_RATE: ${error.message}`, { fill: \"red\" })]);\n}\n\n/*** END ***/","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":80,"wires":[["ec2364ce90addde6"],[]]},{"id":"ec2364ce90addde6","type":"trigger","z":"20b25024f4366686","name":"resend every msg.delay || 60s","op1":"","op2":"0","op1type":"pay","op2type":"str","duration":"-60","extend":true,"overrideDelay":true,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":630,"y":40,"wires":[[]]},{"id":"70a50ced4a3dc70b","type":"subflow:a7ed881353992217","z":"20b25024f4366686","name":"","x":170,"y":120,"wires":[["d8ca55012a5de042"],[]]},{"id":"608f5fe6073b967a","type":"function","z":"d45c7673c797b311","name":"Set Global Context","func":"// Set Global Context\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\n//const utils = global.get(env.get(\"UTIL\") || \"system.util\");\n//node.warn(utils);\nglobal.set(msg.global_id, msg.payload);\n\nreturn msg;\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":80,"wires":[[]]},{"id":"0f5e5e5bd173d16c","type":"function","z":"a444bbb042f71f91","name":"Calculate Occupied Areas","func":"// Calculate Occupied Areas\n// \n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.areas                : areas object global id\n// msg.payload.entities             : entities object global id\n// msg.payload.occupancy            : occupancy object global id\n//\n// -*- OUTPUTS -*-\n// msg.payload                      : areas object\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n//node.warn(msg.payload);\n// Return if no areas present in payload\nif (!msg.payload.areas) return [null, utils.status(\"missing areas property in payload\")];\n\n// Return if no entities present in payload\nif (!msg.payload.entities) return [null, utils.status(\"missing entities property in payload\")];\n\n// Return if no occupancy present in payload\nif (!msg.payload.occupancy) return [null, utils.status(\"missing occupancy property in payload\")];\n//node.warn(msg.payload);\n// Main logic to check area occupancy\nlet areas = global.get(msg.payload.areas);\nconst entities = global.get(msg.payload.entities);\nconst occupancy = global.get(msg.payload.occupancy);\n//node.warn(msg.payload);\n// Return if no areas found\nif (!areas) return [null, utils.status(\"missing areas object\")];\n\n// Return if no entities found\nif (!entities) return [null, utils.status(\"missing entities object\")];\n\n// Return if no occupancy found\nif (!occupancy) return [null, utils.status(\"missing occupancy object\")];\n\n// Return if no occupancy timeout found\nif (!occupancy.timeout) return [null, utils.status(\"missing occupancy.timeout property in global context\")];\n//node.warn(msg.payload);\nlet areasOccupied = 0;\nlet anyAreaOccupied = false; // Flag to track if any area is occupied\n// Calculate occupancy for each area\nfor (const areaId in areas) {\n    \n    const area = areas[areaId];\n    area.occupied = isAreaOccupied(area, entities, occupancy.timeout);\n    if (area.occupied.state) {\n        areasOccupied++; \n        anyAreaOccupied = true; // Set the flag if any area is occupied\n    }\n    // Update occupied object within occupancy object\n    occupancy.occupied = setOccupied(occupancy.occupied, area.occupied.last_occupied, occupancy.timeout);\n    \n    // Check if the current area is the last_occupied and set the area_id\n    if (occupancy.occupied.last_occupied == area.occupied.last_occupied) occupancy.occupied.area_id = area.id;\n    \n}\n\n// Set overall occupancy state based on whether any area is occupied\noccupancy.occupied.state = anyAreaOccupied;\n\noccupancy.areas = areas;\n// Return the resulting occupancy object\nmsg.payload = occupancy;\nreturn [msg, utils.status(`[areas occupied: ${areasOccupied}]`)];\n/*** END ***/\n\n\n/*** HELPERS ***/\n\n// Helper function to check if an area is occupied\nfunction isAreaOccupied(area, entities, occupancyTimeout) {\n\n    // Call the function to get entities in areas\n    const entitiesInArea = getEntitiesInArea(area, entities);\n\n    for (const entity in entitiesInArea){\n\n        let state = utils.currentState(entitiesInArea[entity].entity_id);\n        if (state.state == \"on\") return {state: true, last_occupied: Date.now()};\n        let lastChanged = utils.exists(state.last_changed) ? state.last_changed : state.last_updated;\n        return setOccupied(area.occupied, lastChanged, occupancyTimeout);\n\n    }\n\n    return setOccupied(area.occupied, null, occupancyTimeout);\n    //return { state: false, last_occupied: updateLastOccupied(area.occupied, lastChanged) };\n\n}\n\n// Helper function to check if an area is occupied\nfunction isAreaOccupied2(area, entities, occupancyTimeout) {\n    const currentTime = new Date().getTime();\n\n    // Call the function to get entities in areas\n    const entitiesInArea = getEntitiesInArea(area, entities);\n\n    for (const entity of entitiesInArea) {\n        const state = utils.currentState(entity.entity_id);\n        const lastChanged = utils.exists(state.last_changed) ? state.last_changed : state.last_updated;\n        if (state.state === \"on\" || (lastChanged && (currentTime - new Date(lastChanged).getTime()) <= occupancyTimeout)) {\n            //return { state: true, last_occupied: lastChanged };\n\n        }\n    }\n\n    return { state: false, last_occupied: null };\n}\n\n// Helper function to check if an area is occupied\nfunction isAreaOccupied3(area, entities, occupancyTimeout) {\n    const currentTime = Date.now();\n\n    // Call the function to get entities in areas\n    const entitiesInArea = getEntitiesInArea(area, entities);\n\n    for (const entity of entitiesInArea) {\n        const state = utils.currentState(entity.entity_id);\n        const lastChanged = utils.exists(state.last_changed) ? state.last_changed : state.last_updated;\n\n        return setOccupied(area.occupied, lastChanged, occupancyTimeout); \n    }\n\n    return setOccupied(area.occupied, null, occupancyTimeout);\n}\n\n\n// Helper function to check if an entity is a binary sensor\nfunction isBinarySensor(entity) {\n\n    return entity.platform === \"zha\" && entity.entity_id.startsWith(\"binary_sensor.\");\n\n}\n\n// Helper function to get all entities for each area\nfunction getEntitiesInArea(area, entities) {\n\n    const entitiesInArea = [];\n\n    for (const entityId in entities) {\n\n        if (isBinarySensor(entities[entityId]) && entities[entityId].area_id == area.id) {\n\n            entitiesInArea.push(entities[entityId])\n            \n        }\n\n    }\n\n    return entitiesInArea;\n\n}\n\n// Helper function to update the occupied object\nfunction setOccupied(occupied, lastChanged, timeout) {\n    \n    const lastMotionTimeThreshold = Date.now() - timeout;\n    //node.warn(`lastMotionTimeThreshold: ${lastMotionTimeThreshold}`);\n\n    if (utils.exists(lastChanged)) lastChanged = new Date(lastChanged).getTime();\n\n    // Create occupied object if it doesnt exist\n    if (!utils.exists(occupied)) {\n\n        occupied = {\n            state: false,\n            last_occupied:lastChanged\n        };\n\n    }\n\n    occupied.last_updated = Date.now();\n\n    // Set occupied state if within threshold\n    if (utils.exists(lastChanged) && (lastChanged > lastMotionTimeThreshold)) {\n        \n        occupied.state = true;\n        occupied.last_occupied = lastChanged;\n\n    }\n\n    return occupied;\n\n}\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":80,"wires":[[],[]]},{"id":"1d52c466c78f7745","type":"function","z":"db47d8fece13615c","name":"Occupancy State Updater","func":"// Occupancy State Updater\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : binary_sensor event data\n//\n// -*- OUTPUTS -*-\n// msg.payload              : OccupancyService object\n// ******************************************************************\n\n/*** START ***/\nconst repository = context.global[env.get(\"MODULE_ID\")];\nconst utils = repository.util.common;\nconst { getState, exists } = repository.util.common;\nconst { Entities, TimeoutConverter, OccupancyEvent } = repository.domain.models;\nconst OccupancyService = repository.domain.services.OccupancyService;\nconst binarySensorOccupancyAdapter = repository.adapters.binarySensorOccupancyAdapter;\n\nconst OCCUPANCY_TIMEOUT_ENTITY_ID = env.get(\"OCCUPANCY_TIMEOUT_ENTITY_ID\") || \"input_number.occupancy_timeout\";\n\nconst event_data = msg.payload;\nlet status, area_id, states;\n\nif (!exists(event_data)) {\n    status = `Missing event data (msg.payload): [${msg.payload}]`;\n    return [null, utils.status(status, \"red\")];\n}\n\ntry {\n    area_id = Entities.getEntity(event_data.entity_id).area_id;\n    states = global.get(\"homeassistant.homeAssistant.states\");\n\n    if (area_id) {\n        // Check for area occupancy timeout helper\n        const area_occupancy_timeout_entity = Entities.getEntityByAttributes(OCCUPANCY_TIMEOUT_ENTITY_ID, [{key:\"area_id\", value:area_id}]);\n\n        if (area_occupancy_timeout_entity) {\n            const timeout = getState(area_occupancy_timeout_entity.entity_id, states).state;\n            if (timeout) OccupancyService.setTimeout(TimeoutConverter.convertToMilliseconds(timeout, area_occupancy_timeout_entity.unit_of_measurement), area_id);\n            //node.warn(`[WARN]: ${OCCUPANCY_TIMEOUT_ENTITY_ID} found for ${area_id}:  ${area_occupancy_timeout_entity.entity_id}`);\n        } else {\n            //node.warn(`[WARN]: ${OCCUPANCY_TIMEOUT_ENTITY_ID} not found for ${area_id}, skipping.`);\n        }\n    }\n    // Check for (global) occupancy timeout helper\n    const occupancy_timeout_entity = Entities.getEntityByAttributes(OCCUPANCY_TIMEOUT_ENTITY_ID);\n\n    if (occupancy_timeout_entity) {\n        const timeout = getState(occupancy_timeout_entity.entity_id, states).state;\n        if (timeout) OccupancyService.setTimeout(TimeoutConverter.convertToMilliseconds(timeout, occupancy_timeout_entity.unit_of_measurement));\n        //node.warn(`[WARN]: ${OCCUPANCY_TIMEOUT_ENTITY_ID} found.`);\n    } else {\n        //node.warn(`[WARN]: ${OCCUPANCY_TIMEOUT_ENTITY_ID} not found, skipping.`);\n    }\n\n} catch (error) {\n    status = `[ERROR]: ${error}`;\n    node.warn(status);\n    return [null, utils.status(status, \"red\")];\n}\n\ntry {\n    node.send([null, utils.status(`Updating Occupancy for [${area_id}]...`, \"yellow\")]);\n    OccupancyService.setOccupancy(new OccupancyEvent(event_data));\n} catch (error) {\n    status = `[ERROR] (binarySensorOccupancyAdapter): ${error}`;\n    node.warn(status);\n    return [null, utils.status(status, \"red\")];\n}\n\nreturn ([msg, utils.status(`Occupancy updated for [${area_id}]`)]);","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":80,"wires":[[],[]]},{"id":"1503baa24c0cfd70","type":"inject","z":"decd1d62e4154436","name":"Hue Dimmer Remote Generator","props":[{"p":"payload.config","v":"CONFIG","vt":"env"},{"p":"payload.device_id","v":"DEVICE_ID","vt":"env"},{"p":"payload.remote_id","v":"REMOTE_ID","vt":"env"},{"p":"payload.actions.on","v":"ACTION_ON","vt":"env"},{"p":"payload.actions.up","v":"ACTION_UP","vt":"env"},{"p":"payload.actions.down","v":"ACTION_DOWN","vt":"env"},{"p":"payload.actions.off","v":"ACTION_OFF","vt":"env"},{"p":"global_id","v":"GLOBAL_ID","vt":"env"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":40,"wires":[["caf701139a9a04dd"]]},{"id":"caf701139a9a04dd","type":"function","z":"decd1d62e4154436","name":"Hue Dimmer Interface","func":"// Hue Dimmer Interface (v1.0)\n// Interface for creating / managing hue dimmer configurations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.config       : RemoteInterface config object\n// msg.payload.remote_id    : remote_id\n// msg.payload.entity_id    : remote entity id\n// msg.payload.actions       : action(s)\n\n//\n// -*- OUTPUTS -*-\n// msg.payload              : RemoteInterface config object\n// ******************************************************************\n//var utilGlobalContext = exists(env.get(\"UTIL_GC\")) ? env.get(\"UTIL_GC\") : \"utils\";\n/*** START ***/\nconst utils = global.get(\"utils\");\nconst hue_dimmer_config = new utils.RemoteInterface(msg.payload.config);\nconst remote_id = msg.payload.remote_id || \"default\";\nconst button_ids = [\"on\", \"up\", \"down\", \"off\"];\nconst command_ids = [\"short_release\", \"double_press\", \"hold\"];\nconst actions = msg.payload.actions || {};\n\n// Create remote\nconst hue_dimmer_remote = new utils.Remote(remote_id);\n\nbutton_ids.forEach(buttonId => {\n    const button = hue_dimmer_remote.addButton(buttonId);\n    // Get actions for this button\n    const button_actions = actions[`${buttonId}`] || {};\n    command_ids.forEach(commandId => {\n        const command = button.addCommand(commandId);\n        if (button_actions.hasOwnProperty(commandId)) {\n            command.action = button_actions[commandId];\n        }\n    });\n});\n\n// Display a json object of the remote and its buttons and commands\nnode.warn(hue_dimmer_remote.getObject());\n\n// Add remote to config\nhue_dimmer_config.setRemote(hue_dimmer_remote.getId(), hue_dimmer_remote);\n\n// Display a json object with all the updated remote layouts\nnode.warn(hue_dimmer_config.getObject());\n\nmsg.payload = hue_dimmer_config.getObject();\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":500,"y":80,"wires":[[]]},{"id":"740d8e72d0258e8d","type":"change","z":"decd1d62e4154436","d":true,"name":"Hue Dimmer Remote Generator","rules":[{"t":"set","p":"payload.config","pt":"msg","to":"CONFIG","tot":"env"},{"t":"set","p":"payload.device_id","pt":"msg","to":"DEVICE_ID","tot":"env"},{"t":"set","p":"payload.remote_id","pt":"msg","to":"REMOTE_ID","tot":"env"},{"t":"set","p":"payload.actions.on","pt":"msg","to":"ACTION_ON","tot":"env"},{"t":"set","p":"payload.actions.up","pt":"msg","to":"ACTION_UP","tot":"env"},{"t":"set","p":"payload.actions.down","pt":"msg","to":"ACTION_DOWN","tot":"env"},{"t":"set","p":"payload.actions.off","pt":"msg","to":"ACTION_OFF","tot":"env"},{"t":"set","p":"global_id","pt":"msg","to":"GLOBAL_ID","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":250,"y":180,"wires":[["caf701139a9a04dd"]]},{"id":"65aaa64d1be9436c","type":"function","z":"46392764034e0891","name":"Generate Device Remote","func":"// Device Generator (v1.0)\n// Generates device-remote mapping\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.device_id    : id of the hue dimmer device\n// msg.payload.remote_id    : remote layout id\n// msg.payload.devices      : RemoteInterface config devices object\n// msg.payload.config_id    : RemoteInterface config id\n//\n// -*- OUTPUTS -*-\n// msg.payload              : devices object\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nconst devices = new utils.DeviceManager(msg.payload.devices);\n\nif (msg.payload.device_id && msg.payload.remote_id) {\n    devices.setDevice(msg.payload.device_id, msg.payload.remote_id);\n}\nmsg.payload = devices.getDevices();\nreturn msg;\n/*** END ***/","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":80,"wires":[[]]},{"id":"bb4715b74ea40760","type":"function","z":"a74d2a801b9c7437","d":true,"name":"Event Debouncer","func":"// Event Debouncer (v1.1)\n// Event Debounce Filter\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : Event data\n// msg.global_id            : debounce_timers Global Context ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Debounced event data\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\n// Store debounce timers for each device and its commands\nvar debounce_timers = global.get(\"debounce_timers\") || {};\n\n// Define debounce time in milliseconds\nconst DEFAULT_DEBOUNCE_TIME_MS = 20;\nvar debounce_time = utils.exists(env.get(\"DEBOUNCE_TIME_MS\")) ? env.get(\"DEBOUNCE_TIME_MS\") : DEFAULT_DEBOUNCE_TIME_MS;\n\n// Process incoming message\nvar device_id = msg.payload.event.device_id;\nvar command = msg.payload.event.command;\n\n// Check if there's an existing debounce timer for this device\nif (debounce_timers.hasOwnProperty(device_id)) {\n    // Check if there's an existing debounce timer for this command of the device\n    if (debounce_timers[device_id].hasOwnProperty(command)) {\n        // If a debounce timer exists, clear it to restart the debounce period\n        clearTimeout(debounce_timers[device_id][command]);\n    }\n} else {\n    // If no debounce timer exists for this device, initialize it\n    debounce_timers[device_id] = {};\n}\n\n// Create a new debounce timer for this command of the device\ndebounce_timers[device_id][command] = setTimeout(function () {\n    // After debounce time, execute the downstream nodes with the last message\n    node.send(msg);\n    global.set(\"debounce_timers\", debounce_timers);\n    // Clean up debounce timer after processing the message\n    delete debounce_timers[device_id][command];\n}, debounce_time);\n\n\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":320,"wires":[[]]},{"id":"b41e8010d5de435b","type":"function","z":"a74d2a801b9c7437","d":true,"name":"Generic Event Debouncer","func":"// Event Debouncer (v1.3)\n// Event Debounce Filter\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : Event data\n// env.ATTRIBUTES           : Array of attributes to use for filtering\n// msg.global_id            : debounce_timers Global Context ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Debounced event data\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nclass DebounceTimerManager {\n    constructor() {\n        this.timers = {};\n    }\n\n    createTimer(attributes, debounceTimers, callback, delay) {\n        let nestedObject = debounceTimers;\n        for (const attr of attributes) {\n            nestedObject[attr] = nestedObject[attr] || {};\n            nestedObject = nestedObject[attr];\n        }\n        if (!nestedObject.timer) {\n            nestedObject.timer = setTimeout(callback, delay);\n        }\n    }\n\n    updateTimer(attributes, debounceTimers, callback, delay) {\n        this.clearTimer(attributes, debounceTimers);\n        this.createTimer(attributes, debounceTimers, callback, delay);\n    }\n\n    clearTimer(attributes, debounceTimers) {\n        let nestedObject = debounceTimers;\n        for (const attr of attributes) {\n            if (!nestedObject[attr]) {\n                return;\n            }\n            nestedObject = nestedObject[attr];\n        }\n        if (nestedObject.timer) {\n            clearTimeout(nestedObject.timer);\n            delete nestedObject.timer;\n        }\n    }\n}\n\n// Create a new instance of DebounceTimerManager\nconst debounceManager = new DebounceTimerManager();\n\n// Retrieve filter attributes\nconst attributes_array = env.get(\"FILTER_ATTRIBUTES\");\n\n// Store debounce timers for each combination of attribute values\nvar debounce_timers = global.get(\"debounce_timers\") || {};\n\n// Define debounce time in milliseconds\nconst DEFAULT_DEBOUNCE_TIME_MS = 20;\nvar debounce_time = utils.exists(env.get(\"DEBOUNCE_TIME_MS\")) ? env.get(\"DEBOUNCE_TIME_MS\") : DEFAULT_DEBOUNCE_TIME_MS;\n\n// Process incoming message\nconst callback = function () {\n    // After debounce time, execute the downstream nodes with the last message\n    node.send(msg);\n    global.set(\"debounce_timers\", debounce_timers);\n};\n\ndebounceManager.createTimer(\n    attributes_array,\n    debounce_timers,\n    callback,\n    debounce_time\n);\n\n/*** END ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":380,"wires":[[]]},{"id":"d3fad62dc0a4b70c","type":"function","z":"a74d2a801b9c7437","name":"Generic Event Debouncer","func":"// Event Debouncer (v1.3)\n// Event Debounce Filter\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : Event data\n// env.FILTER_ATTRIBUTES    : Array of attributes to use for filtering\n// env.GLOBAL_ID            : debounce_timers Global Context ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Debounced event data\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\n// Create a new instance of DebounceTimerManager\nconst debounceManager = new utils.DebounceTimerManager();\n\n// Set global context id for debounce_timers object\nconst global_id = env.get(\"GLOBAL_ID\") || \"debounce_timers\";\n\n// Retrieve filter attributes\nconst attributes_array = env.get(\"FILTER_ATTRIBUTES\");\n//const attributes_array = [\"device_id\", \"command\"];\n\n// Store debounce timers for each combination of attribute values\nvar debounce_timers = global.get(global_id) || {};\n\n// Define debounce time in milliseconds\nconst DEFAULT_DEBOUNCE_TIME_MS = 20;\nvar debounce_time = utils.exists(env.get(\"DEBOUNCE_TIME_MS\")) ? env.get(\"DEBOUNCE_TIME_MS\") : DEFAULT_DEBOUNCE_TIME_MS;\n\n// Process incoming message\nconst callback = function () {\n    // After debounce time, execute the downstream nodes with the last message\n    global.set(global_id, debounce_timers);\n    node.send(msg);\n};\n\n// Get attribute values from the event data\nconst eventAttributes = utils.getEventAttributes(msg.payload.event, attributes_array);\n\n// Clear existing timer\ndebounceManager.clearTimer(\n    eventAttributes,\n    debounce_timers\n);\n\n// Create or update debounce timer\ndebounceManager.createTimer(\n    eventAttributes,\n    debounce_timers,\n    callback,\n    debounce_time\n);\n/*** END ***/","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":80,"wires":[[]]},{"id":"e9655bbfaed05e78","type":"function","z":"a74d2a801b9c7437","d":true,"name":"Event Debouncer","func":"// Event Debouncer (v1.1)\n// Event Debounce Filter\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : Event data\n// msg.global_id            : debounce_timers Global Context ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Debounced event data\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\n// Store debounce timers for each device and its commands\nvar debounce_timers = global.get(\"debounce_timers\") || {};\n\n// Define debounce time in milliseconds\nconst DEFAULT_DEBOUNCE_TIME_MS = 20;\nvar debounce_time = utils.exists(env.get(\"DEBOUNCE_TIME_MS\")) ? env.get(\"DEBOUNCE_TIME_MS\") : DEFAULT_DEBOUNCE_TIME_MS;\n\n// Process incoming message\nvar device_id = msg.payload.event.device_id;\nvar command = msg.payload.event.command;\n\n// Check if there's an existing debounce timer for this device\nif (debounce_timers.hasOwnProperty(device_id)) {\n    // Check if there's an existing debounce timer for this command of the device\n    if (debounce_timers[device_id].hasOwnProperty(command)) {\n        // If a debounce timer exists, clear it to restart the debounce period\n        clearTimeout(debounce_timers[device_id][command]);\n    }\n} else {\n    // If no debounce timer exists for this device, initialize it\n    debounce_timers[device_id] = {};\n}\n\n// Create a new debounce timer for this command of the device\nglobal.set(\"debounce_timers\", debounce_timers[device_id][command] = setTimeout(function () {\n    // After debounce time, execute the downstream nodes with the last message\n    node.send(msg);\n    // Clean up debounce timer after processing the message\n    delete debounce_timers[device_id][command];\n}, debounce_time));\n\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":260,"wires":[[]]},{"id":"789d47893fb9a4b6","type":"function","z":"a74d2a801b9c7437","d":true,"name":"function 2","func":"msg.payload = \"wtf\";\nnode.send(msg);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":160,"wires":[[]]},{"id":"e696ca9c9d6c9adb","type":"function","z":"60e070695dcd8459","name":"Remote Generator Interface","func":"// Remote Generator Interface (v1.2)\n// Interface for creating / managing remote configurations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.config       : RemoteInterface config object\n// msg.payload.remote_id    : remote_id\n// msg.payload.buttons      : button ids\n// msg.payload.commands     : command ids\n// msg.payload.actions      : action(s)\n\n//\n// -*- OUTPUTS -*-\n// msg.payload              : RemoteInterface config object\n// ******************************************************************\n\n/*** START ***/\n//const utils = context.global[env.get(\"MODULE_ID\")].util.common;\nconst utils = global.get(\"utils\");\n\nconst config = new utils.RemoteInterface(global.get(msg.payload.global_id)) || \"generic\";\nconst remote_id = msg.payload.remote_id || \"default\";\nlet buttons = msg.payload.buttons;\nlet commands = msg.payload.commands;\nconst actions = msg.payload.actions || {};\nlet status = `Remote generated [${remote_id}]`;\n\n// Error if no commands passed\nif (!commands) {\n    status = \"[ERROR] Missing .commands property.\";\n    return [null, utils.status(status)];\n}\n\n// Error if no buttons or commands passed\nif (!buttons ) {\n    console.log(`[WARNING] (${remote_id}): Missing .buttons property, defaulting to [on]`);\n    buttons = \"on\";\n}\n\nbuttons = utils.castToArray(buttons);\ncommands = utils.castToArray(commands);\n\n// Create remote\nconst remote = new utils.Remote(remote_id);\n\nbuttons.forEach(buttonId => {\n    const button = remote.addButton(buttonId);\n\n    // Get actions for this button\n    const button_actions = actions[`${buttonId}`] || {};\n    Object.keys(button_actions).forEach(commandId => {\n\n        const command = button.addCommand(commandId);\n        if (button_actions.hasOwnProperty(commandId)) {\n            command.action = button_actions[commandId];\n        }\n    });\n});\n\n// Add remote to config\nconfig.setRemote(remote.getId(), remote);\n// Return generated remote object\n//msg.payload = config.getObject();\nmsg.payload = remote.getObject();\nreturn [msg, utils.status(status)];\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":80,"wires":[[],[]]},{"id":"89a8b31d01b7a6d1","type":"function","z":"758ff705909ff236","name":"Map Device","func":"// Device Mapper (v1.0)\n// Generates device mapping\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.device_id    : id of the hue dimmer device\n// msg.payload.data         : device data\n// msg.payload.global_id    : parent object global context id\n\n//\n// -*- OUTPUTS -*-\n// msg.payload              : device data\n// msg.global_id            : CONTEXT_PATH.device_id\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nconst devices = new utils.DeviceManager(msg.payload.devices);\nconst device_id = msg.payload.device_id;\nconst device_data = msg.payload.data;\nconst remote_interface_context_path = msg.payload.global_id\n\nif (!device_id || !device_data) {\n    node.warn(`Missing device_id/data: [${device_id},${device_data}]`)\n    return null;\n}\n\nif (!remote_interface_context_path) {\n    node.warn(`Missing global_id (global context path): [${remote_interface_context_path}]`)\n    return null;\n}\n\nmsg.global_id = `${remote_interface_context_path}.${device_id}`;\nmsg.payload = device_data;\nreturn msg;\n/*** END ***/","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":80,"wires":[[]]},{"id":"78536c8ec5ab7842","type":"function","z":"a2c7f948590ba62d","name":"Map Array To Object By Key","func":"// Map Array To Object By Key (v1.1)\n// Maps an Array of objects to an object of objects by a given key\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.data         : Object array\n// msg.payload.key          : Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Mapped object\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\n\nvar entities = msg.payload.data;\nvar key = msg.payload.key;\n\n// Return error if entities not provided\nif (!utils.exists(entities)) {\n    return [null, utils.status(\"Entities not provided\")];\n}\n\n// Return error if key not provided\nif (!utils.exists(key)) {\n    return [null, utils.status(\"Key not provided\")];\n}\n\nconst entityDictionary = utils.mapArrayToDict(entities, key);\nmsg.payload = entityDictionary;\n\nreturn [msg, utils.status(entityDictionary)]; \n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":80,"wires":[[],[]]},{"id":"9b418cd91f2b0e34","type":"function","z":"ac18d08ecf3b428c","d":true,"name":"Determine Occupancy Mode 1.1b","func":"// Determine Occupancy Mode (v1.1)\n// Determine Occupancy Mode\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.occupancy    : Custom occupancy object global_id\n// msg.payload.presence     : Custom presence object global_id\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Current occupancy mode\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\n// Define occupancy modes\nconst OCCUPANCY_MODES = {\n    HOME: 'HOME',\n    AWAY: 'AWAY',\n    SLEEP: 'SLEEP',\n    GUEST: 'GUEST',\n    UNKNOWN: 'UNKNOWN',\n    ROGUE: 'PROTOCOL_1'\n};\n\nconst DATA_PATHS = {\n    USER_PRESENT: 'user_present',   // Boolean\n    OCCUPIED: 'occupied',           // Object\n    STATE: 'state',                 // Boolean\n    SLEEP_AREA: 'bedroom',          // String (Area ID)\n    OCCUPANCY_MODE: 'mode',         // String\n    AREAS: 'areas',                 // String (Area ID)\n    AREA_ID: 'area_id'              //\n};\n\n// Define rules for each occupancy mode\nconst occupancyRules = {\n    [OCCUPANCY_MODES.HOME]: (occupancy, presence) => {\n\n        // Return if guest mode enabled\n        if (isGuestModeActive(occupancy)) return false;\n\n        // Base logic to determine if the home is occupied based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] === true ||    // Occupied\n            presence[DATA_PATHS.USER_PRESENT] === true                      // User(s) present\n        );\n    },\n    [OCCUPANCY_MODES.AWAY]: (occupancy, presence) => {\n\n        // Return if guest mode enabled\n        if (isGuestModeActive(occupancy)) return false;\n\n        // Base logic to determine if the home is empty based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] === false &&   // Occupied\n            presence[DATA_PATHS.USER_PRESENT] === false                     //User(s) not present\n        );\n    },\n    [OCCUPANCY_MODES.SLEEP]: (occupancy, presence) => {\n\n        if (isGuestModeActive(occupancy)) return false;\n\n        // Base logic to determine if the home is in sleep mode based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.AREA_ID] == DATA_PATHS.SLEEP_AREA &&  // Last occupied area = sleep area\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] == false &&                    // Unoccupied (inactivity) \n            presence[DATA_PATHS.USER_PRESENT] == true                                       // User(s) present\n        );\n    },\n    [OCCUPANCY_MODES.GUEST]: (occupancy, presence) => {\n\n        // Base logic to determine if there are guests based on presence information\n        return isGuestModeActive(occupancy);\n    }\n};\n\n// Determine Occupancy Mode\nlet status;\n\n// Error if missing data\nif (!msg.payload.occupancy) {\n    status = `Missing msg.payload.occupancy property: ${msg.payload.occupancy}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\nif (!msg.payload.presence) {\n    status = `Missing msg.payload.presence property: ${msg.payload.presence}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n\n//const occupancy_info = global.get(msg.payload.occupancy);\n\n// Finish this, I want to wait for the global to become available (or to timeout) then proceed\nlet occupancy_info;\nlet presence_info;\n\n// Wait for occupancy_info\ngetGlobal(msg.payload.occupancy)\n    .then(data => {\n        // This code will execute when the promise is resolved\n        if (data) {\n            // Set occupancy_info\n            occupancy_info = global.get(msg.payload.occupancy);//data;\n            continueExecution();\n        }\n        else {\n            const status = `Missing msg.payload.occupancy property: ${msg.payload.occupancy} | ${occupancy_info}`;\n            node.status(utils.status(status, { fill: \"red\" }).payload);\n            node.send([null, utils.status(status, { fill: \"red\" })]);\n        }\n    })\n    .catch(error => {\n        // This code will execute when the promise is rejected\n        const status = `Error retrieving occupancy context: ${error.message}`;\n        node.warn(status);\n        node.send([null, utils.status(status, { fill: \"red\" })]);\n    });\n\n// Function to continue execution after occupancy_info is retrieved\nfunction continueExecution() {\n    // Wait for presence_info\n    getGlobal(msg.payload.presence)\n        .then(data => {\n            // This code will execute when the promise is resolved\n            if (data) {\n                // Set presence_info\n                presence_info = global.get(msg.payload.presence);//data;\n                proceedWithLogic();\n            }\n            else {\n                const status = `Missing msg.payload.presence property: ${msg.payload.presence} | ${presence_info}`;\n                node.status(utils.status(status, { fill: \"red\" }).payload);\n                node.send([null, utils.status(status, { fill: \"red\" })]);\n            }\n        })\n        .catch(error => {\n            // This code will execute when the promise is rejected\n            const status = `Error retrieving presence context: ${error.message}`;\n            node.warn(status);\n            node.send([null, utils.status(status, { fill: \"red\" })]);\n        });\n}\n\n// Function to proceed with the logic after both occupancy_info and presence_info are retrieved\nfunction proceedWithLogic() {\n    // Clean up Global IDs\n    delete msg.payload.occupancy;\n    delete msg.payload.presence;\n\n    // Error if missing data\n    if (!occupancy_info) {\n        const status = `Missing msg.payload.occupancy property: ${msg.payload.occupancy} | ${occupancy_info}`;\n        node.status(utils.status(status, { fill: \"red\" }).payload);\n        node.send([null, utils.status(status, { fill: \"red\" })]);\n        return;\n    }\n    if (!presence_info) {\n        const status = `Missing msg.payload.presence property: ${msg.payload.presence} | ${presence_info}`;\n        node.status(utils.status(status, { fill: \"red\" }).payload);\n        node.send([null, utils.status(status, { fill: \"red\" })]);\n        return;\n    }\n\n    // Occupancy mode calculation and status update\n    occupancy_info[DATA_PATHS.OCCUPANCY_MODE] = msg.payload.state || occupancy_info[DATA_PATHS.OCCUPANCY_MODE] || OCCUPANCY_MODES.UNKNOWN;\n    const occupancy_mode = determineOccupancyMode(occupancy_info, presence_info);\n    msg.payload = occupancy_mode;\n    return [msg, utils.status(occupancy_mode)];\n}\n\n/*** END ***/\n\n/*** HELPERS ***/\n\n// Function to determine the current occupancy mode\nfunction determineOccupancyMode(occupancy, presence) {\n    for (const mode in occupancyRules) {\n        if (occupancyRules[mode](occupancy, presence)) {\n            return mode;\n        }\n    }\n    // Default to UNKNOWN mode if no other mode matches\n    return OCCUPANCY_MODES.UNKNOWN;\n}\n\nfunction isGuestModeActive(occupancy) {\n    return occupancy[DATA_PATHS.OCCUPANCY_MODE] === OCCUPANCY_MODES.GUEST;\n}\n\n// Not sure if any changes needed here\nfunction getGlobal(global_id, timeout = 15000) {\n    return utils.waitForGlobalContext(global_id, timeout)\n        .then(data => {\n            if (data) return data;\n        })\n        .catch(error => {\n            // Handle any errors thrown by waitForGlobalContext\n            const status = `[ERROR]: ${error.message}`;\n            node.warn(status);\n            //node.status({ fill: \"red\", shape: \"dot\", text: status });\n            node.send([null, null, utils.status(status, { fill: \"red\" })]);\n            return null;\n        });\n}","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\nnode.status({ fill: \"yellow\", shape: \"dot\", text: \"Starting\" });","finalize":"","libs":[],"x":220,"y":220,"wires":[[],[]]},{"id":"82de18d878475171","type":"function","z":"ac18d08ecf3b428c","name":"Occupancy Mode Updater","func":"// Occupancy Mode Updater\n// Determine Occupancy Mode\n// ******************************************************************\n// -*- INPUTS -*-\n// env.ENTITY_ID            : Occupancy Mode Entity ID\n// msg.payload.mode         : Current Occupancy Mode\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Occupancy Mode\n// msg.entity_id            : Occupancy Mode Entity ID\n// ******************************************************************\n\n/*** START ***/\nconst repository = context.global[env.get(\"MODULE_ID\")];\nconst utils = repository.util.common;\nconst OccupancyService = repository.domain.services.OccupancyService;\nconst PresenceService = repository.domain.services.PresenceService;\nconst OCCUPCANY_MODE_ENTITY_ID = msg.entity_id = env.get(\"ENTITY_ID\") || \"input_select.occupancy_mode\";\n\nconst ENTRY_AREA_HELPER = \"input_text.occupancy_entry_area_state\";\nconst EXIT_AREA_HELPER = \"input_text.occupancy_exit_area\";\nconst INACTIVITY_AREA_HELPER = \"input_text.occupancy_inactivity_area\";\n\n// Define occupancy modes\nconst OCCUPANCY_MODES = {\n    OCCUPIED: 'OCCUPIED',\n    UNOCCUPIED: 'UNOCCUPIED',\n    INACTIVITY: 'INACTIVITY',\n    BYPASS: 'BYPASS',\n    UNKNOWN: 'UNKNOWN',\n    ROGUE: 'PROTOCOL_1'\n};\n\nconst MATCH = {\n    ENTRY_EXIT_AREA: utils.cleanString(global.get(`homeassistant.homeAssistant.states['${ENTRY_AREA_HELPER}']`).state),     // String (Area ID)\n    EXIT_AREA: utils.cleanString(global.get(`homeassistant.homeAssistant.states['${EXIT_AREA_HELPER}']`).state),            // String (Area ID)\n    INACTIVE_AREA: utils.cleanString(global.get(`homeassistant.homeAssistant.states['${INACTIVITY_AREA_HELPER}']`).state)   // String (Area ID)\n};\n\n// Define rules for each occupancy mode\nconst occupancyRules = {\n    [OCCUPANCY_MODES.OCCUPIED]: (current_occupancy_mode) => {\n        // Return if BYPASS mode enabled\n        if (bypassModeConditionsMet(current_occupancy_mode)) return false;\n\n        // Base logic to determine if the system is occupied based on occupancy and presence\n        return occupiedModeConditionsMet();\n    },\n    [OCCUPANCY_MODES.UNOCCUPIED]: (current_occupancy_mode) => {\n\n        // Return if BYPASS mode enabled\n        if (bypassModeConditionsMet(current_occupancy_mode)) return false;\n\n        // Base logic to determine if the system is unoccupied based on occupancy and presence\n        // todo - and last occupied area is entry_exit area? To detect guests/intruders\n        return unoccupiedModeConditionsMet();\n    },\n    [OCCUPANCY_MODES.INACTIVITY]: (current_occupancy_mode) => {\n\n        // Return if BYPASS mode enabled\n        if (bypassModeConditionsMet(current_occupancy_mode)) return false;\n\n        // Base logic to determine if the system is in inactivity mode based on occupancy and presence\n        return inactivityModeConditionsMet();\n    },\n    [OCCUPANCY_MODES.BYPASS]: (current_occupancy_mode) => {\n\n        // Base logic to determine if bypass mode is enabled based on occupancy information\n        return bypassModeConditionsMet(current_occupancy_mode);\n    }\n};\n\n// Determine Occupancy Mode\nlet status;\n\n// Error if missing service data\nif (!OccupancyService) {\n    status = `Missing OccupancyService object: ${OccupancyService}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\nif (!PresenceService) {\n    status = `Missing PresenceService object: ${PresenceService}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n\nlet current_occupancy_mode = utils.exists(msg.payload) ? msg.payload.mode : null;\ncurrent_occupancy_mode = current_occupancy_mode ? current_occupancy_mode : global.get(`homeassistant.homeAssistant.states['${OCCUPCANY_MODE_ENTITY_ID}']`);\nif (typeof current_occupancy_mode === \"object\" && utils.exists(current_occupancy_mode.state)) current_occupancy_mode = current_occupancy_mode.state;\n\nOccupancyService.setMode(current_occupancy_mode || OccupancyService.getMode() || OCCUPANCY_MODES.UNKNOWN);\nconst occupancy_mode = determineOccupancyMode(current_occupancy_mode);\nnode.status(utils.status(occupancy_mode).payload);\n\nmsg.payload = occupancy_mode;\nreturn [msg, utils.status(occupancy_mode)];\n\n/*** END ***/\n\n/*** HELPERS ***/\n\n// Function to determine the current occupancy mode\nfunction determineOccupancyMode(current_occupancy_mode) {\n    for (const mode in occupancyRules) {\n        if (occupancyRules[mode](current_occupancy_mode)) return mode;\n    }\n    // Default to UNKNOWN mode if no other mode matches\n    return OCCUPANCY_MODES.UNKNOWN;\n}\n\nfunction occupiedModeConditionsMet() {\n    return (\n        OccupancyService.isOccupied() === true ||                           // Occupied or... \n        (\n            PresenceService.isPresent() === true &&                         // User(s) present and\n            OccupancyService.getOccupancy().area_id !== MATCH.INACTIVE_AREA    // Last occupied area != sleep area\n        )\n    );\n}\n\nfunction unoccupiedModeConditionsMet() {\n    return (\n        !OccupancyService.isOccupied() && !PresenceService.isPresent()      // Unoccupied and no User(s) present\n    );\n}\n\nfunction bypassModeConditionsMet(current_occupancy_mode) {\n    // Bypass mode manually enabled\n    return (\n        current_occupancy_mode === OCCUPANCY_MODES.BYPASS ||                 // Bypass mode manually triggered\n        OccupancyService.getMode() === OCCUPANCY_MODES.BYPASS                // or already active\n    );\n}\n\nfunction inactivityModeConditionsMet() {\n    return (\n        OccupancyService.getOccupancy().area_id === MATCH.INACTIVE_AREA &&     // Last occupied area = inactivity area\n        !OccupancyService.isOccupied() &&                                   // Unoccupied (inactivity) \n        PresenceService.isPresent()                                         // User(s) present                            \n    );\n}","outputs":2,"timeout":"","noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\nnode.status({ fill: \"yellow\", shape: \"dot\", text: \"Starting\" });","finalize":"","libs":[],"x":190,"y":80,"wires":[[],[]]},{"id":"811624ec95867b61","type":"function","z":"ac18d08ecf3b428c","d":true,"name":"Determine Occupancy Mode 1.0","func":"// Determine Occupancy Mode (v1.1)\n// Determine Occupancy Mode\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.occupancy    : Custom occupancy object global_id\n// msg.payload.presence     : Custom presence object global_id\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Current occupancy mode\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\n// Define occupancy modes\nconst OCCUPANCY_MODES = {\n    HOME: 'HOME',\n    AWAY: 'AWAY',\n    SLEEP: 'SLEEP',\n    GUEST: 'GUEST',\n    UNKNOWN: 'UNKNOWN',\n    ROGUE:'PROTOCOL_1'\n};\n\nconst DATA_PATHS = {\n    USER_PRESENT: 'user_present',   // Boolean\n    OCCUPIED: 'occupied',           // Object\n    STATE: 'state',                 // Boolean\n    SLEEP_AREA: 'bedroom',          // String (Area ID)\n    OCCUPANCY_MODE: 'mode',         // String\n    AREAS: 'areas',                 // String (Area ID)\n    AREA_ID: 'area_id'              //\n};\n\n// Define rules for each occupancy mode\nconst occupancyRules = {\n    [OCCUPANCY_MODES.HOME]: (occupancy, presence) => {\n        \n        // Return if guest mode enabled\n        if (isGuestModeActive(occupancy)) return false;\n\n        // Base logic to determine if the home is occupied based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] === true ||    // Occupied\n            presence[DATA_PATHS.USER_PRESENT] === true                      // User(s) present\n            );\n    },\n    [OCCUPANCY_MODES.AWAY]: (occupancy, presence) => {\n        \n        // Return if guest mode enabled\n        if (isGuestModeActive(occupancy)) return false;\n\n        // Base logic to determine if the home is empty based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] === false &&   // Occupied\n            presence[DATA_PATHS.USER_PRESENT] === false                     //User(s) not present\n            );\n    },\n    [OCCUPANCY_MODES.SLEEP]: (occupancy, presence) => {\n\n        if (isGuestModeActive(occupancy)) return false;\n        \n        // Base logic to determine if the home is in sleep mode based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.AREA_ID] == DATA_PATHS.SLEEP_AREA &&  // Last occupied area = sleep area\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] == false &&                    // Unoccupied (inactivity) \n            presence[DATA_PATHS.USER_PRESENT] == true                                       // User(s) present\n        );\n    },\n    [OCCUPANCY_MODES.GUEST]: (occupancy, presence) => {\n\n        // Base logic to determine if there are guests based on presence information\n        return isGuestModeActive(occupancy);\n    }\n};\n\n// Determine Occupancy Mode\nlet status;\n\n// Error if missing data\nif (!msg.payload.occupancy) {\n    status = `Missing msg.payload.occupancy property: ${msg.payload.occupancy}`;\n    node.status(utils.status(status, {fill: \"red\"}).payload);\n    return [null, utils.status(status, {fill: \"red\"})];\n}\nif (!msg.payload.presence) {\n    status = `Missing msg.payload.presence property: ${msg.payload.presence}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n\nconst occupancy_info = global.get(msg.payload.occupancy);\nconst presence_info = global.get(msg.payload.presence);\n\n// Clean up Global ID's\ndelete msg.payload.occupancy;\ndelete msg.payload.presence;\n\n// Error if missing data\nif (!occupancy_info) { \n    status = `Missing msg.payload.occupancy property: ${msg.payload.occupancy} | ${occupancy_info}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\nif (!presence_info) {\n    status = `Missing msg.payload.presence property: ${msg.payload.presence} | ${presence_info}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n\n/*if (!msg.payload.state) {\n    status.fill = \"red\";\n    status.text = `Missing msg.payload.state property: ${msg.payload.state} | ${msg.payload.state}`;\n    node.status(status);\n    return [null, utils.status(status)];\n}*/\n\noccupancy_info[DATA_PATHS.OCCUPANCY_MODE] = msg.payload.state || occupancy_info[DATA_PATHS.OCCUPANCY_MODE] || OCCUPANCY_MODES.UNKNOWN;\n\nconst occupancy_mode = determineOccupancyMode(occupancy_info, presence_info);\nnode.status(utils.status(occupancy_mode).payload);\n\nmsg.payload = occupancy_mode;\nreturn [msg, utils.status(occupancy_mode)];\n\n/*** END ***/\n\n/*** HELPERS ***/\n\n// Function to determine the current occupancy mode\nfunction determineOccupancyMode(occupancy, presence) {\n    for (const mode in occupancyRules) {\n        if (occupancyRules[mode](occupancy, presence)) {\n            return mode;\n        }\n    }\n    // Default to UNKNOWN mode if no other mode matches\n    return OCCUPANCY_MODES.UNKNOWN;\n}\n\nfunction isGuestModeActive(occupancy) {\n    return occupancy[DATA_PATHS.OCCUPANCY_MODE] === OCCUPANCY_MODES.GUEST;\n}\n\n/*getDelay(msg.delay, msg.timeout)\n    .then(delay => {\n        // This code will execute when the promise is resolved\n        node.warn(delay);\n        if (delay) {\n            // Set msg.delay\n            msg.delay = delay;\n            // Return details in msg for further processing if needed\n            node.send([msg, null, utils.status(`${msg.delay} milliseconds`)]);\n        }\n        else {\n            node.send([null, null, utils.status(`Missing msg.delay | env.POLL_RATE: ${msg.delay} | ${pollRate}`, { fill: \"orange\" })]);\n        }\n    })\n    .catch(error => {\n        // This code will execute when the promise is rejected\n        const status = `Error retrieving delay context: ${error.message}`;\n        node.warn(status);\n        node.send([null, null, utils.status(status, { fill: \"red\" })]);\n    });\n\nnode.send([null, msg, utils.status(`Waiting for ${msg.delay}...`, { fill: \"yellow\" })]);\n\nfunction getDelay(global_id, timeout) {\n    return utils.waitForGlobalContext(global_id, timeout)\n        .then(delay => {\n            if (delay) return delay;\n        })\n        .catch(error => {\n            // Handle any errors thrown by waitForGlobalContext\n            const status = `[ERROR]: ${error.message}`;\n            node.warn(status);\n            //node.status({ fill: \"red\", shape: \"dot\", text: status });\n            node.send([null, null, utils.status(status, { fill: \"red\" })]);\n            return null;\n        });\n}*/","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\nnode.status({ fill: \"yellow\", shape: \"dot\", text: \"Starting\" });","finalize":"","libs":[],"x":210,"y":160,"wires":[[],[]]},{"id":"3bea60dad40c54fd","type":"function","z":"ac18d08ecf3b428c","name":"Determine Occupancy Mode 2","func":"// Determine Occupancy Mode (v2)\n// Determine Occupancy Mode\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.occupancy    : Custom occupancy object global_id\n// msg.payload.presence     : Custom presence object global_id\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Current occupancy mode\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\n// Define occupancy modes\nconst OCCUPANCY_MODES = {\n    HOME: 'HOME',\n    AWAY: 'AWAY',\n    SLEEP: 'SLEEP',\n    GUEST: 'GUEST',\n    UNKNOWN: 'UNKNOWN',\n    ROGUE:'PROTOCOL_1'\n};\n\nconst DATA_PATHS = {\n    USER_PRESENT: 'user_present',   // Boolean\n    OCCUPIED: 'occupied',           // Object\n    STATE: 'state',                 // Boolean\n    SLEEP_AREA: 'bedroom',          // String (Area ID)\n    OCCUPANCY_MODE: 'mode',         // String\n    AREAS: 'areas',                 // String (Area ID)\n    AREA_ID: 'area_id'              //\n};\n\n// Define rules for each occupancy mode\nconst occupancyRules = {\n    [OCCUPANCY_MODES.HOME]: (occupancy, presence) => {\n        //node.warn(`isSleepModeActive: ${isSleepModeActive(occupancy, presence)}`);\n        // Return if guest/sleep mode enabled\n        if (isGuestModeActive(occupancy) || isSleepModeActive(occupancy, presence)) return false;\n\n        // Base logic to determine if the home is occupied based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] === true ||    // Occupied\n            presence[DATA_PATHS.USER_PRESENT] === true                      // User(s) present\n            );\n    },\n    [OCCUPANCY_MODES.AWAY]: (occupancy, presence) => {\n        \n        // Return if guest/sleep mode enabled\n        if (isGuestModeActive(occupancy) || isSleepModeActive(occupancy, presence)) return false;\n\n        // Base logic to determine if the home is empty based on occupancy and presence\n        return (\n            occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] === false &&   // Occupied\n            presence[DATA_PATHS.USER_PRESENT] === false                     //User(s) not present\n            );\n    },\n    [OCCUPANCY_MODES.SLEEP]: (occupancy, presence) => {\n\n        if (isGuestModeActive(occupancy)) return false;\n        \n        // Base logic to determine if the home is in sleep mode based on occupancy and presence\n        return isSleepModeActive(occupancy, presence);\n            },\n    [OCCUPANCY_MODES.GUEST]: (occupancy, presence) => {\n\n        // Base logic to determine if there are guests based on occupancy information\n        return isGuestModeActive(occupancy);\n    }\n};\n\n// Determine Occupancy Mode\nlet status;\n\n// Error if missing data\nif (!msg.payload.occupancy) {\n    status = `Missing msg.payload.occupancy property: ${msg.payload.occupancy}`;\n    node.status(utils.status(status, {fill: \"red\"}).payload);\n    return [null, utils.status(status, {fill: \"red\"})];\n}\nif (!msg.payload.presence) {\n    status = `Missing msg.payload.presence property: ${msg.payload.presence}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n//node.warn(msg.payload.occupancy);\nconst occupancy_info = global.get(msg.payload.occupancy);\nconst presence_info = global.get(msg.payload.presence);\n//node.warn(global.get(\"system.occupancy\"));\n//node.warn(occupancy_info);\n// Clean up Global ID's\ndelete msg.payload.occupancy;\ndelete msg.payload.presence;\n//node.warn(occupancy_info);\n// Error if missing data\nif (!occupancy_info) { \n    status = `Missing occupancy object: ${msg.payload.occupancy} | ${occupancy_info}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\nif (!presence_info) {\n    status = `Missing presence object: ${msg.payload.presence} | ${presence_info}`;\n    node.status(utils.status(status, { fill: \"red\" }).payload);\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n\n/*if (!msg.payload.state) {\n    status.fill = \"red\";\n    status.text = `Missing msg.payload.state property: ${msg.payload.state} | ${msg.payload.state}`;\n    node.status(status);\n    return [null, utils.status(status)];\n}*/\n\noccupancy_info[DATA_PATHS.OCCUPANCY_MODE] = msg.payload.state || occupancy_info[DATA_PATHS.OCCUPANCY_MODE] || OCCUPANCY_MODES.UNKNOWN;\n\nconst occupancy_mode = determineOccupancyMode(occupancy_info, presence_info);\nnode.status(utils.status(occupancy_mode).payload);\n\nmsg.payload = occupancy_mode;\nreturn [msg, utils.status(occupancy_mode)];\n\n/*** END ***/\n\n/*** HELPERS ***/\n\n// Function to determine the current occupancy mode\nfunction determineOccupancyMode(occupancy, presence) {\n    for (const mode in occupancyRules) {\n        if (occupancyRules[mode](occupancy, presence)) {\n            return mode;\n        }\n    }\n    // Default to UNKNOWN mode if no other mode matches\n    return OCCUPANCY_MODES.UNKNOWN;\n}\n\nfunction isGuestModeActive(occupancy) {\n    return occupancy[DATA_PATHS.OCCUPANCY_MODE] === OCCUPANCY_MODES.GUEST;\n}\n\nfunction isSleepModeActive(occupancy, presence) {\n    //node.warn(`sleep area = las occupied area?: ${occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.AREA_ID] == DATA_PATHS.SLEEP_AREA}`);\n    //node.warn(`occupied = false?: ${occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] == false}`);\n    //node.warn(`user present = true?: ${presence[DATA_PATHS.USER_PRESENT] == true}`);\n    \n    return (\n        occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.AREA_ID] == DATA_PATHS.SLEEP_AREA &&  // Last occupied area = sleep area\n        occupancy[DATA_PATHS.OCCUPIED][DATA_PATHS.STATE] == false &&                    // Unoccupied (inactivity) \n        presence[DATA_PATHS.USER_PRESENT] == true                                       // User(s) present\n    );\n}\n\n/*getDelay(msg.delay, msg.timeout)\n    .then(delay => {\n        // This code will execute when the promise is resolved\n        node.warn(delay);\n        if (delay) {\n            // Set msg.delay\n            msg.delay = delay;\n            // Return details in msg for further processing if needed\n            node.send([msg, null, utils.status(`${msg.delay} milliseconds`)]);\n        }\n        else {\n            node.send([null, null, utils.status(`Missing msg.delay | env.POLL_RATE: ${msg.delay} | ${pollRate}`, { fill: \"orange\" })]);\n        }\n    })\n    .catch(error => {\n        // This code will execute when the promise is rejected\n        const status = `Error retrieving delay context: ${error.message}`;\n        node.warn(status);\n        node.send([null, null, utils.status(status, { fill: \"red\" })]);\n    });\n\nnode.send([null, msg, utils.status(`Waiting for ${msg.delay}...`, { fill: \"yellow\" })]);\n\nfunction getDelay(global_id, timeout) {\n    return utils.waitForGlobalContext(global_id, timeout)\n        .then(delay => {\n            if (delay) return delay;\n        })\n        .catch(error => {\n            // Handle any errors thrown by waitForGlobalContext\n            const status = `[ERROR]: ${error.message}`;\n            node.warn(status);\n            //node.status({ fill: \"red\", shape: \"dot\", text: status });\n            node.send([null, null, utils.status(status, { fill: \"red\" })]);\n            return null;\n        });\n}*/","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\nnode.status({ fill: \"yellow\", shape: \"dot\", text: \"Starting\" });","finalize":"","libs":[],"x":210,"y":280,"wires":[[],[]]},{"id":"e0397309e17beb08","type":"function","z":"352858f7d4f8c965","name":"Event Poller","func":"// Event Poller (v1.1)\n// Event Poller\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.reset                : flag to stop polling\n// msg.delay                : Global Context identifier\n// msg.timeout [OPTIONAL]   : Poller timeout value in ms\n//\n// -*- OUTPUTS -*-\n// msg.payload              : existing message payload\n// ******************************************************************\n\n/*** START ***/\nvar utils = global.get(\"utils\");\nnode.warn(utils);\n\nif (utils.exists(msg.reset)) {\n    return [msg, null, utils.status(\"RESET\")];\n}\n\nvar pollRate = env.get(\"POLL_RATE\");\nlet status = `${msg.delay} milliseconds`;\n\nif (utils.exists(pollRate)) {\n    node.warn(`POLL_RATE: ${msg.delay}`);\n    msg.delay = pollRate;\n    return ([msg, null, utils.status({ fill: \"green\", shape: \"dot\", text: status })]);\n}\n\nif (msg.timeout == 0) msg.timeout = null;\n\n// Return if no global_id / value passed\n\nif (!msg.delay) return ([null, null, utils.status({ fill: \"red\", shape: \"dot\", text: `Missing msg.delay ${msg.delay}`})]);\n\nconst delay = global.get(msg.delay);\n\nif (delay) {\n    msg.delay = delay;\n    return ([msg, null, utils.status({ fill: \"green\", shape: \"dot\", text: status })]);\n} \n\ngetDelay(msg.delay, msg.timeout)\n    .then(delay => {\n        // This code will execute when the promise is resolved\n        node.warn(delay);\n        if (delay) {\n            // Set msg.delay\n            msg.delay = delay;\n            // Return details in msg for further processing if needed\n            const status = `${msg.delay} milliseconds`;\n            node.send([msg, null, utils.status({ fill: \"green\", shape: \"dot\", text: status })]);\n        }\n        else {\n            const status = `Missing msg.delay | env.POLL_RATE: ${msg.delay} | ${pollRate}`;\n            node.send([null, null, utils.status({ fill: \"orange\", shape: \"dot\", text: status })]);\n        }\n    })\n    .catch(error => {\n        // This code will execute when the promise is rejected\n        const status = `Error retrieving delay context: ${error.message}`;\n        node.warn(status);\n        node.send([null, null, utils.status({ fill: \"red\", shape: \"dot\", text: status })]);\n    });\n\nstatus = `Waiting for ${msg.delay}...`;\nnode.send([null, msg, utils.status({ fill: \"yellow\", shape: \"dot\", text: status })]);\n\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\nfunction getDelay(global_id, timeout){\n    return utils.waitForGlobalContext(global_id, timeout)\n        .then(delay => {\n            if (delay) return delay;\n        })\n        .catch(error => {\n            // Handle any errors thrown by waitForGlobalContext\n            const status = `[ERROR]: ${error.message}`;\n            node.warn(status);\n            //node.status({ fill: \"red\", shape: \"dot\", text: status });\n            node.send([null, null, utils.status({ fill: \"red\", shape: \"dot\", text: status })]);\n            return null;\n        });\n}","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":160,"wires":[["82d85f8b47e9292f"],[],[]]},{"id":"720851d88f6d9fd0","type":"inject","z":"352858f7d4f8c965","d":true,"name":"MESSAGE_ON_START","props":[],"repeat":"","crontab":"","once":true,"onceDelay":"1","topic":"","x":150,"y":220,"wires":[["e0397309e17beb08"]]},{"id":"82d85f8b47e9292f","type":"trigger","z":"352858f7d4f8c965","name":"resend every msg.delay || 60s","op1":"","op2":"0","op1type":"pay","op2type":"str","duration":"-60","extend":true,"overrideDelay":true,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":610,"y":100,"wires":[[]]},{"id":"a440ba7d0d85e617","type":"change","z":"d4d95936d311f239","name":"Set Timestamp / Path","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"date"},{"t":"set","p":"path","pt":"msg","to":"PATH","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":80,"wires":[["ac9387e713ce0715"]]},{"id":"a9b88fac6ee81cda","type":"watch","z":"d4d95936d311f239","name":"On Change [flows]","files":"/config/flows.json","recursive":"","x":110,"y":120,"wires":[["a440ba7d0d85e617"]]},{"id":"8a3ff4c90a5343b1","type":"inject","z":"d4d95936d311f239","name":"On Full Deploy","props":[],"repeat":"","crontab":"","once":true,"onceDelay":"1","topic":"","x":120,"y":40,"wires":[["a440ba7d0d85e617"]]},{"id":"ac9387e713ce0715","type":"function","z":"d4d95936d311f239","name":"Display Readable Date","func":"// Display Readable Date\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : deploy timestamp\n//\n// -*- OUTPUTS -*-\n// msg.payload              : datetime string\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\n\nconst last_deployed = new Date(msg.payload);\nmsg.payload = last_deployed.toLocaleString();\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":120,"wires":[[]]},{"id":"bcb4a31424ba5497","type":"subflow:bd6afb792041214f","z":"2e1553480c579f63","d":true,"name":"Load Entity Registry","env":[{"name":"PATH","value":"/config/.storage/core.entity_registry","type":"str"}],"x":500,"y":40,"wires":[["815102ad2b31671f"]]},{"id":"815102ad2b31671f","type":"change","z":"2e1553480c579f63","d":true,"name":"Set Key/Value [entities]","rules":[{"t":"set","p":"payload.key","pt":"msg","to":"entity_id","tot":"str"},{"t":"set","p":"payload.data","pt":"msg","to":"payload.entities","tot":"msg"},{"t":"set","p":"global_id","pt":"msg","to":"$env(\"GLOBAL_ID\")  & \".entities\"","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":40,"wires":[["217f75e7bca461a3"]]},{"id":"217f75e7bca461a3","type":"subflow:a2c7f948590ba62d","z":"2e1553480c579f63","d":true,"name":"","x":980,"y":40,"wires":[["36d5902f29e6e9ea"]]},{"id":"36d5902f29e6e9ea","type":"subflow:d45c7673c797b311","z":"2e1553480c579f63","d":true,"name":"","x":1210,"y":40,"wires":[["c4784f18be989d10"]]},{"id":"5ea2ef5950bcd15f","type":"subflow:bd6afb792041214f","z":"2e1553480c579f63","d":true,"name":"Load Area Registry","env":[{"name":"PATH","value":"/config/.storage/core.area_registry","type":"str"}],"x":490,"y":100,"wires":[["55e22fc14282a3e8"]]},{"id":"55e22fc14282a3e8","type":"change","z":"2e1553480c579f63","d":true,"name":"Set Key/Value [areas]","rules":[{"t":"set","p":"payload.key","pt":"msg","to":"id","tot":"str"},{"t":"set","p":"payload.data","pt":"msg","to":"payload.areas","tot":"msg"},{"t":"set","p":"global_id","pt":"msg","to":"$env(\"GLOBAL_ID\") & \".areas\"","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":720,"y":100,"wires":[["f8137a9c5ea57731"]]},{"id":"f8137a9c5ea57731","type":"subflow:a2c7f948590ba62d","z":"2e1553480c579f63","d":true,"name":"","x":980,"y":100,"wires":[["94b3eebd3b0a1efb"]]},{"id":"94b3eebd3b0a1efb","type":"subflow:d45c7673c797b311","z":"2e1553480c579f63","d":true,"name":"","x":1210,"y":100,"wires":[["c4784f18be989d10"]]},{"id":"eb00dc26780a4a14","type":"subflow:bd6afb792041214f","z":"2e1553480c579f63","d":true,"name":"Load Device Registry","env":[{"name":"PATH","value":"/config/.storage/core.device_registry","type":"str"}],"x":500,"y":160,"wires":[["8b044605b6354c5e"]]},{"id":"8b044605b6354c5e","type":"change","z":"2e1553480c579f63","d":true,"name":"Set Key/Value [devices]","rules":[{"t":"set","p":"payload.key","pt":"msg","to":"id","tot":"str"},{"t":"set","p":"payload.data","pt":"msg","to":"payload.devices","tot":"msg"},{"t":"set","p":"global_id","pt":"msg","to":"$env(\"GLOBAL_ID\")  & \".devices\"","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":160,"wires":[["fb65ea3d70e285e5"]]},{"id":"fb65ea3d70e285e5","type":"subflow:a2c7f948590ba62d","z":"2e1553480c579f63","d":true,"name":"","x":980,"y":160,"wires":[["9d3d5380a92cb219"]]},{"id":"9d3d5380a92cb219","type":"subflow:d45c7673c797b311","z":"2e1553480c579f63","d":true,"name":"","x":1210,"y":160,"wires":[["c4784f18be989d10"]]},{"id":"305a08ebae857d4a","type":"subflow:d4d95936d311f239","z":"2e1553480c579f63","d":true,"name":"","env":[{"name":"PATH","value":"/config/node-red/flows.json","type":"str"}],"x":230,"y":100,"wires":[["bcb4a31424ba5497","5ea2ef5950bcd15f","eb00dc26780a4a14","e45e996a9a1bf798"]]},{"id":"c4784f18be989d10","type":"join","z":"2e1553480c579f63","d":true,"name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1450,"y":100,"wires":[["f2fe2c6b5b0374d1"]]},{"id":"e45e996a9a1bf798","type":"delay","z":"2e1553480c579f63","d":true,"name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":440,"y":220,"wires":[["8c80d84bc4397cfb"]]},{"id":"f2fe2c6b5b0374d1","type":"change","z":"2e1553480c579f63","d":true,"name":"Success","rules":[{"t":"set","p":"reset","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"{\"payload\":{\"text\":\"Registry Objects Loaded\",\"fill\":\"green\"}}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":440,"y":300,"wires":[["e45e996a9a1bf798","24873dee86d7e1f7"]]},{"id":"8c80d84bc4397cfb","type":"change","z":"2e1553480c579f63","d":true,"name":"Error","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"payload\":{\"text\":\"Error Loading Registry Objects\",\"fill\":\"red\"}}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":810,"y":220,"wires":[["f85ab3b9f532fa3b"]]},{"id":"8f33ea59b682ec9a","type":"api-render-template","z":"2e1553480c579f63","name":"Load Entity Registry","server":"3edfacf2.b3d2c4","version":0,"template":"entity_id,domain,object_id,name,area_id,area_name,icon,device_class,unit_of_measurement,labels\n{%- for state in states %}\n{{ state.entity_id }},{{ state.domain }},{{ state.object_id }},\"{{ state.name }}\",\"{{ area_id(state.entity_id) }}\",\"{{ area_name(state.entity_id) }}\",\"{{ state_attr(state.entity_id,'icon') }}\",\"{{ state_attr(state.entity_id,'device_class') }}\",\"{{ state_attr(state.entity_id,'unit_of_measurement') }}\",\"{{ labels(state.entity_id) }}\"\n{%- endfor -%}\n{# The minus sign - after the first curly brace percent sign {% will remove preceding whitespace (in this case, eliminate a blank line between the headers and the data) #}","resultsLocation":"payload","resultsLocationType":"msg","templateLocation":"","templateLocationType":"none","x":460,"y":500,"wires":[["2bddda0ee4eb4589"]]},{"id":"99b436b8fbb33c3a","type":"csv","z":"2e1553480c579f63","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"mult","ret":"\\n","temp":"Load Entities","skip":"0","strings":true,"include_empty_strings":true,"include_null_values":true,"x":630,"y":580,"wires":[["e1407f5e437e8bdb"]]},{"id":"174a98c9608b57a7","type":"api-render-template","z":"2e1553480c579f63","name":"Load Area Registry","server":"3edfacf2.b3d2c4","version":0,"template":"name,id,floor_id,labels\n{%- for area in areas() %}\n\"{{ area_name(area) }}\",\"{{ area }}\",\"{{ floor_id(area) }}\",\"{{ labels(area) }}\"\n{%- endfor -%}\n{# The minus sign - after the first curly brace percent sign {% will remove preceding whitespace (in this case, eliminate a blank line between the headers and the data) #}","resultsLocation":"payload","resultsLocationType":"msg","templateLocation":"","templateLocationType":"none","x":450,"y":580,"wires":[["99b436b8fbb33c3a"]]},{"id":"2bddda0ee4eb4589","type":"csv","z":"2e1553480c579f63","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"mult","ret":"\\n","temp":"Load Entities","skip":"0","strings":true,"include_empty_strings":true,"include_null_values":true,"x":630,"y":500,"wires":[["967b4a4077b1a1c7"]]},{"id":"967b4a4077b1a1c7","type":"change","z":"2e1553480c579f63","name":"","rules":[{"t":"set","p":"core.entity_registry","pt":"global","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":820,"y":500,"wires":[["cf6fe308ba288438"]]},{"id":"e1407f5e437e8bdb","type":"change","z":"2e1553480c579f63","name":"","rules":[{"t":"set","p":"core.area_registry","pt":"global","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":820,"y":580,"wires":[["c91c7759540f510a"]]},{"id":"cf6fe308ba288438","type":"file","z":"2e1553480c579f63","name":"","filename":"/config/.storage/core.entity_registry","filenameType":"str","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"none","x":1140,"y":500,"wires":[["38974f690d80b041"]]},{"id":"c91c7759540f510a","type":"file","z":"2e1553480c579f63","name":"","filename":"/config/.storage/core.area_registry","filenameType":"str","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"none","x":1140,"y":580,"wires":[["38974f690d80b041"]]},{"id":"38974f690d80b041","type":"join","z":"2e1553480c579f63","name":"Load Core Registry","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1420,"y":540,"wires":[["c5b584389b5e263c","f9a2ace897798fb9"]]},{"id":"f9a2ace897798fb9","type":"change","z":"2e1553480c579f63","name":"","rules":[{"t":"set","p":"reset","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":1640,"y":580,"wires":[["3c22eb669069296f"]]},{"id":"3996fb557dbf8c0e","type":"subflow:a7ed881353992217","z":"2e1553480c579f63","name":"","x":190,"y":580,"wires":[["e96b993ff89bfa0d"],["00d14ca14ed78d84"]]},{"id":"c5b584389b5e263c","type":"change","z":"2e1553480c579f63","name":"Emit: Loaded","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"fill\":\"green\",\"text\":\"Registries Loaded\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":1630,"y":500,"wires":[["e02257877bd713ca"]]},{"id":"33b9c0273f6c8e6d","type":"delay","z":"2e1553480c579f63","name":"","pauseType":"delay","timeout":"10","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":540,"y":700,"wires":[["edd20d835e81cc30"]]},{"id":"edd20d835e81cc30","type":"change","z":"2e1553480c579f63","name":"Emit: Not Loaded","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"fill\":\"red\",\"text\":\"Error Loading Registries\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":710,"y":700,"wires":[["ce234410e56d72cf"]]},{"id":"9798a6f4df86f7d9","type":"change","z":"2e1553480c579f63","name":"Delete delay properties","rules":[{"t":"delete","p":"reset","pt":"msg"},{"t":"delete","p":"flush","pt":"msg"},{"t":"delete","p":"rate","pt":"msg"},{"t":"delete","p":"delay","pt":"msg"},{"t":"delete","p":"toFront","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":210,"y":700,"wires":[["33b9c0273f6c8e6d"]]},{"id":"2622bfe4c9b4e1d6","type":"json","z":"2e1553480c579f63","name":"","property":"payload","action":"","pretty":false,"x":630,"y":540,"wires":[["8324ba06074d1161"]]},{"id":"ae318a02085126db","type":"api-render-template","z":"2e1553480c579f63","name":"Load Domain Registry","server":"3edfacf2.b3d2c4","version":0,"template":"{{ states | map(attribute='domain') | unique | list | tojson }}","resultsLocation":"payload","resultsLocationType":"msg","templateLocation":"","templateLocationType":"none","x":460,"y":540,"wires":[["2622bfe4c9b4e1d6"]]},{"id":"8324ba06074d1161","type":"change","z":"2e1553480c579f63","name":"","rules":[{"t":"set","p":"core.domain_registry","pt":"global","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":830,"y":540,"wires":[["374b2020bc2f8fb9"]]},{"id":"374b2020bc2f8fb9","type":"file","z":"2e1553480c579f63","name":"","filename":"/config/.storage/core.domain_registry","filenameType":"str","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"none","x":1130,"y":540,"wires":[["38974f690d80b041"]]},{"id":"00d14ca14ed78d84","type":"link out","z":"2e1553480c579f63","name":"Status IN","mode":"link","links":["222908029ced3859"],"x":380,"y":620,"wires":[],"l":true},{"id":"222908029ced3859","type":"link in","z":"2e1553480c579f63","name":"Status OUT","links":["00d14ca14ed78d84","ce234410e56d72cf","e02257877bd713ca","24873dee86d7e1f7","f85ab3b9f532fa3b"],"x":1470,"y":700,"wires":[[]],"l":true},{"id":"ce234410e56d72cf","type":"link out","z":"2e1553480c579f63","name":"Status IN","mode":"link","links":["222908029ced3859"],"x":880,"y":700,"wires":[],"l":true},{"id":"e02257877bd713ca","type":"link out","z":"2e1553480c579f63","name":"Status IN","mode":"link","links":["222908029ced3859"],"x":1780,"y":500,"wires":[],"l":true},{"id":"24873dee86d7e1f7","type":"link out","z":"2e1553480c579f63","d":true,"name":"Status IN","mode":"link","links":["222908029ced3859"],"x":633.765625,"y":299.75,"wires":[],"l":true},{"id":"f85ab3b9f532fa3b","type":"link out","z":"2e1553480c579f63","d":true,"name":"Status IN","mode":"link","links":["222908029ced3859"],"x":940,"y":220,"wires":[],"l":true},{"id":"3c22eb669069296f","type":"link out","z":"2e1553480c579f63","name":"Delay IN","mode":"link","links":["cb92fcb9edda4c44"],"x":1800,"y":580,"wires":[],"l":true},{"id":"cb92fcb9edda4c44","type":"link in","z":"2e1553480c579f63","name":"Delay OUT","links":["3c22eb669069296f"],"x":380,"y":660,"wires":[["33b9c0273f6c8e6d"]],"l":true},{"id":"3a68e43ab36d25e9","type":"function","z":"416f3e9048b97ca4","name":"User Presence Updater","func":"// User Presence Updater\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : Person event data\n//\n// -*- OUTPUTS -*-\n// msg.payload              : PresenceService object\n// ******************************************************************\n\n/*** START ***/\nconst repository = context.global[env.get(\"MODULE_ID\")];\nconst utils = repository.util.common;\nconst PresenceEvent = repository.domain.models.PresenceEvent;\nconst PresenceService = repository.domain.services.PresenceService;\n\nlet status;\n\ntry {\n\n    status = \"Updating presence...\";\n    node.status({ fill: \"yellow\", text: status });\n\n    // Extract the presence event data\n    const presenceEvent = new PresenceEvent(msg.payload);\n\n    // Update the presence status\n    msg.payload = PresenceService.setPresence(presenceEvent);\n\n    status = `Presence updated (${presenceEvent.getUser()})`;\n    node.status(utils.status(status).payload);\n\n    // Return the updated PresenceService object\n    return [msg, utils.status(status)];\n\n} catch (error) {\n    // Log the error\n    node.warn(`[ERROR (PresenceService)]: ${error}`);\n\n    // Set node status to indicate an error occurred\n    status = `Error updating presence object: ${error}`;\n\n    node.status({ fill: \"red\", text: status });\n    return [null, utils.status(status, { fill: \"red\" })];\n}\n\n\n/*** END ***/","outputs":2,"timeout":"","noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\nnode.status({ fill: \"yellow\", shape: \"dot\", text: \"Starting...\" });","finalize":"","libs":[],"x":190,"y":80,"wires":[[],[]]},{"id":"86234a2687e886f7","type":"change","z":"a7ed881353992217","name":"Emit: Connecting...","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"fill\":\"yellow\",\"text\":\"Connecting...\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":230,"y":200,"wires":[[]]},{"id":"3439324a028c5b9c","type":"delay","z":"a7ed881353992217","name":"","pauseType":"delay","timeout":"10","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":580,"y":120,"wires":[["06986f1ce890459f"]]},{"id":"8f96fab0f6a08024","type":"server-state-changed","z":"a7ed881353992217","name":"On Connect","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_boolean.is_connected","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"flush","propertyType":"msg","value":"true","valueType":"bool"}],"x":410,"y":160,"wires":[["3439324a028c5b9c"]]},{"id":"1042b76e40019466","type":"api-current-state","z":"a7ed881353992217","name":"Is Connected","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_boolean.is_connected","state_type":"str","blockInputOverrides":false,"outputProperties":[],"for":"","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":210,"y":40,"wires":[["5c86e3b0483a60ad","d741dbefd42198f3"]]},{"id":"5c86e3b0483a60ad","type":"change","z":"a7ed881353992217","name":"","rules":[{"t":"set","p":"reset","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":400,"y":80,"wires":[["3439324a028c5b9c"]]},{"id":"06986f1ce890459f","type":"change","z":"a7ed881353992217","name":"","rules":[{"t":"delete","p":"flush","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":120,"wires":[["d741dbefd42198f3"]]},{"id":"d741dbefd42198f3","type":"change","z":"a7ed881353992217","name":"Send Payload","rules":[],"action":"","property":"","from":"","to":"","reg":false,"x":960,"y":40,"wires":[["539d94557d2886db"]]},{"id":"539d94557d2886db","type":"change","z":"a7ed881353992217","name":"Emit: Conneced","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"fill\":\"green\",\"text\":\"Connected\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":960,"y":160,"wires":[[]]},{"id":"735ef8c1f49956e2","type":"catch","z":"a7ed881353992217","name":"Catch: Is (not) Connected","scope":["1042b76e40019466"],"uncaught":false,"x":130,"y":280,"wires":[["22150e1e5bc97273"]]},{"id":"22150e1e5bc97273","type":"debug","z":"a7ed881353992217","d":true,"name":"Catch: Is (not) Connected","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":370,"y":280,"wires":[]},{"id":"397f503f1150c2cd","type":"file in","z":"a5ba79dede304e04","name":"Load File","filename":"path","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":320,"y":80,"wires":[["4cc02f131764b437"]]},{"id":"4cc02f131764b437","type":"change","z":"a5ba79dede304e04","name":"Emit: Loaded","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"fill\":\"green\",\"text\":\"File Loaded\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":490,"y":80,"wires":[[]]},{"id":"6dbbf8ae26143cab","type":"subflow:bcd1b01f6fd36df1","z":"a5ba79dede304e04","name":"","x":170,"y":120,"wires":[["397f503f1150c2cd"],[]]},{"id":"ad7c503c87950fff","type":"function","z":"bcd1b01f6fd36df1","name":"Check Path","func":"// Check Path\n// Ensures a path has been passed\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.[payload.]path       : file path\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// ******************************************************************\n\n/*** START ***/\nconst utils = context.global[env.get(\"MODULE_ID\")].util.common;\n\nconst path = env.get(\"FILE_PATH\") || (msg.payload ? msg.payload.path : false) || msg.path;\n\nif (!path) return [null, utils.status(\"Invalid path\", { fill: \"red\" })];\n\nmsg.path = path;\nreturn [msg, utils.status(msg.path)];","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":80,"wires":[[],[]]},{"id":"92e457998bf92558","type":"subflow:01b24619b55abe60","z":"209313b8aacac5d0","d":true,"name":"","x":130,"y":280,"wires":[[]]},{"id":"72fc656b7e787b2b","type":"subflow:b0163a757372995f","z":"209313b8aacac5d0","d":true,"name":"","x":770,"y":80,"wires":[[]]},{"id":"f2c19b8503b080c7","type":"subflow:c4f2363dbcb3bd29","z":"209313b8aacac5d0","d":true,"name":"","x":110,"y":360,"wires":[[]]},{"id":"d68a6bc0a8bc110e","type":"subflow:218b018ab076dfbf","z":"209313b8aacac5d0","d":true,"name":"","x":120,"y":320,"wires":[[]]},{"id":"2d0b63464e3b4c02","type":"subflow:bd62b682.b42b48","z":"209313b8aacac5d0","d":true,"name":"","x":160,"y":400,"wires":[]},{"id":"0122bb964718d9a6","type":"subflow:a775543a.4bfa58","z":"209313b8aacac5d0","d":true,"name":"","x":120,"y":440,"wires":[[]]},{"id":"5c7cb15a2142d026","type":"subflow:fac1a6ef.3f3b88","z":"209313b8aacac5d0","d":true,"name":"","x":130,"y":480,"wires":[[]]},{"id":"6f4325898f890360","type":"subflow:ef2c4c87.13348","z":"209313b8aacac5d0","d":true,"name":"","x":120,"y":520,"wires":[[]]},{"id":"65b45e4feff2898e","type":"subflow:5c17ae8417803497","z":"209313b8aacac5d0","d":true,"name":"","x":750,"y":120,"wires":[[]]},{"id":"b4474ddfeff2f1bf","type":"comment","z":"209313b8aacac5d0","name":"Documented","info":"","x":710,"y":40,"wires":[]},{"id":"72bfec26f1b2331e","type":"comment","z":"209313b8aacac5d0","name":"Undocumented","info":"","x":100,"y":40,"wires":[]},{"id":"9f1193f5b0e1e125","type":"subflow:1671b0eb36e8a5c9","z":"209313b8aacac5d0","d":true,"name":"","x":160,"y":600,"wires":[[]]},{"id":"5691815876eab443","type":"subflow:6afebbe9d3799590","z":"209313b8aacac5d0","d":true,"name":"","x":90,"y":640,"wires":[[]]},{"id":"72a177d308ff520e","type":"subflow:14483421210c6f6b","z":"209313b8aacac5d0","d":true,"name":"","x":130,"y":680,"wires":[[]]},{"id":"a1931847069db01f","type":"subflow:c503fec7b99f2355","z":"209313b8aacac5d0","d":true,"name":"","x":120,"y":720,"wires":[[]]},{"id":"b55b7f6041d5416d","type":"comment","z":"209313b8aacac5d0","name":"Node Documentation Template","info":"Simple description\n\n### Inputs\n\n: TBC (string)     :  TBC\n: TBC (string)       :  TBC\n\n### Outputs\n\n1. Standard output\n: TBC (string)   : TBC\n: TBC (string)     : TBC\n\n### Details\n\n`TBC` TBC\n\n### References\n\n - Author - SK\n - Version - 1.0","x":430,"y":40,"wires":[]},{"id":"9721739a7e2a1390","type":"subflow:94e56685e6cdc113","z":"209313b8aacac5d0","d":true,"name":"","x":110,"y":760,"wires":[[]]},{"id":"e5c9265ed5698b75","type":"subflow:2802501265df2123","z":"209313b8aacac5d0","d":true,"name":"","x":100,"y":800,"wires":[[],[]]},{"id":"b257d2d94f7ec45e","type":"subflow:f9586397.5973","z":"209313b8aacac5d0","d":true,"name":"","x":90,"y":80,"wires":[]},{"id":"92ec9209.762ac","type":"inject","z":"209313b8aacac5d0","d":true,"name":"test","props":[{"p":"payload"}],"repeat":"5","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":190,"y":1380,"wires":[["3c377357.2eb52c"]]},{"id":"3c377357.2eb52c","type":"function","z":"209313b8aacac5d0","name":"Test 2 functions","func":"msg.payload = Math.round(Math.random() * 100);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":1380,"wires":[["58af985daf5a5868","c248c99479f9fed7"]]},{"id":"867de411.01ff3","type":"debug","z":"209313b8aacac5d0","name":"Full msg","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":680,"y":1380,"wires":[]},{"id":"86b28eb5f00e9572","type":"comment","z":"209313b8aacac5d0","name":"Node Documentation Template","info":"Useful utility functions used within various other functions\n### Functions\nLoaded into GlobalContext within the utils object , the environment variable\nENV_UTIL_OBJECT can be used to override the object name\n\n: round (number)     :  (value, precision)\n: TBC (string)       :  TBC\n\n### round       : number\n\n1. round\n: TBC (string)   : TBC\n: TBC (string)     : TBC\n\n### Details\n\n`TBC` TBC\n\n### References\n\n - Author - SK\n - Version - 1.0","x":430,"y":80,"wires":[]},{"id":"58af985daf5a5868","type":"ui_chart","z":"209313b8aacac5d0","d":true,"name":"","group":"d1451bcf710beab7","order":0,"width":"0","height":"0","label":"chart test","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"5","removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":540,"y":1380,"wires":[["867de411.01ff3"]]},{"id":"c248c99479f9fed7","type":"ui_template","z":"209313b8aacac5d0","group":"d1451bcf710beab7","name":"anything","order":1,"width":0,"height":0,"format":"<div ng-bind-html=\"msg.payload\"></div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":560,"y":1300,"wires":[["867de411.01ff3"]]},{"id":"d9c21b71023e7df2","type":"function","z":"209313b8aacac5d0","name":"Task Function","func":"var trigger // e.g. Motion sensor\nvar action // what to do\nvar target // target user to notify etc.\n\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":1240,"wires":[[]]},{"id":"dc0a6448b8da4dd3","type":"function","z":"209313b8aacac5d0","name":"Function Template","func":"// Function Template (v1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\n//var utils = global.get(\"utils\");\n\n//require(\"test.js\");\n\n//const result = hash.substring(2).split(\"&\");\n//node.warn(result);\n\nconst getParamMapFromHash = () => {\n    const hash = \"#?forecastChoice=weather&date=2024-04-18&region=yh\";\n    const currentParamsArray = hash.startsWith(\"#?\") ? hash.substring(2).split(\"&\") : [];\n    return new Map(currentParamsArray.map(element => {\n        const pair = element.split(\"=\")\n        return [pair[0], pair[1]]\n    }));\n}\n\nconst setHashFromMap = map => {\n    const newParamsString = Array.from(map.entries())\n        .map(keyAndValue => keyAndValue.join('='))\n        .join('&');\n    return `?${newParamsString}`;\n}\nconst params = getParamMapFromHash();\nnode.warn(params);\nconst result = setHashFromMap(params)\nnode.warn(result);\nreturn msg;\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":1120,"wires":[["062ae5d747d60293"]]},{"id":"ca46b72a2874cb55","type":"api-call-service","z":"209313b8aacac5d0","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"","service":"","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":630,"y":1240,"wires":[[]]},{"id":"f3022d9fece23cca","type":"function","z":"209313b8aacac5d0","name":"function 1","func":"// Function Template (v1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n// msg.entities [OPTIONAL]  : Key/Value json mapping for input_select entities\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nvar utils       = global.get(\"utils\");\nvar entity_id   = msg.payload.target.entity_id;\n\n// If no entity_id provided, continue\nif (!msg.payload.target.entity_id) {\n    return msg;\n}\n\n// Check if entity has been soft-disabled\nlet isDisabled = global.get(entity_id + \".disabled\")\n\nif (isDisabled) {\n    \n}\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":1300,"wires":[[]]},{"id":"141a9e50566651dd","type":"ha-get-entities","z":"209313b8aacac5d0","d":true,"name":"","server":"5e6a682a.ce8468","version":1,"rules":[{"property":"entity_id","logic":"is","value":"ikea_lamps","valueType":"entity"}],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":370,"y":1580,"wires":[["8f6302511bd3fddc"]]},{"id":"6cff7f85d25c6316","type":"inject","z":"209313b8aacac5d0","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":1520,"wires":[["141a9e50566651dd","9639bf374cf4ade8"]]},{"id":"8f6302511bd3fddc","type":"debug","z":"209313b8aacac5d0","name":"debug 16","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":650,"y":1480,"wires":[]},{"id":"75232a1e70b08565","type":"comment","z":"209313b8aacac5d0","name":"BOOT/SHUTDOWN ideas","info":"how do we decide:\n\nwhat to affect\n\nwhen to affect (delays etc)\n\nconditions needed to effect\n\na way to reuse the following for any \nnumber of devices\n\n\nshutdown(entity[], delay int);\n\noutput(\"idk yet, a shutdown log msg?\")\n\nfunction shutdown (var entity[], var delay) {\n    \n}","x":1050,"y":1100,"wires":[]},{"id":"c876c2c3682674a5","type":"function","z":"209313b8aacac5d0","name":"Shutdown delay function","func":"var utils = global.get(\"utils\");\n\n// Example usage\nconst example_entity = {\n    domain: \"light\",\n    service: \"turn_on\",\n    target: {\n        entity_id: [\"light.kitchen\"]\n    },\n    data: {\n        brightness_pct: 75\n    }\n};\n\nconst entity = msg.entity;\nconst delay = msg.delay; // seconds\n\nshutdown(entity, delay)\n    .then(result => {\n        utils.log(\"Result: \" + result);\n        return msg;\n    })\n    .catch(error => {\n        console.error(error);\n        return null;\n    });\n\nfunction shutdown(entity, delay) {\n    // Extract values from the 'entity' object\n    const domain = entity.domain || \"homeassistant\";\n    const service = entity.service || \"turn_on\";\n    const target = entity.target || {};\n    const area_id = target.area_id || [];\n    const device_id = target.device_id || [];\n    const entity_id = target.entity_id || [];\n    const data = entity.data || {};\n    const brightness_pct = data.brightness_pct || 50;\n\n    // Convert delay to milliseconds\n    const delayMs = delay * 1000;\n\n    // Return a promise that resolves after the specified delay\n    return new Promise(resolve => {\n        setTimeout(() => {\n            const msg = {\n                payload: {\n                    domain,\n                    service,\n                    target: {\n                        area_id,\n                        device_id,\n                        entity_id\n                    },\n                    data: {\n                        brightness_pct\n                    }\n                }\n            };\n            resolve(msg);\n        }, delayMs);\n    });\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":1200,"wires":[[]]},{"id":"c2d9d3d8a1366a64","type":"api-call-service","z":"209313b8aacac5d0","name":"Turn OFF Speakers/Sub","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_off","areaId":[],"deviceId":[],"entityId":["input_boolean.template_switch_1","input_boolean.template_switch_2"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1190,"y":1200,"wires":[[]]},{"id":"a50a050d8d20798c","type":"api-call-service","z":"209313b8aacac5d0","name":"Turn OFF Interface","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_off","areaId":[],"deviceId":[],"entityId":["input_boolean.template_switch_3"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1170,"y":1260,"wires":[[]]},{"id":"12036d67203b828f","type":"inject","z":"209313b8aacac5d0","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":890,"y":1200,"wires":[["c2d9d3d8a1366a64"]]},{"id":"8942a647a854f5f7","type":"inject","z":"209313b8aacac5d0","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":880,"y":1280,"wires":[["a50a050d8d20798c"]]},{"id":"84d9aed174277a04","type":"subflow:b6a890be694a7c3e","z":"209313b8aacac5d0","d":true,"name":"","x":110,"y":140,"wires":[]},{"id":"b6bc0bcc09cff4ab","type":"subflow:bd6afb792041214f","z":"209313b8aacac5d0","d":true,"name":"","x":100,"y":240,"wires":[[]]},{"id":"1d17ebba7e1698a8","type":"subflow:20b25024f4366686","z":"209313b8aacac5d0","d":true,"name":"","env":[{"name":"POLL_RATE","value":"20000","type":"str"}],"x":90,"y":200,"wires":[[]]},{"id":"d00171ce97c54e4f","type":"function","z":"209313b8aacac5d0","name":"domain","func":"// Domain Logic\n// General Use-Case Domain Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.domain       : Domain object repository\n// ******************************************************************\n\n/*** START ***/\n\nclass Entity {\n    constructor(entityObject) {\n        this._aliases = entityObject.aliases || [];\n        this._areaId = entityObject.area_id || null;\n        this._capabilities = entityObject.capabilities || null;\n        this._configEntryId = entityObject.config_entry_id || null;\n        this._deviceClass = entityObject.device_class || null;\n        this._deviceId = entityObject.device_id || null;\n        this._disabledBy = entityObject.disabled_by || null;\n        this._entityCategory = entityObject.entity_category || null;\n        this._entityId = entityObject.entity_id || null;\n        this._hiddenBy = entityObject.hidden_by || null;\n        this._icon = entityObject.icon || null;\n        this._id = entityObject.id || null;\n        this._hasEntityName = entityObject.has_entity_name || null;\n        this._name = entityObject.name || null;\n        this._options = entityObject.options || null;\n        this._originalDeviceClass = entityObject.original_device_class || null;\n        this._originalIcon = entityObject.original_icon || null;\n        this._originalName = entityObject.original_name || null;\n        this._platform = entityObject.platform || null;\n        this._supportedFeatures = entityObject.supported_features || null;\n        this._translationKey = entityObject.translation_key || null;\n        this._uniqueId = entityObject.unique_id || null;\n        this._unitOfMeasurement = entityObject.unit_of_measurement || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get areaId() {\n        return this._areaId;\n    }\n\n    get capabilities() {\n        return this._capabilities;\n    }\n\n    get configEntryId() {\n        return this._configEntryId;\n    }\n\n    get deviceClass() {\n        return this._deviceClass;\n    }\n\n    get deviceId() {\n        return this._deviceId;\n    }\n\n    get disabledBy() {\n        return this._disabledBy;\n    }\n\n    get entityCategory() {\n        return this._entityCategory;\n    }\n\n    get entityId() {\n        return this._entityId;\n    }\n\n    get hiddenBy() {\n        return this._hiddenBy;\n    }\n\n    get icon() {\n        return this._icon;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get hasEntityName() {\n        return this._hasEntityName;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    get originalDeviceClass() {\n        return this._originalDeviceClass;\n    }\n\n    get originalIcon() {\n        return this._originalIcon;\n    }\n\n    get originalName() {\n        return this._originalName;\n    }\n\n    get platform() {\n        return this._platform;\n    }\n\n    get supportedFeatures() {\n        return this._supportedFeatures;\n    }\n\n    get translationKey() {\n        return this._translationKey;\n    }\n\n    get uniqueId() {\n        return this._uniqueId;\n    }\n\n    get unitOfMeasurement() {\n        return this._unitOfMeasurement;\n    }\n}\n\nclass Area {\n    constructor(areaObject) {\n        this._aliases = areaObject.aliases || [];\n        this._name = areaObject.name || null;\n        this._id = areaObject.id || null;\n        this._picture = areaObject.picture || null;\n    }\n\n    get aliases() {\n        return this._aliases;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get picture() {\n        return this._picture;\n    }\n}\n\nclass Device {\n    constructor(deviceObject) {\n        this._area_id = deviceObject.area_id || null;\n        this._config_entries = deviceObject.config_entries || [];\n        this._configuration_url = deviceObject.configuration_url || null;\n        this._connections = deviceObject.connections || [];\n        this._disabled_by = deviceObject.disabled_by || null;\n        this._entry_type = deviceObject.entry_type || null;\n        this._hw_version = deviceObject.hw_version || null;\n        this._id = deviceObject.id || null;\n        this._identifiers = deviceObject.identifiers || [];\n        this._manufacturer = deviceObject.manufacturer || null;\n        this._model = deviceObject.model || null;\n        this._name_by_user = deviceObject.name_by_user || null;\n        this._name = deviceObject.name || null;\n        this._sw_version = deviceObject.sw_version || null;\n        this._via_device_id = deviceObject.via_device_id || null;\n    }\n\n    get area_id() {\n        return this._area_id;\n    }\n\n    get config_entries() {\n        return this._config_entries;\n    }\n\n    get configuration_url() {\n        return this._configuration_url;\n    }\n\n    get connections() {\n        return this._connections;\n    }\n\n    get disabled_by() {\n        return this._disabled_by;\n    }\n\n    get entry_type() {\n        return this._entry_type;\n    }\n\n    get hw_version() {\n        return this._hw_version;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get identifiers() {\n        return this._identifiers;\n    }\n\n    get manufacturer() {\n        return this._manufacturer;\n    }\n\n    get model() {\n        return this._model;\n    }\n\n    get name_by_user() {\n        return this._name_by_user;\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get sw_version() {\n        return this._sw_version;\n    }\n\n    get via_device_id() {\n        return this._via_device_id;\n    }\n}\n\nconst domain = {\n\n    models: {\n        Entity,\n        Area,\n        Device\n    }\n};\n\nmsg.payload = domain;\nmsg.topic = \"domain\";\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":940,"wires":[["9df84279cce80604"]]},{"id":"ef80e937d8113282","type":"function","z":"209313b8aacac5d0","name":"ports","func":"// Ports\n// General Use-Case Port Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.ports        : Ports object repository\n// ******************************************************************\n\n/*** START ***/\n\nfunction motionSensorPort(motion_event) {\n    try {\n        const status = `Motion detected [${motion_event.state}] at [${motion_event.location}: ${motion_event.sensor_id}] at [${new Date(motion_event.timestamp)}]`;\n        // Core domain logic for processing motion events\n\n        return { motion_event, status };\n    } catch (error) {\n        // If an error occurs during processing, return the error message\n        return { motion_event, status: `Error processing motion event: ${error.message}` }\n    }\n}\n\nconst ports = {\n    motionSensorPort\n};\n\nmsg.payload = ports;\nmsg.topic = \"ports\";\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":980,"wires":[["9df84279cce80604"]]},{"id":"5786c0a70e5ea908","type":"function","z":"209313b8aacac5d0","name":"adapters","func":"// Adapter Logic\n// General Use-Case Adapter Logic\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.adapters     : adapters object repository\n// ******************************************************************\n\n/*** START ***/\n\nfunction testAdapter() {\n    node.warn(\"hello!\");\n}\n\nconst adapters = {\n    testAdapter\n};\n\nmsg.topic = \"adapters\";\nmsg.payload = adapters;\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":1020,"wires":[["9df84279cce80604"]]},{"id":"c9ad587059d24cfc","type":"function","z":"209313b8aacac5d0","name":"Load util","func":"// Load Environment Variables\n// Load Environment Variables + utils\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload.adapters     : adapters object repository\n// ******************************************************************\n\n// Default to system, object if no GLOBAL_ID environment variable passed\nconst SOURCE = getPathObject(env.get(\"GLOBAL_ID\") || \"system\");\n\n// Core Modules\nconst DOMAIN = getPathObject(`${SOURCE.REPOSITORY}domain`);\nconst PORTS = getPathObject(`${SOURCE.REPOSITORY}ports`);\nconst ADAPTERS = getPathObject(`${SOURCE.REPOSITORY}adapters`);\nconst UTILS = getPathObject(`${SOURCE.REPOSITORY}utils`);\n\n// Core Data\nconst ENTITIES = getPathObject(`${SOURCE.REPOSITORY}entities`);\nconst AREAS = getPathObject(`${SOURCE.REPOSITORY}areas`);\nconst DEVICES = getPathObject(`${SOURCE.REPOSITORY}devices`);\n\n// Use Cases\nconst OCCUPANCY = getPathObject(`${SOURCE.REPOSITORY}occupancy`);\nconst PRESENCE = getPathObject(`${SOURCE.REPOSITORY}presence`);\n\nconst WaitTimerManager = global.get(`${DOMAIN.OBJECT}.models.WaitTimerManager`);\n\nconst path = {\n    SOURCE,\n    DOMAIN,\n    PORTS,\n    ADAPTERS,\n    UTILS,\n    ENTITIES,\n    AREAS,\n    DEVICES,\n    OCCUPANCY,\n    PRESENCE\n};\n\n// For global context path setup\nfunction getPathObject(path) {\n\n    return {\n        REPOSITORY: append(path, \".\"),\n        OBJECT: abate(path, \".\")\n    };\n}\n\n// Rounding function with precision\nfunction round(value, precision) {\n\n    // Return raw value if no precision passed\n    if (!exists(precision)) return value;\n\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\n// Check if entity_id was passed, and remove domain\nfunction getGlobalID(globalID) {\n\n    // If an entity_id was passed, remove domain\n    if (exists(globalID) && globalID.includes(\".\")) {\n\n        globalID = globalID.split(\".\")[1];\n\n    }\n\n    // Return global ID\n    return globalID;\n}\n\n// Check if a value exists\nfunction exists(value) {\n\n    var valueType = typeof value;\n\n    // Check for empty string\n    if (valueType === \"string\") {\n        if (value == \"\" || (value.length == 0)) return false;\n    }\n\n    // null check\n    if (value === null) return false;\n\n    // undefined check\n    if (valueType === \"undefined\") return false;\n\n    // Empty object check\n    if (valueType == \"object\") {\n        if (Object.keys(value).length === 0) return false;\n    }\n\n    //return value != (\"\" || undefined || null || (value.length == 0));\n    return true;\n\n}\n\n// Create a new object and assign message to payload\nfunction status(message, properties = { fill: \"green\", shape: \"dot\" }) {\n    return {\n        \"payload\": {\n            ...properties,\n            text: message\n        }\n    };\n}\n\n// Sets an object attribute to a given value\nfunction setAttribute(property, attribute, value) {\n\n    // Check if msg property is an object\n    if (!(typeof property === 'object')) {\n        property = {};\n    }\n\n    // If attribute not passed, default to payload\n    if (!exists(attribute)) {\n        attribute = \"payload\";\n    }\n\n    // Set value\n    property[attribute] = value;\n\n    return property;\n\n}\n\n// Append character to end of string if not present\nfunction append(value, character) {\n\n    // Check if end of string matches character\n    if (value.charAt(value.length - character.length) !== character) {\n\n        // Append character if not found\n        value = value + character;\n    }\n\n    return value;\n\n}\n\n// Remove character from end of string\nfunction abate(value, character) {\n\n    // Check if end of string matches character(s) \n    if (value.charAt(value.length - character.length) === character) {\n\n        // Abate character if found\n        value = value.substring(0, value.length - character.length);\n    }\n\n    return value;\n\n}\n\nfunction getFileNameFromPath(filePath) {\n    const parts = filePath.split('/');\n    return parts[parts.length - 1];\n}\n\nfunction mapArrayToDict(entities, key) {\n    const entityDict = {};\n\n    entities.forEach(entity => {\n        entityDict[entity[key]] = entity;\n    });\n\n    return entityDict;\n}\n\nfunction currentState(entityId) {\n    return global.get(\"homeassistant.homeAssistant.states\")[entityId];\n}\n\n// Cast Object to array\nfunction castToArray(value) {\n    return (Array.isArray(value)) ? value : [value];\n}\n\n// Function to get attribute values from event data\nfunction getEventAttributes(event, attributes) {\n    return attributes.map(attr => event[attr]);\n}\n\n// Function to get an entity from an entities object\nfunction getEntity(entity_id) {\n\n    return new Promise((resolve, reject) => {\n\n        // Timeout value in milliseconds\n        const TIMEOUT = 10000;\n\n        const entities = global.get(ENTITIES.OBJECT);\n        //const entities = EntitiesRepository.getObject();\n\n        // Check if entities are already available\n        if (exists(entities)) {\n            resolve(entities[entity_id]);\n        } else {\n            const WaitTimerManager = global.get(`${DOMAIN.REPOSITORY}`).models.WaitTimerManager;\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Entities not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the entities object and resolve the promise\n                    const loaded_entities = global.get(ENTITIES.OBJECT);\n                    //const loaded_entities = EntitiesRepository.getObject();\n                    if (loaded_entities) {\n                        // Fetch the entity from the entities object\n                        resolve(loaded_entities[entity_id]);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(ENTITIES.OBJECT);\n                    }\n                    // Entities object not available yet, retrying...\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(ENTITIES.OBJECT, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for entities...\");\n        }\n    });\n}\n\n// Function to get an object from global context\nfunction waitForGlobalContext(global_id, TIMEOUT = 10000) {\n    return new Promise((resolve, reject) => {\n\n        const object_value = global.get(global_id);\n\n        // Check if value is already available\n        if (exists(object_value)) {\n            resolve(object_value);\n        } else {\n\n            const waitManager = new WaitTimerManager();\n\n            // Function to handle timer callback\n            const timerCallback = function (error) {\n                if (error) {\n                    // Timeout occurred\n                    reject(new Error(`Object not loaded within ${TIMEOUT} ms`));\n                } else {\n                    // Re-fetch the object and resolve the promise\n                    const loaded_object_value = global.get(global_id);\n                    node.warn(`Reloading object: ${loaded_object_value}`);\n                    if (loaded_object_value) {\n                        node.warn(`Object loaded (${global_id}): ${loaded_object_value}`);\n                        resolve(loaded_object_value);\n                        // Cancel the wait timer\n                        waitManager.clearWaitTimer(global_id);\n                    }\n                    node.warn(`Object not available yet, retrying...`);\n                }\n            };\n\n            // Create wait timer\n            waitManager.createWaitTimer(global_id, timerCallback, TIMEOUT);\n            node.warn(\"Waiting for object...\");\n        }\n    });\n}\n\nfunction getGlobalAsync(globalId, timeout = 10000) {\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            const obj = global.get(globalId);\n            if (obj !== undefined) {\n                clearInterval(interval);\n                resolve(obj);\n            }\n        }, 1000); // Check every second\n\n        setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timeout reached while waiting for global context object: ${globalId}`));\n        }, timeout);\n    });\n}\n\nconst util = {\n    path,\n    round,\n    getGlobalID,\n    exists,\n    status,\n    setAttribute,\n    append,\n    abate,\n    getFileNameFromPath,\n    mapArrayToDict,\n    currentState,\n    castToArray,\n    getEventAttributes,\n    getEntity,\n    waitForGlobalContext,\n    getGlobalAsync\n\n};\nmsg.topic = \"util\";\nmsg.payload = util;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":980,"wires":[["ef80e937d8113282","d00171ce97c54e4f","5786c0a70e5ea908","9df84279cce80604"]]},{"id":"0e2b261729f92fac","type":"inject","z":"209313b8aacac5d0","name":"Trigger on start","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":160,"y":980,"wires":[["c9ad587059d24cfc"]]},{"id":"52c48b3f9ee6c570","type":"inject","z":"209313b8aacac5d0","name":"Trigger on start","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":140,"y":1120,"wires":[["dc0a6448b8da4dd3"]]},{"id":"062ae5d747d60293","type":"debug","z":"209313b8aacac5d0","name":"Full msg","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":540,"y":1120,"wires":[]},{"id":"9df84279cce80604","type":"join","z":"209313b8aacac5d0","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":830,"y":980,"wires":[["a28da4f84bec0930","42aba022afbf8a9c"]]},{"id":"7798bf5f97d69cf0","type":"split","z":"209313b8aacac5d0","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":650,"y":1160,"wires":[[]]},{"id":"a28da4f84bec0930","type":"function","z":"209313b8aacac5d0","name":"Load Modules","func":"/** Load Modules **/\n\nconst SOURCE = msg.payload.util.path.SOURCE;\n\n// Store repository object to global context \nglobal.set(`${SOURCE.OBJECT}`, msg.payload);\n\nconst gc = global.keys();\nconst loaded = gc.includes(SOURCE.OBJECT);\nconst status = msg.payload.util.status;\n\n// Return loaded status\nif (loaded) return status(`Modules Loaded [${SOURCE.OBJECT}]`);\n\n// Return non-loaded status\nreturn status(`Modules Not loaded [${SOURCE.OBJECT}]`);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":980,"wires":[["6d1d844f64475bb0"]]},{"id":"42aba022afbf8a9c","type":"debug","z":"209313b8aacac5d0","name":"Full msg","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":980,"y":860,"wires":[]},{"id":"6d1d844f64475bb0","type":"debug","z":"209313b8aacac5d0","name":"debug 66","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1040,"y":900,"wires":[]},{"id":"9639bf374cf4ade8","type":"api-current-state","z":"209313b8aacac5d0","name":"Get System Repository","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_text.system_repository1","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"for":"","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":390,"y":1520,"wires":[["8f6302511bd3fddc"]]},{"id":"e265a22.cfc816","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Motion Lighting Zone Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.kitchen_motion_lighting_zone","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'ceiling light - kitchen': 'light.ceiling_light_6',\t    'ceiling light - all'    : 'light.ceiling_lights',\t    'ceiling light - middle' : 'light.ceiling_light_4'\t}","valueType":"jsonata"}],"x":180,"y":480,"wires":[["891fb4e4dd8c5271"]]},{"id":"5f7a0d3f.d87664","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Motion Lighting Mode Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.kitchen_motion_lighting_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'toggle'    : 'TOGGLE',\t    'dim'       : 'DIM',\t    'hybrid'    : 'HYBRID'\t}","valueType":"jsonata"}],"x":180,"y":540,"wires":[["f92f071b0a1a3685"]]},{"id":"a21bae0f.1a6bf","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Hybrid Lighting Zone 1 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.kitchen_hybrid_lighting_zone_1","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'ceiling light - kitchen': 'light.ceiling_light_6',\t    'ceiling light - all'    : 'light.ceiling_lights',\t    'ceiling light - middle' : 'light.ceiling_light_4'\t}","valueType":"jsonata"}],"x":170,"y":600,"wires":[["e4c70898ba11498d"]]},{"id":"4afcf610.4a08b8","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Hybrid Lighting Zone 2 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.kitchen_hybrid_lighting_zone_2","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'ceiling light - kitchen': 'light.ceiling_light_6',\t    'ceiling light - all'    : 'light.ceiling_lights',\t    'ceiling light - middle' : 'light.ceiling_light_4'\t}","valueType":"jsonata"}],"x":170,"y":660,"wires":[["7c43aa653bed74e8"]]},{"id":"891fb4e4dd8c5271","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":480,"wires":[[]]},{"id":"f92f071b0a1a3685","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":540,"wires":[[]]},{"id":"e4c70898ba11498d","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":600,"wires":[[]]},{"id":"7c43aa653bed74e8","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":660,"wires":[[]]},{"id":"bc370e182ca2ea8c","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"History Processing Rate Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.history_processing_rate","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"system.history_processing_rate","valueType":"str"}],"x":170,"y":1280,"wires":[["fa5253bf971c03f6"]]},{"id":"86b0aaf9780b2a49","type":"inject","z":"fe5f43f9.82396","d":true,"name":"Get Available Zones","props":[{"p":"global_id","v":"base_location","vt":"str"},{"p":"payload.zone_id","v":"zone.home","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":160,"y":1580,"wires":[["b15ad5dc95b72c16"]]},{"id":"68393b0ac46e1980","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":630,"y":1580,"wires":[[]]},{"id":"b15ad5dc95b72c16","type":"function","z":"fe5f43f9.82396","d":true,"name":"Get Zone Coordinates","func":"\n// Check if zone id was passed\nvar zone_id = (msg.payload.zone_id != (\"\" || undefined)) ? msg.payload.zone_id : null;\nif (zone_id == null) {\n    node.warn(\"[ERROR] Zone Entity ID not passed\");\n    return null;\n}\n\nnode.warn(\"Zone ID: \" + zone_id);\n// Check if zone exists and retrieve\nvar zoneObj = global.get(\"homeassistant.homeAssistant.states\")[zone_id];\nvar temp = global.get(\"homeassistant\");\nnode.warn(zoneObj);\nnode.warn(temp);\n\nvar latitude;\nvar longitude;\nif (zoneObj == undefined) {\n    node.warn(\"[ERROR] zone [\" + zone_id + \"] not found\");\n    return null;\n}\n// Get/Set attributes\nnode.warn(\"zone [\" + zone_id + \"] found\");\nlatitude    = zoneObj.attributes.latitude;\nlongitude   = zoneObj.attributes.longitude;\n\nmsg.payload.latitude    = latitude;\nmsg.payload.longitude   = longitude;\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":1580,"wires":[["68393b0ac46e1980"]]},{"id":"08a86fa7681f3928","type":"api-call-service","z":"fe5f43f9.82396","d":true,"name":"Disable Motion Detection [Living Room]","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_off","areaId":[],"deviceId":[],"entityId":["input_boolean.motion_1_presence_detection_toggle"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":440,"y":780,"wires":[[]]},{"id":"b24191050c681c77","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Theatre Mode Updater","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_boolean.system_theatre_mode","entityIdType":"exact","outputInitially":true,"stateType":"habool","ifState":"true","ifStateType":"bool","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"system.theatre_mode","valueType":"str"}],"x":140,"y":820,"wires":[["08a86fa7681f3928"],["760da84882c8ede4"]]},{"id":"760da84882c8ede4","type":"api-call-service","z":"fe5f43f9.82396","d":true,"name":"Enable Motion Detection [Living Room]","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_on","areaId":[],"deviceId":[],"entityId":["input_boolean.motion_1_presence_detection_toggle"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":430,"y":860,"wires":[[]]},{"id":"4fdeb7bea302d678","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"[AUTO] Theatre Mode Trigger (Chromecast) [ON]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"media_player.living_room_tv","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":220,"y":960,"wires":[["7bdbf6a1b00af34a"],["0e9fa6c8c646370b"]]},{"id":"c107587a632b8591","type":"api-call-service","z":"fe5f43f9.82396","d":true,"name":"Enable Theatre Mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_on","areaId":[],"deviceId":[],"entityId":["input_boolean.system_theatre_mode"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":860,"y":920,"wires":[[]]},{"id":"0e9fa6c8c646370b","type":"api-call-service","z":"fe5f43f9.82396","d":true,"name":"Disable Theatre Mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_off","areaId":[],"deviceId":[],"entityId":["input_boolean.system_theatre_mode"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":560,"y":1000,"wires":[[]]},{"id":"7bdbf6a1b00af34a","type":"ha-wait-until","z":"fe5f43f9.82396","d":true,"name":"Check / Wait to see if TV is on","server":"5e6a682a.ce8468","version":2,"outputs":2,"entityId":"switch.smart_plug_4","entityIdFilterType":"exact","property":"state","comparator":"is","value":"on","valueType":"str","timeout":"3","timeoutType":"num","timeoutUnits":"seconds","checkCurrentState":true,"blockInputOverrides":true,"outputProperties":[],"entityLocation":"data","entityLocationType":"none","x":590,"y":920,"wires":[["c107587a632b8591"],[]]},{"id":"544ddcba53862b16","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"[AUTO] Theatre Mode Trigger (Samsung TV) [OFF]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.smart_plug_4","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"off","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":230,"y":1020,"wires":[["0e9fa6c8c646370b"],[]]},{"id":"7fa975378fd46113","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Doorbell Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_button.system_doorbell","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":120,"y":1520,"wires":[["2f286a4e1428b439"]]},{"id":"2f286a4e1428b439","type":"api-call-service","z":"fe5f43f9.82396","d":true,"name":"[notify] Doorbell","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk_x","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"🔔 Someone's at the door Sir.\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":300,"y":1520,"wires":[[]]},{"id":"e869d4c8c0b91a7a","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Theatre Mode Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_boolean.system_theatre_mode","entityIdType":"exact","outputInitially":true,"stateType":"habool","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"system.theatre_mode","valueType":"str"}],"x":140,"y":720,"wires":[["e13ce33f5a2d1b2e"]]},{"id":"72cb90b344593d69","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Kitchen Motion Timeout Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.kitchen_motion_timeout","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":170,"y":1340,"wires":[["8cefac28202fe601"]]},{"id":"8cefac28202fe601","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":1340,"wires":[[]]},{"id":"f69b3ca.3ffe7c","type":"server-state-changed","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Occupancy Mode Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.system_occupancy_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.state","propertyType":"msg","value":"","valueType":"entityState"}],"x":550,"y":260,"wires":[["2245a9a961f6a215"]]},{"id":"ed0df5d5fb759f7b","type":"api-call-service","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Set Occupancy Mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_select","service":"select_option","areaId":[],"deviceId":[],"entityId":["{{entity_id}}"],"data":"{\"option\":\"{{payload}}\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1060,"y":200,"wires":[[]]},{"id":"2245a9a961f6a215","type":"subflow:ac18d08ecf3b428c","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","x":830,"y":200,"wires":[["ed0df5d5fb759f7b","92c8fa096f116137"]]},{"id":"1227012782df8a0e","type":"debug","z":"fe5f43f9.82396","name":"debug 55","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1360,"y":400,"wires":[]},{"id":"077f0430c0dc58bc","type":"server-state-changed","z":"fe5f43f9.82396","d":true,"name":"Updater Frequency Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.updater_frequency","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"system.updater_frequency","valueType":"str"}],"x":160,"y":1220,"wires":[["e28c1c83082081d6"]]},{"id":"4f275fa1eca0e458","type":"change","z":"fe5f43f9.82396","name":"Delete objects","rules":[{"t":"delete","p":"system.last_deployed","pt":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":1200,"y":400,"wires":[["1227012782df8a0e"]]},{"id":"0584cedf39b8723a","type":"inject","z":"fe5f43f9.82396","name":"DEBUG","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1050,"y":400,"wires":[["4f275fa1eca0e458"]]},{"id":"e28c1c83082081d6","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":1220,"wires":[[]]},{"id":"ce0d4144ed5fdf9a","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","env":[{"name":"GLOBAL_ID","value":"","type":"env"}],"x":1150,"y":80,"wires":[[]]},{"id":"fa5253bf971c03f6","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":1280,"wires":[[]]},{"id":"e13ce33f5a2d1b2e","type":"subflow:5c17ae8417803497","z":"fe5f43f9.82396","d":true,"name":"","x":450,"y":720,"wires":[[]]},{"id":"604d000ae234f177","type":"change","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Set Global Context ID","rules":[{"t":"set","p":"global_id","pt":"msg","to":"$env(\"MODULE_ID\") & \".last_deployed\"","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":920,"y":80,"wires":[["ce0d4144ed5fdf9a"]]},{"id":"a674def38f0c9d37","type":"server-state-changed","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Get Person(s)","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"person.","entityIdType":"substring","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"}],"x":130,"y":260,"wires":[["c4f79b533903359f"]]},{"id":"42a722f8accaab32","type":"server-state-changed","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Motion Detected [ALL]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"binary_sensor.","entityIdType":"substring","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"}],"x":160,"y":200,"wires":[["38735b09c743921a"]]},{"id":"38735b09c743921a","type":"subflow:db47d8fece13615c","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","x":390,"y":200,"wires":[["7d74bf6cd8138ece"]]},{"id":"c4f79b533903359f","type":"subflow:416f3e9048b97ca4","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","x":330,"y":260,"wires":[[]]},{"id":"7d74bf6cd8138ece","type":"subflow:20b25024f4366686","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","env":[{"name":"POLL_RATE","value":"input_number.updater_frequency","type":"str"}],"x":590,"y":200,"wires":[["2245a9a961f6a215"]]},{"id":"be42b3a73b6c719b","type":"inject","z":"fe5f43f9.82396","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":780,"y":600,"wires":[["31859270cf5cdb91"]]},{"id":"31859270cf5cdb91","type":"function","z":"fe5f43f9.82396","name":"Function Template","func":"// Function Template (v2)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Value\n// msg.global_id            : Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\nconst Entities = system.domain.models.Entities\n\nnode.warn(Entities);\n\n// try {\n//     const result = system.testFunction();\n//     msg.result = result;\n//     node.warn(result);\n// } catch (error) {\n//     node.warn(error);\n// }\n\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":600,"wires":[["5864ae0802756eec"]]},{"id":"5864ae0802756eec","type":"debug","z":"fe5f43f9.82396","name":"debug 87","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1160,"y":600,"wires":[]},{"id":"0056c35c2e137399","type":"inject","z":"fe5f43f9.82396","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":780,"y":680,"wires":[["57808c98e042049a"]]},{"id":"57808c98e042049a","type":"function","z":"fe5f43f9.82396","name":"Function Template","func":"// Function Template (v2)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Value\n// msg.global_id            : Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\nconst ContextMonitor = system.domain.models.ContextMonitor\nnode.warn(ContextMonitor);\nconst result = ContextMonitor.getValue(\"foyer_motion_lighting_mode\");\nnode.warn(result);\n\n\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":680,"wires":[["90e93c8fdd25acaf"]]},{"id":"90e93c8fdd25acaf","type":"debug","z":"fe5f43f9.82396","name":"debug 88","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1160,"y":680,"wires":[]},{"id":"84d482c883a4a867","type":"subflow:2e1553480c579f63","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","x":520,"y":140,"wires":[["4681dd71c58fc10d"]]},{"id":"a62fd577f023f24d","type":"subflow:20b25024f4366686","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","env":[{"name":"POLL_RATE_MULTIPLIER","value":"3","type":"num"}],"x":330,"y":140,"wires":[["84d482c883a4a867"]]},{"id":"7da6eece0046855b","type":"inject","z":"fe5f43f9.82396","d":true,"name":"Unavailable Lights","props":[{"p":"delay","v":"system.updater_frequency","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"0.1","topic":"","x":150,"y":1100,"wires":[["4221ba6da869e4b3"]]},{"id":"4221ba6da869e4b3","type":"subflow:20b25024f4366686","z":"fe5f43f9.82396","d":true,"name":"","x":330,"y":1100,"wires":[["eb148f72ba668290"]]},{"id":"eb148f72ba668290","type":"ha-get-entities","z":"fe5f43f9.82396","d":true,"name":"Retrieve Unavailable Lights","server":"5e6a682a.ce8468","version":1,"rules":[{"property":"state","logic":"is","value":"unavailable","valueType":"str"},{"property":"entity_id","logic":"starts_with","value":"light.","valueType":"str"}],"outputType":"array","outputEmptyResults":false,"outputLocationType":"global","outputLocation":"unavailable_lights","outputResultsCount":1,"x":540,"y":1100,"wires":[[]]},{"id":"4681dd71c58fc10d","type":"function","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Reload Registries","func":"// Reload Registries\n// Reload Areas and Entities registry files for module data classes\n// ******************************************************************\n// -*- INPUTS -*-\n// msg                          : existing msg object\n//\n// -*- OUTPUTS -*-\n// msg                          : existing msg object\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\nconst { Areas, Entities } = system.domain.models;\n\nlet status = utils.status(\"Registries reloaded successfully\");\n\ntry {\n    Areas.loadAreaRegistry();\n    Entities.loadEntityRegistry();\n} catch (error) {\n    status = utils.status(`[ERROR]: ${error}`, { fill: \"red\" });\n}\n\nnode.status(status.payload);\nreturn [msg, status];\n\n/*** END ***/\n\n/*** HELPERS ***/","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":140,"wires":[["357a8217f1c72be0"]]},{"id":"322fd830eeaede98","type":"function","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Generate Templates","func":"// Generate Templates\n// Generate Dynamic Templates for writing to file\n// ******************************************************************\n// -*- INPUTS -*-\n// msg                          : existing msg object\n//\n// -*- OUTPUTS -*-\n// msg                          : existing msg object\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\n\nconst TemplateGenerator = system.domain.models.template.TemplateGenerator;\n\nlet status = utils.status('Templates generated successfully');\n\ntry {\n\n    // Generate Templates\n    const templateGenerator = new TemplateGenerator();\n    msg.payload = templateGenerator.generate(system.domain.models.template, { write: true});\n\n} catch (error) {\n    status = utils.status(`[ERROR]: ${error}`, { fill: \"red\" });\n}\n\n// Set node / subflow status\nnode.status(status.payload);\nreturn [msg, status];\n\n/*** END ***/\n\n/*** HELPERS ***/","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":140,"wires":[["c07c846829c39f05"]]},{"id":"be38cec0fa8511b4","type":"subflow:f9586397.5973","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","x":130,"y":80,"wires":[]},{"id":"c07c846829c39f05","type":"api-call-service","z":"fe5f43f9.82396","d":true,"g":"fdedafb5b4235446","name":"Reload Packages","server":"3edfacf2.b3d2c4","version":5,"debugenabled":true,"domain":"template","service":"reload","areaId":[],"deviceId":[],"entityId":[],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1310,"y":140,"wires":[[]]},{"id":"357a8217f1c72be0","type":"trigger","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"Send Once","op1":"","op2":"0","op1type":"pay","op2type":"str","duration":"0","extend":false,"overrideDelay":false,"units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":910,"y":140,"wires":[["322fd830eeaede98"]]},{"id":"ca4bbbd0e0a22499","type":"subflow:d4d95936d311f239","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"","env":[{"name":"PATH","value":"/config/flows.json","type":"str"}],"x":330,"y":80,"wires":[["f5fbc0ae3593a8de"]]},{"id":"f5fbc0ae3593a8de","type":"link out","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"On Deploy IN","mode":"link","links":["035ae4d8c7805872","f770e29b55017dcd"],"x":520,"y":80,"wires":[],"l":true},{"id":"035ae4d8c7805872","type":"link in","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"On Deploy OUT","links":["f5fbc0ae3593a8de"],"x":720,"y":80,"wires":[["604d000ae234f177"]],"l":true},{"id":"f770e29b55017dcd","type":"link in","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"On Deploy OUT","links":["f5fbc0ae3593a8de"],"x":140,"y":140,"wires":[["a62fd577f023f24d"]],"l":true},{"id":"8473f563635c8892","type":"subflow:a5ba79dede304e04","z":"fe5f43f9.82396","d":true,"name":"","env":[{"name":"FILE_PATH","value":"/config/.storage/generated_templates/motion_lighting_timeout_living_room_input_datetime.yaml","type":"str"}],"x":850,"y":480,"wires":[["682b6ef1af6f879d"],[]]},{"id":"682b6ef1af6f879d","type":"yaml","z":"fe5f43f9.82396","property":"payload","name":"","x":990,"y":480,"wires":[["deab07aca64bcdb9"]]},{"id":"deab07aca64bcdb9","type":"debug","z":"fe5f43f9.82396","name":"debug 91","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1120,"y":480,"wires":[]},{"id":"edc2a4ca72a19309","type":"inject","z":"fe5f43f9.82396","name":"","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":690,"y":480,"wires":[["8473f563635c8892","8c9e911d1af7a4f2"]]},{"id":"8c9e911d1af7a4f2","type":"file in","z":"fe5f43f9.82396","name":"Load File","filename":"/config/.storage/generated_templates/motion_lighting_timeout_living_room_input_datetime.yaml","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":840,"y":540,"wires":[["682b6ef1af6f879d"]]},{"id":"92c8fa096f116137","type":"debug","z":"fe5f43f9.82396","g":"fdedafb5b4235446","name":"debug 92","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1040,"y":260,"wires":[]},{"id":"a458713b.90235","type":"server-state-changed","z":"18c5eb19.0cae45","name":"[Bedroom] Motion Listener","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"switch.motion_2","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"area","propertyType":"msg","value":"bedroom","valueType":"str"},{"property":"motion","propertyType":"msg","value":"","valueType":"entityState"}],"x":130,"y":40,"wires":[["99c46911.43a4c8"]]},{"id":"99c46911.43a4c8","type":"subflow:bd62b682.b42b48","z":"18c5eb19.0cae45","name":"","env":[],"x":390,"y":40,"wires":[]},{"id":"ad4f2e9d.99788","type":"server-state-changed","z":"18c5eb19.0cae45","name":"[Foyer] Motion Listener","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"switch.motion_3","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"area","propertyType":"msg","value":"foyer","valueType":"str"},{"property":"motion","propertyType":"msg","value":"","valueType":"entityState"}],"x":120,"y":220,"wires":[["1305e7b4.5a53a8"]]},{"id":"a770ce65.8142f","type":"subflow:bd62b682.b42b48","z":"18c5eb19.0cae45","name":"","env":[],"x":390,"y":100,"wires":[]},{"id":"a79fce9e.6d1c1","type":"server-state-changed","z":"18c5eb19.0cae45","name":"[Kitchen] Motion Listener","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"switch.motion_4","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"area","propertyType":"msg","value":"kitchen","valueType":"str"},{"property":"motion","propertyType":"msg","value":"","valueType":"entityState"}],"x":130,"y":100,"wires":[["a770ce65.8142f"]]},{"id":"48ef7e25.169d5","type":"server-state-changed","z":"18c5eb19.0cae45","name":"[Living Room] Motion Listener","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"switch.motion_1","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"area","propertyType":"msg","value":"living_room","valueType":"str"},{"property":"motion","propertyType":"msg","value":"","valueType":"entityState"}],"x":140,"y":160,"wires":[["9e4cd95f.664b88"]]},{"id":"9e4cd95f.664b88","type":"subflow:bd62b682.b42b48","z":"18c5eb19.0cae45","name":"","env":[],"x":410,"y":160,"wires":[]},{"id":"82a01637.35a9f8","type":"subflow:6ffe6236.14e0bc","z":"18c5eb19.0cae45","name":"","env":[],"x":760,"y":40,"wires":[]},{"id":"1305e7b4.5a53a8","type":"subflow:bd62b682.b42b48","z":"18c5eb19.0cae45","name":"","env":[],"x":370,"y":220,"wires":[]},{"id":"f9b48ce9ce5dd074","type":"function","z":"18c5eb19.0cae45","name":"Motion Sensor Lighting Adapter","func":"// Motion Sensor Lighting Adapter\n// \n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Value\n// msg.global_id            : Global Context identifier\n// ******************************************************************\n\nclass MotionEvent {\n    constructor(sensor_id, location, timestamp, state = \"on\", attr = {}) {\n        this.sensor_id = sensor_id;\n        this.location = location;\n        this.timestamp = timestamp;\n        // Check if state is passed as an attribute\n        if (typeof state === \"object\") {\n            attr = state; // Treat state as part of the attributes\n            state = \"on\"; // Default state if not provided separately\n        }\n        this.state = state;\n        // Spread optional attributes onto the class instance\n        Object.assign(this, attr);\n    }\n}\n\n/*** START ***/\nconst repository = context.global[env.get(\"MODULE_ID\")];\nconst utils = repository.util.common;\nconst Entities = repository.domain.models.Entities;\n\n// Retrieve the motion sensor port from global context\n//const motionSensorPort = context.global[env.get(\"MODULE_ID\")].ports.motionSensorPort;\n//node.warn(msg.payload.data.new_state);\nconst result = motionEventHandler(msg.payload.data.new_state);\n\nif (result) {\n    // Handle the result here\n    //node.warn(result.status);\n    //node.warn(result.motion_event);\n    \n    // You can do further processing if needed\n    msg.area = result.motion_event.location;\n    msg.motion = msg.payload.data;\n    msg.payload = result;\n    return msg;\n} else {\n    // Handle null result\n    node.warn(`[ERROR]: Result is null`);\n}\n\n/*** END ***/\n\n/*** HELPERS ***/\n\nfunction motionEventHandler(event_data) {\n\n    if (!event_data) {\n        const message = \"[ERROR]: Missing motion event data\";\n        node.warn(message);\n        node.status(utils.status(message, { fill: \"red\" }).payload);\n        return null;\n    }\n\n    const entity = Entities.getEntity(event_data.entity_id);\n\n    if (!entity) {\n        // Entity not found\n        node.warn(`Entity not found [${event_data.entity_id}]`);\n        return null;\n    }\n\n    const location = entity.area_id;\n\n    if (!location) {\n        // Entity not found\n        node.warn(`No area set for [${event_data.entity_id}]`);\n        return null;\n    }\n\n    // Create MotionEvent object\n    const motion_event = new MotionEvent(event_data.entity_id, location, event_data.last_changed, event_data);\n\n    // Call the registered callback function on the motion sensor port with the event data\n    return motionSensorPort(motion_event);\n\n}\n\nfunction motionSensorPort(motion_event) {\n    try {\n        const status = `Motion detected [${motion_event.state}] at [${motion_event.location}: ${motion_event.sensor_id}] at [${new Date(motion_event.timestamp)}]`;\n        // Core domain logic for processing motion events\n\n        return { motion_event, status };\n    } catch (error) {\n        // If an error occurs during processing, return the error message\n        return { motion_event, status: `Error processing motion event: ${error.message}` }\n    }\n}","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":280,"wires":[["de6ffd92c326ec36","fc3a52459c5c43d5"]]},{"id":"c1f8fbe25b3e63b0","type":"inject","z":"18c5eb19.0cae45","name":"","props":[{"p":"payload.data.entity_id","v":"binary_sensor.motion_1","vt":"str"},{"p":"payload.data.last_changed","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":170,"y":340,"wires":[["f9b48ce9ce5dd074"]]},{"id":"de6ffd92c326ec36","type":"debug","z":"18c5eb19.0cae45","name":"debug 65","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":640,"y":240,"wires":[]},{"id":"59378bee857e5c44","type":"server-state-changed","z":"18c5eb19.0cae45","name":"Motion Listener [ALL]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"binary_sensor.","entityIdType":"substring","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.state","propertyType":"msg","value":"","valueType":"entityState"},{"property":"payload.data","propertyType":"msg","value":"","valueType":"eventData"}],"x":120,"y":280,"wires":[["f9b48ce9ce5dd074"]]},{"id":"a946838b2420bbac","type":"comment","z":"18c5eb19.0cae45","name":"motion event example","info":"/*{\n    \"entity_id\": \"binary_sensor.door_bathroom\",\n    \"state\": \"on\",\n    \"attributes\": {\n        \"battery\": \"High\",\n        \"error\": \"No\",\n        \"rssi_peer\": 0,\n        \"rssi_device\": -59,\n        \"id\": \"LEQ1466850\",\n        \"interface\": \"wireless\",\n        \"friendly_name\": \"Homematic Türkontakt Bad\",\n        \"device_class\": \"opening\"\n    },\n    \"last_changed\": \"2020-03-21T17:21:44.840558+00:00\",\n    \"last_updated\": \"2020-03-21T17:21:44.840558+00:00\",\n    \"context\": {\n        \"id\": \"9227ef990e5d4eab8717acc192d8ca65\",\n        \"parent_id\": null,\n        \"user_id\": null\n    }\n}*/","x":720,"y":100,"wires":[]},{"id":"fc3a52459c5c43d5","type":"subflow:bd62b682.b42b48","z":"18c5eb19.0cae45","d":true,"name":"","env":[],"x":710,"y":280,"wires":[]},{"id":"63ca7399.9a148c","type":"server-state-changed","z":"157c7e47.982522","name":"Motion Lighting Zone Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.bedroom_motion_lighting_zone","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'bedside lamp' : 'light.table_lamp_3',\t    'all'           : 'light.bedroom_lights',\t    'custom'        : 'light.table_lamp_3'\t}","valueType":"jsonata"},{"property":"tempstate","propertyType":"global","value":"","valueType":"entityState"}],"x":160,"y":40,"wires":[["8d33faa78b314005"]]},{"id":"c6feb517.a1c368","type":"server-state-changed","z":"157c7e47.982522","name":"Motion Timeout Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.bedroom_motion_timeout","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":130,"y":160,"wires":[["ec03ed032099526c"]]},{"id":"ffc4a0f7.e84d4","type":"server-state-changed","z":"157c7e47.982522","name":"Hybrid Lighting Zone 1 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.bedroom_hybrid_lighting_zone_1","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'bedside lamps'     : 'light.table_lamp_3',\t    'table lamp'        : 'light.table_lamp_3',\t    'ceiling light'     : 'light.ceiling_lights',\t    'all'               : 'light.bedroom_lights'\t}","valueType":"jsonata"}],"x":150,"y":220,"wires":[["532f7e5e37530303"]]},{"id":"28e36f68.31b84","type":"server-state-changed","z":"157c7e47.982522","name":"Alarm Timeout Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.belcave_alarm_timeout","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":120,"y":940,"wires":[["c07ab77ff67aa4cc"]]},{"id":"e9282877.854ad8","type":"server-state-changed","z":"157c7e47.982522","name":"Occupancy Timeout Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.system_occupancy_timeout_seconds","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"system_occupancy_timeout","valueType":"str"}],"x":140,"y":400,"wires":[["568a1e66c1741d76"]]},{"id":"2df641c2.0aeb4e","type":"server-state-changed","z":"157c7e47.982522","name":"Climate Control UI Avg Temp Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.climate_control_temperature","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"belcave_avg_temp_ui","valueType":"str"}],"x":170,"y":580,"wires":[["ef0fa1f67175c641"]]},{"id":"b8810a56.87b5a8","type":"server-state-changed","z":"157c7e47.982522","name":"Climate Control UI Toggle Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_boolean.climate_control_toggle","entityIdType":"exact","outputInitially":true,"stateType":"habool","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"belcave_cc_ui_toggle","valueType":"str"}],"x":160,"y":460,"wires":[["03279f71cbdccadf"]]},{"id":"3292715b.923e0e","type":"server-state-changed","z":"157c7e47.982522","name":"Climate Control UI Operation Speed Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.climate_control_speed","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"belcave_cc_speed","valueType":"str"}],"x":190,"y":700,"wires":[["87a76f91decfee86"]]},{"id":"1c37e96c.3fcfe7","type":"server-state-changed","z":"157c7e47.982522","name":"Climate Control UI Operation Mode Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.climate_control_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"belcave_cc_mode","valueType":"str"}],"x":190,"y":640,"wires":[["c46ae26d65e19bbd"]]},{"id":"f956c16d.d3c82","type":"server-state-changed","z":"157c7e47.982522","name":"Average Temp Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sensor.average_belcave_temperature","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"belcave_realavgtemp","valueType":"str"}],"x":120,"y":760,"wires":[["e5f9a6b06fdfd4b7"]]},{"id":"24502d21.5e48b2","type":"server-state-changed","z":"157c7e47.982522","name":"Motion Lighting Mode Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.bedroom_motion_lighting_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'toggle'    : 'TOGGLE',\t    'dim'       : 'DIM',\t    'hybrid'    : 'HYBRID'\t}","valueType":"jsonata"}],"x":170,"y":100,"wires":[["acdca5ce3f9f1980"]]},{"id":"a8b21ca6.00f15","type":"server-state-changed","z":"157c7e47.982522","name":"Hybrid Lighting Zone 2 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.bedroom_hybrid_lighting_zone_2","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'spotlights'        : 'light.belcave_spotlights',\t    'bedside lamps'     : 'light.bedside_lamps',\t    'desk spotlights'   : 'light.desk_spotlights',\t    'closet spotlights' : 'light.closet_spotlights',\t    'all'               : 'light.belcave_lights'\t}","valueType":"jsonata"}],"x":150,"y":280,"wires":[["f1fe144f1c62938a"]]},{"id":"b186a011.61a0c","type":"server-state-changed","z":"157c7e47.982522","name":"Treacherous Activity Level Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.belcave_treacherous_activity_level","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":160,"y":880,"wires":[["13c0aff52281ebc5"]]},{"id":"ad900d923df8c794","type":"server-state-changed","z":"157c7e47.982522","name":"SK SSID Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sensor.sk_ssid","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"ssid_sk_home","valueType":"str"},{"property":"entities","propertyType":"msg","value":"{\t    \"SHD\": true,\t    \"SHD-5ghz\": true,\t    \"SHD-guest\": true,\t    \"Not Connected\": false,\t    \"default\": false\t}","valueType":"jsonata"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"}],"x":100,"y":1060,"wires":[["dc67faeecb2f5487","46d88954859c124b"]]},{"id":"dc67faeecb2f5487","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":1060,"wires":[[]]},{"id":"532f7e5e37530303","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":220,"wires":[[]]},{"id":"f1fe144f1c62938a","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":280,"wires":[[]]},{"id":"acdca5ce3f9f1980","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":100,"wires":[[]]},{"id":"8d33faa78b314005","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":40,"wires":[[]]},{"id":"7e5a877dc1e90ae5","type":"server-state-changed","z":"157c7e47.982522","name":"Average Humidity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sensor.average_belcave_humidity","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"belcave_realavghum","valueType":"str"}],"x":130,"y":820,"wires":[["af50526b39c11731"]]},{"id":"b5c30b890f787343","type":"server-state-changed","z":"157c7e47.982522","name":"Climate Control UI Toggle Updater [TEST]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_boolean.belcave_climate_control_cnfig_toggle","entityIdType":"exact","outputInitially":true,"stateType":"habool","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"belcave_cc_ui_toggle_test","valueType":"str"}],"x":180,"y":520,"wires":[["db76a1f3e8809b33"]]},{"id":"ec03ed032099526c","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":160,"wires":[[]]},{"id":"568a1e66c1741d76","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":400,"wires":[[]]},{"id":"c07ab77ff67aa4cc","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":940,"wires":[[]]},{"id":"13c0aff52281ebc5","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":880,"wires":[[]]},{"id":"af50526b39c11731","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":820,"wires":[[]]},{"id":"e5f9a6b06fdfd4b7","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":760,"wires":[[]]},{"id":"87a76f91decfee86","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":700,"wires":[[]]},{"id":"c46ae26d65e19bbd","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":640,"wires":[[]]},{"id":"ef0fa1f67175c641","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":580,"wires":[[]]},{"id":"db76a1f3e8809b33","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":520,"wires":[[]]},{"id":"03279f71cbdccadf","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":490,"y":460,"wires":[[]]},{"id":"689134ba5c7d8398","type":"server-state-changed","z":"157c7e47.982522","name":"Event Poller [Average Lux Level]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_text.event_poller","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"updater_frequency","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"global_id","propertyType":"msg","value":"bedroom_illuminance_average","valueType":"str"},{"property":"data","propertyType":"msg","value":"{\t    \"area\": \"bedroom\",\t    \"type\": [\t        \"sensor\"\t    ],\t    \"key\": [\t        \"illuminance\",\t        \"lux\"\t    ],\t    \"exclude\": [\t        \"stairs\"\t    ],\t    \"attributes\": [\t    ],\t    \"strict\": {\t        \"area\": false,\t        \"type\": false,\t        \"key\": false,\t        \"exclude\": true\t    }\t}","valueType":"jsonata"},{"property":"config.precision","propertyType":"msg","value":"1","valueType":"num"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"}],"x":150,"y":1120,"wires":[[],[]]},{"id":"22a008e6a35eb8bf","type":"subflow:6afebbe9d3799590","z":"157c7e47.982522","name":"","x":450,"y":1200,"wires":[["9d3755de613b4610"]]},{"id":"9d3755de613b4610","type":"subflow:94e56685e6cdc113","z":"157c7e47.982522","name":"","x":630,"y":1200,"wires":[["2dc9400a94757643"]]},{"id":"2dc9400a94757643","type":"subflow:5c17ae8417803497","z":"157c7e47.982522","name":"","x":850,"y":1200,"wires":[[]]},{"id":"46d88954859c124b","type":"debug","z":"157c7e47.982522","name":"debug 85","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":450,"y":1020,"wires":[]},{"id":"9c14bc17008cd0e3","type":"subflow:20b25024f4366686","z":"157c7e47.982522","name":"","env":[{"name":"POLL_RATE","value":"input_number.updater_frequency","type":"str"}],"x":290,"y":1200,"wires":[["22a008e6a35eb8bf"]]},{"id":"46f9d98ffc3464b2","type":"inject","z":"157c7e47.982522","d":true,"name":"Trigger on start","props":[{"p":"global_id","v":"bedroom_illuminance_average","vt":"str"},{"p":"data","v":"{\"area\":\"bedroom\",\"type\":[\"sensor\"],\"key\":[\"illuminance\",\"lux\"],\"exclude\":[\"stairs\"],\"attributes\":[],\"strict\":{\"area\":false,\"type\":false,\"key\":false,\"exclude\":true}}","vt":"json"},{"p":"config.precision","v":"1","vt":"num"},{"p":"debug_flag","v":"true","vt":"bool"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","x":120,"y":1200,"wires":[["9c14bc17008cd0e3"]]},{"id":"5641b52b.5b9dec","type":"server-state-changed","z":"4d26cf31.78e22","name":"Motion Lighting Zone Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.belcave_stairs_motion_lighting_zone","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'wall light'       : 'light.bc_stairs_local'\t}","valueType":"jsonata"}],"x":160,"y":100,"wires":[["b047db44646e8f96"]]},{"id":"8d5c08e1.af8b68","type":"server-state-changed","z":"4d26cf31.78e22","name":"Motion Lighting Mode Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.belcave_stairs_motion_lighting_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'toggle'    : 'TOGGLE',\t    'dim'       : 'DIM',\t    'hybrid'    : 'HYBRID'\t}","valueType":"jsonata"}],"x":170,"y":40,"wires":[["02f653c7684a709a"]]},{"id":"af791216.abc8b","type":"server-state-changed","z":"4d26cf31.78e22","name":"Motion Timeout Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.belcave_stairs_motion_timeout","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":130,"y":160,"wires":[["ac7333571d65d87a"]]},{"id":"02f653c7684a709a","type":"subflow:5c17ae8417803497","z":"4d26cf31.78e22","name":"","x":450,"y":40,"wires":[[]]},{"id":"b047db44646e8f96","type":"subflow:5c17ae8417803497","z":"4d26cf31.78e22","name":"","x":450,"y":100,"wires":[[]]},{"id":"ac7333571d65d87a","type":"subflow:5c17ae8417803497","z":"4d26cf31.78e22","name":"","x":450,"y":160,"wires":[[]]},{"id":"ef282715.e39a08","type":"server-state-changed","z":"fdf692b.ea1847","name":"Motion Lighting Zone Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.foyer_motion_lighting_zone","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'ceiling light'    : 'light.ceiling_light_1',\t    'all'        : 'light.foyer_lights'\t}","valueType":"jsonata"}],"x":160,"y":40,"wires":[["8e668fecd5d8ab6b"]]},{"id":"97753e16.0004f","type":"server-state-changed","z":"fdf692b.ea1847","name":"Motion Timeout Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.foyer_motion_timeout","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":130,"y":100,"wires":[["b5342dc05494441a"]]},{"id":"f94ffbda.5ddee8","type":"server-state-changed","z":"fdf692b.ea1847","name":"Motion Lighting Mode Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.foyer_motion_lighting_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'toggle'    : 'TOGGLE',\t    'dim'       : 'DIM',\t    'hybrid'    : 'HYBRID'\t}","valueType":"jsonata"}],"x":170,"y":160,"wires":[["36090e20ce621c21"]]},{"id":"36090e20ce621c21","type":"subflow:5c17ae8417803497","z":"fdf692b.ea1847","name":"","x":450,"y":160,"wires":[[]]},{"id":"8e668fecd5d8ab6b","type":"subflow:5c17ae8417803497","z":"fdf692b.ea1847","name":"","x":450,"y":40,"wires":[[]]},{"id":"b5342dc05494441a","type":"subflow:5c17ae8417803497","z":"fdf692b.ea1847","name":"","x":450,"y":100,"wires":[[]]},{"id":"cd4c401e5c8ad766","type":"subflow:6afebbe9d3799590","z":"fdf692b.ea1847","name":"","x":410,"y":220,"wires":[["80f807676f6b4ebf"]]},{"id":"20deb770153d7166","type":"server-state-changed","z":"fdf692b.ea1847","name":"Event Poller [Average Lux Level]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_text.event_poller","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"updater_frequency","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.entity_id","propertyType":"msg","value":"sensor.motion_3_illuminance","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"foyer_illuminance_average","valueType":"str"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"},{"property":"config.precision","propertyType":"msg","value":"1","valueType":"num"},{"property":"data","propertyType":"msg","value":"{\t    \"area\": \"motion_3\",\t    \"type\": [\t        \"sensor\"\t    ],\t    \"key\": [\t        \"illuminance\",\t        \"lux\"\t    ],\t    \"exclude\": [\t\t    ],\t    \"attributes\": [\t    ],\t    \"strict\": {\t        \"area\": false,\t        \"type\": false,\t        \"key\": false,\t        \"exclude\": true\t    }\t}","valueType":"jsonata"}],"x":150,"y":220,"wires":[["cd4c401e5c8ad766"],[]]},{"id":"dbb32ce996cbc815","type":"subflow:5c17ae8417803497","z":"fdf692b.ea1847","name":"","x":810,"y":220,"wires":[[]]},{"id":"80f807676f6b4ebf","type":"subflow:94e56685e6cdc113","z":"fdf692b.ea1847","name":"","x":590,"y":220,"wires":[["dbb32ce996cbc815"]]},{"id":"f3e4a341.9144b","type":"server-state-changed","z":"e50c41f0.a70c7","name":"Motion Lighting Zone Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.living_room_motion_lighting_zone","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'ikea lamps'       : 'light.ikea_lamps',\t    'tv lamps'         : 'light.ikea_lamps',\t    'all'              : 'light.living_room_lights',\t    'ceiling lights'   : 'light.living_room_ceiling_lights'\t}","valueType":"jsonata"}],"x":160,"y":40,"wires":[["8095291b2fc49b59"]]},{"id":"607e781d.0930a8","type":"server-state-changed","z":"e50c41f0.a70c7","name":"Motion Timeout Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.living_room_motion_timeout","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":130,"y":100,"wires":[["ed7a7af23079be45"]]},{"id":"44577fe3.80f84","type":"server-state-changed","z":"e50c41f0.a70c7","name":"Motion Lighting Mode Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.living_room_motion_lighting_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'toggle'    : 'TOGGLE',\t    'dim'       : 'DIM',\t    'hybrid'    : 'HYBRID'\t}","valueType":"jsonata"}],"x":170,"y":160,"wires":[["a00460ef74a83b2b"]]},{"id":"af2bcab.4adc738","type":"server-state-changed","z":"e50c41f0.a70c7","name":"Hybrid Lighting Zone 1 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.living_room_hybrid_lighting_zone_1","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'ikea lamps'       : 'light.ikea_lamps',\t    'tv lamps'         : 'light.ikea_lamps',\t    'all'              : 'light.living_room_lights',\t    'ceiling lights'   : 'light.living_room_ceiling_lights'\t}","valueType":"jsonata"}],"x":150,"y":220,"wires":[["a8641f793e5da739"]]},{"id":"53c30936.273cd8","type":"server-state-changed","z":"e50c41f0.a70c7","name":"Hybrid Lighting Zone 2 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.living_room_hybrid_lighting_zone_2","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    'ikea lamps'       : 'light.ikea_lamps',\t    'tv lamps'         : 'light.ikea_lamps',\t    'all'              : 'light.living_room_lights',\t    'ceiling lights'   : 'light.living_room_ceiling_lights'\t}","valueType":"jsonata"}],"x":150,"y":280,"wires":[["d54cdffb44c13703"]]},{"id":"8095291b2fc49b59","type":"subflow:5c17ae8417803497","z":"e50c41f0.a70c7","name":"","x":450,"y":40,"wires":[[]]},{"id":"a00460ef74a83b2b","type":"subflow:5c17ae8417803497","z":"e50c41f0.a70c7","name":"","x":450,"y":160,"wires":[[]]},{"id":"a8641f793e5da739","type":"subflow:5c17ae8417803497","z":"e50c41f0.a70c7","name":"","x":450,"y":220,"wires":[[]]},{"id":"d54cdffb44c13703","type":"subflow:5c17ae8417803497","z":"e50c41f0.a70c7","name":"","x":450,"y":280,"wires":[[]]},{"id":"ed7a7af23079be45","type":"subflow:5c17ae8417803497","z":"e50c41f0.a70c7","name":"","x":450,"y":100,"wires":[[]]},{"id":"53627f18ea858e4d","type":"server-state-changed","z":"e50c41f0.a70c7","name":"TV State Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"media_player.samsung_7_series_50","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"living_room_tv_on_off","valueType":"str"}],"x":100,"y":340,"wires":[["9f7613f50f977e32"]]},{"id":"9f7613f50f977e32","type":"subflow:5c17ae8417803497","z":"e50c41f0.a70c7","name":"","x":450,"y":340,"wires":[[]]},{"id":"1b89089a894ec632","type":"server-state-changed","z":"371ea8374a4f4987","name":"Lighting Schedule Start Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_datetime.vestibule_scheduled_lighting_start","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"num","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":150,"y":40,"wires":[["b5897642fc1866b6"]]},{"id":"06121f91a7a02953","type":"server-state-changed","z":"371ea8374a4f4987","name":"Lighting Schedule End Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_datetime.vestibule_scheduled_lighting_end","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":150,"y":100,"wires":[["f1feb8978e77855e"]]},{"id":"422bbf3e4fdc519d","type":"server-state-changed","z":"371ea8374a4f4987","name":"Lighting Zone Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.vestibule_lighting_zone","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    \"vestibule lights\": \"light.vestibule_lights\",\t    \"belcave spotlights\": \"light.belcave_spotlights\",\t    \"entryway light\": \"light.entryway_light_1_local\"\t}","valueType":"jsonata"}],"x":140,"y":160,"wires":[["98b91c57c419140d"]]},{"id":"4d984afa30a06afa","type":"server-state-changed","z":"371ea8374a4f4987","name":"Lighting Mode Entity Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.vestibule_lighting_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    \"manual\": \"MANUAL\",\t    \"auto\": \"AUTO\",\t    \"automatic\": \"AUTO\"\t}","valueType":"jsonata"}],"x":140,"y":220,"wires":[["fff70def90afa10b","4152912b26be7c80"]]},{"id":"98b91c57c419140d","type":"subflow:5c17ae8417803497","z":"371ea8374a4f4987","name":"","x":410,"y":160,"wires":[[]]},{"id":"fff70def90afa10b","type":"subflow:5c17ae8417803497","z":"371ea8374a4f4987","name":"","x":410,"y":220,"wires":[[]]},{"id":"4152912b26be7c80","type":"debug","z":"371ea8374a4f4987","name":"lighting mode","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":380,"y":280,"wires":[]},{"id":"b5897642fc1866b6","type":"subflow:5c17ae8417803497","z":"371ea8374a4f4987","name":"","x":410,"y":40,"wires":[[]]},{"id":"f1feb8978e77855e","type":"subflow:5c17ae8417803497","z":"371ea8374a4f4987","name":"","x":410,"y":100,"wires":[[]]},{"id":"76437a1eae85b460","type":"server-state-changed","z":"6518ba14391e63a7","name":"Scheduled Lighting Start Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_datetime.entryway_scheduled_lighting_start","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"num","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":150,"y":40,"wires":[["c0c5876a958b8579"]]},{"id":"8a11f1bd9af52a29","type":"server-state-changed","z":"6518ba14391e63a7","name":"Scheduled Lighting End Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_datetime.entryway_scheduled_lighting_end","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"}],"x":150,"y":100,"wires":[["1c26f7e8cd494027"]]},{"id":"5665ef99291eabbb","type":"server-state-changed","z":"6518ba14391e63a7","name":"Scheduled Lighting Zone Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.entryway_scheduled_lighting_zone","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    \"vestibule entrance\": \"light.vestibule_entrance_lights\",\t    \"passage downlights\": \"light.passage_downlights\",\t    \"entryway lights\"   : \"light.entryway_lights\"\t}","valueType":"jsonata"}],"x":160,"y":160,"wires":[["378ae60180fb8085"]]},{"id":"11ba43c31cabdae7","type":"server-state-changed","z":"6518ba14391e63a7","name":"Scheduled Lighting Mode Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_select.entryway_scheduled_lighting_mode","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"entities","propertyType":"msg","value":"{\t    \"scheduled\": \"SCHEDULED\",\t    \"dusk-to-dawn\": \"DUSK-TO-DAWN\"\t}","valueType":"jsonata"}],"x":160,"y":220,"wires":[["03d54fdd2cb29646"]]},{"id":"378ae60180fb8085","type":"subflow:5c17ae8417803497","z":"6518ba14391e63a7","name":"","x":430,"y":160,"wires":[[]]},{"id":"03d54fdd2cb29646","type":"subflow:5c17ae8417803497","z":"6518ba14391e63a7","name":"","x":430,"y":220,"wires":[[]]},{"id":"c0c5876a958b8579","type":"subflow:5c17ae8417803497","z":"6518ba14391e63a7","name":"","x":430,"y":40,"wires":[[]]},{"id":"1c26f7e8cd494027","type":"subflow:5c17ae8417803497","z":"6518ba14391e63a7","name":"","x":430,"y":100,"wires":[[]]},{"id":"4659506590da2521","type":"function","z":"6518ba14391e63a7","name":"function 5","func":"const CONTEXT_PATH = {\n    SYSTEM: `system`,\n    ENTITIES: `${this.SYSTEM}.entities`,\n    AREAS: `${this.SYSTEM}.areas`,\n    DEVICES: `${this.SYSTEM}.devices`,\n    DEPLOYED: \"last_deployed\"\n}\nconst SYSTEM = \"system\";\nconst ENTITIES_OBJECT_PATH = `${SYSTEM}.entities`;\nconst AREAS_OBJECT_PATH = `${SYSTEM}.entities`;\nconst DEVICES_OBJECT_PATH = `${SYSTEM}.entities`;\nconst DEPLOYED_OBJECT_PATH = `${SYSTEM}.entities`;\n//env.set(\"SYSTEM_REPOSITORY\", \"system\");\nnode.warn(env.get(\"SYSTEM_REPOSITORY\"));\nnode.warn(process.env.SYSTEM_REPOSITORY);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":400,"wires":[["13dcbd3eaf88ac93"]]},{"id":"eb14e5a19c06e349","type":"inject","z":"6518ba14391e63a7","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":180,"y":400,"wires":[["4659506590da2521"]]},{"id":"13dcbd3eaf88ac93","type":"debug","z":"6518ba14391e63a7","name":"debug 67","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":470,"y":400,"wires":[]},{"id":"43850b9195040d92","type":"subflow:6afebbe9d3799590","z":"7f5fb06e40e6d248","name":"","x":490,"y":40,"wires":[["e2c8d18c5f704951","bc5d66645651cc37"]]},{"id":"e2c8d18c5f704951","type":"subflow:01b24619b55abe60","z":"7f5fb06e40e6d248","name":"","x":690,"y":40,"wires":[["209ecdaa2e42431d"]]},{"id":"22ad09615b353425","type":"inject","z":"7f5fb06e40e6d248","name":"Bedroom Humidity","props":[{"p":"delay","v":"system.updater_frequency","vt":"str"},{"p":"data","v":"{\"area\":\"bedroom\",\"type\":[\"sensor\",\"climate\"],\"key\":[\"humidity\"],\"exclude\":[\"average\"],\"attributes\":[\"current_humidity\"],\"strict\":{\"area\":false,\"type\":false,\"key\":false,\"exclude\":true}}","vt":"json"},{"p":"entity_id","v":"input_number.average_bedroom_humidity","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"0.1","topic":"","x":130,"y":100,"wires":[["f27cf2fac130c35b"]]},{"id":"1015ef596d01e031","type":"subflow:6afebbe9d3799590","z":"7f5fb06e40e6d248","name":"","x":490,"y":100,"wires":[["2d980f75c336c745"]]},{"id":"cb95b60793f2efa0","type":"inject","z":"7f5fb06e40e6d248","name":"System Temperature","props":[{"p":"delay","v":"system.updater_frequency","vt":"str"},{"p":"data","v":"{\"area\":\"\",\"domain\":[\"sensor\",\"climate\"],\"key\":[\"temp\",\"thermostat\"],\"exclude\":[\"average\",\"battery\"],\"attributes\":[\"current_temperature\"],\"strict\":{\"area\":false,\"domain\":false,\"key\":false,\"exclude\":false}}","vt":"json"},{"p":"entity_id","v":"input_number.average_home_temperature","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"0.1","topic":"","x":140,"y":160,"wires":[["558c463c407d9c9b"]]},{"id":"0dfd75d663aa4ca9","type":"subflow:6afebbe9d3799590","z":"7f5fb06e40e6d248","name":"","x":490,"y":160,"wires":[["2ab925fb09584801"]]},{"id":"2ab925fb09584801","type":"subflow:01b24619b55abe60","z":"7f5fb06e40e6d248","name":"","x":690,"y":160,"wires":[["b253d54a1cd97d66"]]},{"id":"392611c5cc9665c6","type":"inject","z":"7f5fb06e40e6d248","name":"Bedroom Temperature","props":[{"p":"delay","v":"system.updater_frequency","vt":"str"},{"p":"data","v":"{\"area\":\"bedroom\",\"type\":[\"sensor\",\"climate\"],\"key\":[\"temp\",\"thermostat\"],\"exclude\":[\"average\",\"battery\"],\"attributes\":[\"current_temperature\"],\"strict\":{\"area\":false,\"type\":false,\"key\":false,\"exclude\":true}}","vt":"json"},{"p":"entity_id","v":"input_number.average_bedroom_temperature","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"0.1","topic":"","x":140,"y":40,"wires":[["f7032d1eb687668e"]]},{"id":"2d980f75c336c745","type":"subflow:01b24619b55abe60","z":"7f5fb06e40e6d248","name":"","x":690,"y":100,"wires":[["70914e80ded1fdce"]]},{"id":"558c463c407d9c9b","type":"subflow:20b25024f4366686","z":"7f5fb06e40e6d248","name":"","x":330,"y":160,"wires":[["0dfd75d663aa4ca9"]]},{"id":"f27cf2fac130c35b","type":"subflow:20b25024f4366686","z":"7f5fb06e40e6d248","name":"","x":330,"y":100,"wires":[["1015ef596d01e031"]]},{"id":"f7032d1eb687668e","type":"subflow:20b25024f4366686","z":"7f5fb06e40e6d248","name":"","x":330,"y":40,"wires":[["43850b9195040d92","04d3f0d6d38112e8"]]},{"id":"84d1d3d2.0c27b","type":"function","z":"7f5fb06e40e6d248","d":true,"name":"Calculate Time Elapsed","func":"var lastDeploy = global.get(\"system.last_deployed\") || 0;\nvar now = new Date().getTime();\nvar elapsed = now - lastDeploy;\n\nmsg.payload = elapsed;\nnode.warn(elapsed);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":480,"wires":[["ad123b02.a9d7e8"]]},{"id":"ad123b02.a9d7e8","type":"debug","z":"7f5fb06e40e6d248","d":true,"name":"Time Elapsed","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1260,"y":480,"wires":[]},{"id":"b9900a1ebb7a2a52","type":"function","z":"7f5fb06e40e6d248","name":"function 3","func":"const testt = \"\";\n\nif (testt) {\n    node.warn(\"TRUE\");\n}\nif (!testt){\n    node.warn(\"NOT TRUE\");\n}\nglobal.set(\"system.yadig\", \"yezurr\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":500,"y":680,"wires":[[]]},{"id":"efc127be9179c687","type":"inject","z":"7f5fb06e40e6d248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":290,"y":680,"wires":[["b9900a1ebb7a2a52"]]},{"id":"9fa4e7c3fd9d09ab","type":"function","z":"7f5fb06e40e6d248","name":"Calculate Average 2.0","func":"//Average Value Updater\n// This routine updates an average (temp/hum) helper entity for\n// an area based on an incoming array of sensor entities\n\n//Sensor Variables\nvar entities            = msg.payload;\nvar avgVal              = 0;\nvar available_sensors   = 0;\nvar unavailable_sensors = [];\nvar entity_areas        = (typeof msg.data[\"area\"] === 'undefined') ? \"\" : msg.data[\"area\"];\nvar entity_attributes   = (typeof msg.data[\"attributes\"] === 'undefined') ? \"\" : msg.data[\"attributes\"];\n//var strict = (typeof msg.data[\"strict\"] === 'undefined') ? \"\" : msg.data[\"strict\"];\n\n// Check if multiple items for each parameter has been passed and cast to array to avoid code duplication\nif (!Array.isArray(entity_attributes)) entity_attributes    = [entity_attributes];\nif (!Array.isArray(entity_areas)) entity_areas              = [entity_areas];\n\n// add up values\nfor (let i = 0; i < entities.length; i++) {\n\n    var val = entities[i]['state'];\n\n    // Ensure val is a number / available\n    if (val != 'unavailable' && !isNaN(val)) {\n        //node.warn(\"included: \" + val);\n        avgVal += parseFloat(val);\n        available_sensors ++;\n\n    } else {\n\n        // Check attributes\n        val = attributeFilter(entities[i]['attributes'], entity_attributes);\n\n        if (val){\n            //node.warn(\"attribute val found:\" + val);\n            avgVal += parseFloat(val);\n            available_sensors++;\n        }\n        // bad entity? Log\n        else {\n            unavailable_sensors[-1] = entities[i];\n        }\n    }\n}\nnode.warn(`available sensors: ${available_sensors}`);\n//calculate average to 1dp\navgVal = Math.round( (avgVal / available_sensors) * 10) / 10;\n\n// Display Debug/Output log\n//node.warn(\"avgVal: \" + avgVal + \" available_sensors: \" + available_sensors + \" unavailable_sensors: \" + unavailable_sensors.length + \" global_id: \" + msg.global_id);\n// Output unavailable sensors if any\nif (unavailable_sensors.length != 0) {\n    node.warn(unavailable_sensors);\n}\nmsg.payload = avgVal;\nreturn msg;\n\n// Function to search for attribte(s) within an entity\nfunction attributeFilter(attributes, comparators) {\n\n   //loop through each potential attribute key\n    for (let i = 0; i < comparators.length; i++) {\n\n        // Check whether a key exists in attributes and return the value\n        if (attributes != \"\" && comparators[i] in attributes) return attributes[comparators[i]];\n\n    }\n    //otherwise return false\n    return false;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":400,"wires":[[]]},{"id":"b253d54a1cd97d66","type":"api-call-service","z":"7f5fb06e40e6d248","name":"Update Average Value","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"set_value","areaId":[],"deviceId":[],"entityId":["{{entity_id}}"],"data":"{\t\"value\": payload\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":920,"y":160,"wires":[[]]},{"id":"70914e80ded1fdce","type":"api-call-service","z":"7f5fb06e40e6d248","name":"Update Average Value","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"set_value","areaId":[],"deviceId":[],"entityId":["{{entity_id}}"],"data":"{\t\"value\": payload\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":920,"y":100,"wires":[[]]},{"id":"209ecdaa2e42431d","type":"api-call-service","z":"7f5fb06e40e6d248","name":"Update Average Value","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"set_value","areaId":[],"deviceId":[],"entityId":["{{entity_id}}"],"data":"{\t\"value\": payload\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":920,"y":40,"wires":[[]]},{"id":"bc5d66645651cc37","type":"debug","z":"7f5fb06e40e6d248","name":"debug 71","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":740,"y":340,"wires":[]},{"id":"de018b156b32dfbc","type":"batch","z":"7f5fb06e40e6d248","name":"","mode":"count","count":10,"overlap":0,"interval":10,"allowEmptySequence":false,"topics":[],"x":190,"y":300,"wires":[[]]},{"id":"04d3f0d6d38112e8","type":"debug","z":"7f5fb06e40e6d248","name":"debug 72","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":420,"y":320,"wires":[]},{"id":"9396aaf347574093","type":"api-call-service","z":"7f5fb06e40e6d248","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"","service":"","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":400,"y":600,"wires":[[]]},{"id":"6e4b27028d384f3b","type":"function","z":"7f5fb06e40e6d248","name":"Function Template","func":"// Function Template (v2)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Value\n// msg.global_id            : Global Context identifier\n// ******************************************************************\n\n/*** START ***/\n//const utils = global.get(env.get(\"UTIL\") || \"util\");\n//const EntityRegistry = global.get(\"EntityRegistry\");\n//const Entity = global.get(\"domain/models/Entity\");\nconst Entities = context.global.system.domain.models.Entities\nconst result = Entities.getEntity(msg.payload);\nnode.warn(result);\n\ncontext.global.system[\"bitch\"] = \"pls\";\ncontext.global.system.why = \"man\";\nnode.warn(context.global.system.why);\nnode.warn(global.get(\"why\"));\nglobal.set(\"system\", context.global.system);\nglobal.set(\"system.igetit\", \"aha\");\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":460,"wires":[["1f6ef9ee7278642c"]]},{"id":"8094cebdc9e51f3f","type":"inject","z":"7f5fb06e40e6d248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"binary_sensor.motion_1","payloadType":"str","x":160,"y":460,"wires":[["6e4b27028d384f3b"]]},{"id":"1f6ef9ee7278642c","type":"debug","z":"7f5fb06e40e6d248","name":"debug 73","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":540,"y":460,"wires":[]},{"id":"9c44bda2eba8bc7a","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Get Person(s)","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"person.","entityIdType":"substring","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"}],"x":90,"y":640,"wires":[["6035513d2088441e"]]},{"id":"6035513d2088441e","type":"function","z":"83226b2a5875b142","d":true,"name":"User Presence Updater","func":"// User Presence Updater\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : Person object\n//\n// -*- OUTPUTS -*-\n// msg.payload              : PresenceService object\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst personPresenceAdapter = system.adapters.personPresenceAdapter;\n\nlet status;\n\ntry {\n    status = \"Updating presence...\";\n    node.status({ fill: \"yellow\", text: status });\n    \n    // Return the updated presence object\n    msg.payload = personPresenceAdapter(msg.payload);\n\n    // Set node status to indicate successful operation\n    status = \"Presence updated\";\n    node.status({ fill: \"green\", text: status });\n\n} catch (error) {\n\n    // Log the error\n    node.warn(`[ERROR]: ${error}`);\n\n    // Set node status to indicate an error occurred\n    status = \"Error updating presence object\";\n    node.status({ fill: \"red\", text: status });\n\n    // Pass the error along\n    throw error;\n}\n\nreturn msg;\n/*** END ***/","outputs":1,"timeout":"","noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\nnode.status({ fill: \"yellow\", shape: \"dot\", text: \"Starting...\" });","finalize":"","libs":[],"x":310,"y":640,"wires":[[]]},{"id":"d0a8f5d915335653","type":"inject","z":"83226b2a5875b142","d":true,"name":"Get Persons","props":[{"p":"delay","v":"history_processing_rate","vt":"global"},{"p":"data","v":"{\"area\":\"\",\"type\":[\"person\"],\"key\":[],\"exclude\":[],\"attributes\":[\"latitude\",\"longitude\"],\"strict\":{\"area\":false,\"type\":false,\"key\":false,\"exclude\":true}}","vt":"json"},{"p":"global_id","v":"average_home_location","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":730,"y":880,"wires":[["54f25eec0ae3a39d"]]},{"id":"54f25eec0ae3a39d","type":"subflow:6afebbe9d3799590","z":"83226b2a5875b142","d":true,"name":"","x":910,"y":880,"wires":[["0bb4025cf32781b4"]]},{"id":"0bb4025cf32781b4","type":"debug","z":"83226b2a5875b142","d":true,"name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1070,"y":880,"wires":[]},{"id":"87031e6e06cfeb3f","type":"inject","z":"83226b2a5875b142","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":900,"wires":[["5d216f891b5b77af"]]},{"id":"5d216f891b5b77af","type":"api-current-state","z":"83226b2a5875b142","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"zone.home","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":290,"y":900,"wires":[["68eeaae3dfc2ba47"]]},{"id":"68eeaae3dfc2ba47","type":"debug","z":"83226b2a5875b142","name":"debug 47","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":900,"wires":[]},{"id":"94c3c05a1461be4f","type":"debug","z":"83226b2a5875b142","name":"debug 48","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":1080,"wires":[]},{"id":"388786ada6dab4b6","type":"server-state-changed","z":"83226b2a5875b142","name":"","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"zone.home","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":150,"y":1080,"wires":[["94c3c05a1461be4f"]]},{"id":"7a774cbfdefa8dba","type":"subflow:a444bbb042f71f91","z":"83226b2a5875b142","d":true,"name":"","x":630,"y":480,"wires":[["2fb54bef9e348d87"]]},{"id":"6a71f39d0852f0a2","type":"subflow:20b25024f4366686","z":"83226b2a5875b142","d":true,"name":"","x":410,"y":440,"wires":[["7a774cbfdefa8dba"]]},{"id":"8913260d31196492","type":"subflow:db47d8fece13615c","z":"83226b2a5875b142","d":true,"name":"","x":410,"y":520,"wires":[["7a774cbfdefa8dba"]]},{"id":"2fb54bef9e348d87","type":"subflow:d45c7673c797b311","z":"83226b2a5875b142","d":true,"name":"","x":850,"y":480,"wires":[["a590e0ca436698b1"]]},{"id":"52dcd6c74ca57490","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Occupancy Timeout Updated [System]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.system_occupancy_timeout_seconds","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"delay","propertyType":"msg","value":"system.occupancy.timeout","valueType":"str"},{"property":"payload.areas","propertyType":"msg","value":"system.areas","valueType":"str"},{"property":"payload.entities","propertyType":"msg","value":"system.entities","valueType":"str"},{"property":"payload.occupancy","propertyType":"msg","value":"system.occupancy","valueType":"str"},{"property":"payload.states","propertyType":"msg","value":"homeassistant.homeAssistant.states","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"system.occupancy","valueType":"str"}],"x":170,"y":440,"wires":[["6a71f39d0852f0a2"]]},{"id":"d0239e612055cf89","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Motion Detected [ALL]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"binary_sensor.","entityIdType":"substring","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.state","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"payload.areas","propertyType":"msg","value":"system.areas","valueType":"str"},{"property":"payload.entities","propertyType":"msg","value":"system.entities","valueType":"str"},{"property":"payload.occupancy","propertyType":"msg","value":"system.occupancy","valueType":"str"},{"property":"payload.states","propertyType":"msg","value":"homeassistant.homeAssistant.states","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"system.occupancy","valueType":"str"}],"x":120,"y":520,"wires":[["8913260d31196492","bea81d226f21b910"],[]]},{"id":"a590e0ca436698b1","type":"change","z":"83226b2a5875b142","d":true,"name":"Set global_id","rules":[{"t":"set","p":"payload.occupancy","pt":"msg","to":"system.occupancy","tot":"str"},{"t":"set","p":"payload.presence","pt":"msg","to":"system.presence","tot":"str"},{"t":"set","p":"global_id","pt":"msg","to":"system.occupancy.mode","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1030,"y":480,"wires":[["db00119395096f0b"]]},{"id":"db00119395096f0b","type":"subflow:ac18d08ecf3b428c","z":"83226b2a5875b142","d":true,"name":"","x":1240,"y":480,"wires":[["9ad4251fea7795eb"]]},{"id":"9ad4251fea7795eb","type":"subflow:d45c7673c797b311","z":"83226b2a5875b142","d":true,"name":"","x":1470,"y":480,"wires":[["558f833edcd75d3b"]]},{"id":"558f833edcd75d3b","type":"api-call-service","z":"83226b2a5875b142","d":true,"name":"Set Occupancy Mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_select","service":"select_option","areaId":[],"deviceId":[],"entityId":["input_select.system_occupancy_mode"],"data":"{\"option\":\"{{payload}}\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1680,"y":480,"wires":[[]]},{"id":"0b61ae577432721e","type":"subflow:a444bbb042f71f91","z":"83226b2a5875b142","name":"","x":710,"y":1640,"wires":[["ecd16cc4cddd2824","f8ea0c929736fb12"]]},{"id":"6246678c05087f85","type":"subflow:20b25024f4366686","z":"83226b2a5875b142","name":"","x":290,"y":1640,"wires":[["458bf215d6e69dcd","0b61ae577432721e","267b11f5478a3137"]]},{"id":"7b5c309a4ffb98e5","type":"subflow:db47d8fece13615c","z":"83226b2a5875b142","name":"","x":370,"y":1700,"wires":[["20066a66ced10352","0b61ae577432721e"]]},{"id":"458bf215d6e69dcd","type":"change","z":"83226b2a5875b142","d":true,"name":"Set payload","rules":[{"t":"set","p":"delay","pt":"msg","to":"system.occupancy.timeout","tot":"global"},{"t":"set","p":"payload.occupancy","pt":"msg","to":"system.occupancy","tot":"global"},{"t":"set","p":"payload.areas","pt":"msg","to":"system.areas","tot":"global"},{"t":"set","p":"payload.entities","pt":"msg","to":"system.entities","tot":"global"},{"t":"set","p":"payload.states","pt":"msg","to":"homeassistant.homeAssistant.states","tot":"global"},{"t":"set","p":"payload.occupancy_timeout","pt":"msg","to":"system.occupancy.timeout","tot":"global"},{"t":"set","p":"global_id","pt":"msg","to":"system.occupancy","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":450,"y":1640,"wires":[["0b61ae577432721e","267b11f5478a3137"]]},{"id":"ecd16cc4cddd2824","type":"subflow:d45c7673c797b311","z":"83226b2a5875b142","name":"","x":930,"y":1640,"wires":[["0559d2b8e4e76c54","c74c6244213c1a23"]]},{"id":"f8ea0c929736fb12","type":"debug","z":"83226b2a5875b142","name":"debug 61","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":920,"y":1560,"wires":[]},{"id":"5de84f5f247ea2d9","type":"inject","z":"83226b2a5875b142","d":true,"name":"Inject on Start","props":[{"p":"delay","v":"system.occupancy.timeout","vt":"global"},{"p":"payload.occupancy","v":"system.occupancy","vt":"global"},{"p":"payload.areas","v":"system.areas","vt":"global"},{"p":"payload.entities","v":"system.entities","vt":"global"},{"p":"payload.states","v":"homeassistant.homeAssistant.states","vt":"global"},{"p":"payload.occupancy_timeout","v":"system.occupancy.timeout","vt":"global"},{"p":"global_id","v":"system.occupancy","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","x":460,"y":1580,"wires":[["6246678c05087f85"]]},{"id":"3e8a7749735e606a","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Occupancy Timeout Updated [System]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.system_occupancy_timeout_seconds","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"delay","propertyType":"msg","value":"system.occupancy.timeout","valueType":"global"},{"property":"payload.occupancy","propertyType":"msg","value":"system.occupancy","valueType":"global"},{"property":"payload.areas","propertyType":"msg","value":"system.areas","valueType":"global"},{"property":"payload.entities","propertyType":"msg","value":"system.entities","valueType":"global"},{"property":"payload.states","propertyType":"msg","value":"homeassistant.homeAssistant.states","valueType":"global"},{"property":"payload.occupancy_timeout","propertyType":"msg","value":"system.occupancy.timeout","valueType":"global"},{"property":"global_id","propertyType":"msg","value":"system.occupancy","valueType":"str"}],"x":150,"y":2000,"wires":[["6246678c05087f85"]]},{"id":"18ce54d7e451bbe3","type":"inject","z":"83226b2a5875b142","d":true,"name":"Inject on Start","props":[{"p":"delay","v":"system.occupancy.timeout","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"0.1","topic":"","x":120,"y":2040,"wires":[["6246678c05087f85"]]},{"id":"4c4354c2f5b07a88","type":"inject","z":"83226b2a5875b142","d":true,"name":"Inject on Start","props":[{"p":"delay","v":"system.occupancy.timeout","vt":"str"},{"p":"payload.areas","v":"system.areas","vt":"str"},{"p":"payload.entities","v":"system.entities","vt":"str"},{"p":"payload.occupancy","v":"system.occupancy","vt":"str"},{"p":"payload.states","v":"homeassistant.homeAssistant.states","vt":"str"},{"p":"global_id","v":"system.occupancy","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","x":120,"y":2100,"wires":[["6246678c05087f85"]]},{"id":"1efb9481ebe87cbe","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Occupancy Timeout Updated [System]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.system_occupancy_timeout_seconds","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"delay","propertyType":"msg","value":"system.occupancy.timeout","valueType":"str"},{"property":"payload.areas","propertyType":"msg","value":"system.areas","valueType":"str"},{"property":"payload.entities","propertyType":"msg","value":"system.entities","valueType":"str"},{"property":"payload.occupancy","propertyType":"msg","value":"system.occupancy","valueType":"str"},{"property":"payload.states","propertyType":"msg","value":"homeassistant.homeAssistant.states","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"system.occupancy","valueType":"str"}],"x":170,"y":1580,"wires":[["6246678c05087f85"]]},{"id":"267b11f5478a3137","type":"debug","z":"83226b2a5875b142","name":"debug 60","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":680,"y":1560,"wires":[]},{"id":"e496df8016719a80","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Motion Detected [ALL]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"binary_sensor.","entityIdType":"substring","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.state","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"payload.areas","propertyType":"msg","value":"system.areas","valueType":"str"},{"property":"payload.entities","propertyType":"msg","value":"system.entities","valueType":"str"},{"property":"payload.occupancy","propertyType":"msg","value":"system.occupancy","valueType":"str"},{"property":"payload.states","propertyType":"msg","value":"homeassistant.homeAssistant.states","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"system.occupancy","valueType":"str"}],"x":120,"y":1700,"wires":[["7b5c309a4ffb98e5"],["1196a2be46034544"]]},{"id":"20066a66ced10352","type":"debug","z":"83226b2a5875b142","name":"debug 37","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":540,"y":1700,"wires":[]},{"id":"0559d2b8e4e76c54","type":"change","z":"83226b2a5875b142","d":true,"name":"set global_id","rules":[{"t":"set","p":"global_id","pt":"msg","to":"system.occupancy.mode","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1110,"y":1640,"wires":[["daf0c818b6aab46f"]]},{"id":"c74c6244213c1a23","type":"change","z":"83226b2a5875b142","name":"Set global_id","rules":[{"t":"set","p":"payload.occupancy","pt":"msg","to":"system.occupancy","tot":"str"},{"t":"set","p":"payload.presence","pt":"msg","to":"system.presence","tot":"str"},{"t":"set","p":"global_id","pt":"msg","to":"system.occupancy.mode","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1110,"y":1700,"wires":[["daf0c818b6aab46f"]]},{"id":"1196a2be46034544","type":"debug","z":"83226b2a5875b142","name":"debug 36","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":320,"y":1820,"wires":[]},{"id":"daf0c818b6aab46f","type":"subflow:ac18d08ecf3b428c","z":"83226b2a5875b142","name":"","x":1320,"y":1640,"wires":[["652a08184f35d45c"]]},{"id":"652a08184f35d45c","type":"subflow:d45c7673c797b311","z":"83226b2a5875b142","name":"","x":1550,"y":1640,"wires":[["ca18cb29a32e5c0e"]]},{"id":"ca18cb29a32e5c0e","type":"api-call-service","z":"83226b2a5875b142","name":"Set Occupancy Mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_select","service":"select_option","areaId":[],"deviceId":[],"entityId":["input_select.system_occupancy_mode"],"data":"{\"option\":\"{{payload}}\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1760,"y":1640,"wires":[["2d92bca6e0f1850d"]]},{"id":"2d92bca6e0f1850d","type":"debug","z":"83226b2a5875b142","name":"debug 53","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1280,"y":1840,"wires":[]},{"id":"6660225a220b628a","type":"function","z":"83226b2a5875b142","name":"Motion Sensor Occupancy Adapter","func":"// Motion Sensor Occupancy Adapter\nconst utils = global.get(\"utils\");\n\n// Retrieve the motion sensor port from global context\nconst motionSensorPort = global.get(\"utils.motionSensorPort\");\n\nutils.motionDetectionHandler(msg.payload.data.new_state)\n.then(result => {\n    if (result) {\n        // Handle the result here\n        node.warn(result.status);\n        //node.warn(result.motion_event);\n        // You can do further processing if needed\n        msg.area = result.motion_event.location;\n        msg.motion = msg.payload.data;\n        msg.payload = result;\n        node.send(msg);\n    } else {\n        // Handle null result\n        node.warn(`[ERROR]: Result is null`);\n    }\n    })\n    .catch(error => {\n        // Handle any errors\n        node.warn(`[ERROR]: ${error.message}`);\n        node.status(utils.status(error.message, { fill: \"red\" }).payload);\n    });\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":300,"y":1040,"wires":[[]]},{"id":"f5e7cba109606b82","type":"inject","z":"83226b2a5875b142","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":690,"y":960,"wires":[["e8f76946ebcca28d"]]},{"id":"e8f76946ebcca28d","type":"api-call-service","z":"83226b2a5875b142","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"template","service":"reload","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":860,"y":960,"wires":[["a1e29b69da410afa"]]},{"id":"a1e29b69da410afa","type":"debug","z":"83226b2a5875b142","name":"debug 69","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1030,"y":960,"wires":[]},{"id":"b5de38d8a0bea2f8","type":"api-current-state","z":"83226b2a5875b142","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.motion_1_temperature","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":730,"y":1240,"wires":[["a0835bd2bdb947da"]]},{"id":"6d56806660d33e2b","type":"inject","z":"83226b2a5875b142","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":420,"y":1240,"wires":[["b5de38d8a0bea2f8","195d07a5761d1661"]]},{"id":"a0835bd2bdb947da","type":"debug","z":"83226b2a5875b142","name":"debug 70","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":980,"y":1240,"wires":[]},{"id":"195d07a5761d1661","type":"api-current-state","z":"83226b2a5875b142","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sun.sun","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":660,"y":1200,"wires":[["a0835bd2bdb947da"]]},{"id":"bea81d226f21b910","type":"debug","z":"83226b2a5875b142","d":true,"name":"debug 75","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":360,"y":560,"wires":[]},{"id":"3a4ebbba97a3d277","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Occupancy Timeout Updated [System]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.system_occupancy_timeout_seconds","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"delay","propertyType":"msg","value":"system.occupancy.timeout","valueType":"str"},{"property":"payload.areas","propertyType":"msg","value":"system.areas","valueType":"str"},{"property":"payload.entities","propertyType":"msg","value":"system.entities","valueType":"str"},{"property":"payload.occupancy","propertyType":"msg","value":"system.occupancy","valueType":"str"},{"property":"payload.states","propertyType":"msg","value":"homeassistant.homeAssistant.states","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"system.occupancy","valueType":"str"}],"x":170,"y":60,"wires":[[]]},{"id":"1cc49a028e8152b8","type":"subflow:db47d8fece13615c","z":"83226b2a5875b142","d":true,"name":"","x":410,"y":140,"wires":[["76f192a8083775f6","552c9a0494bc52bb"]]},{"id":"624c6d7f42f0e6fb","type":"server-state-changed","z":"83226b2a5875b142","d":true,"name":"Motion Detected [ALL]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"binary_sensor.","entityIdType":"substring","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"delay2","propertyType":"msg","value":"input_number.occupancy_timeout","valueType":"str"}],"x":120,"y":140,"wires":[["1cc49a028e8152b8","3f13b46e2e3f0be4","1bf3c13c4fef6b99"]]},{"id":"3f13b46e2e3f0be4","type":"debug","z":"83226b2a5875b142","d":true,"name":"debug 76","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":360,"y":200,"wires":[]},{"id":"606dcaf1cdbc5242","type":"api-call-service","z":"83226b2a5875b142","d":true,"name":"Set Occupancy Mode","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_select","service":"select_option","areaId":[],"deviceId":[],"entityId":["input_select.system_occupancy_mode"],"data":"{\"option\":\"{{payload}}\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1120,"y":60,"wires":[[]]},{"id":"76f192a8083775f6","type":"subflow:ac18d08ecf3b428c","z":"83226b2a5875b142","d":true,"name":"","x":660,"y":140,"wires":[["7371231843188ca1"]]},{"id":"7371231843188ca1","type":"debug","z":"83226b2a5875b142","d":true,"name":"debug 78","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":860,"y":140,"wires":[]},{"id":"2a5d7055767ce5d9","type":"inject","z":"83226b2a5875b142","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":90,"y":360,"wires":[["87c5d6202a817ea0"]]},{"id":"87c5d6202a817ea0","type":"api-current-state","z":"83226b2a5875b142","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"person.sk","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":290,"y":360,"wires":[["17b384cedd8703f2"]]},{"id":"17b384cedd8703f2","type":"debug","z":"83226b2a5875b142","name":"debug 80","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":490,"y":360,"wires":[]},{"id":"552c9a0494bc52bb","type":"debug","z":"83226b2a5875b142","d":true,"name":"debug 81","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":740,"y":240,"wires":[]},{"id":"1bf3c13c4fef6b99","type":"function","z":"83226b2a5875b142","d":true,"name":"Occupancy State Updater","func":"const repository = context.global[env.get(\"MODULE_ID\")];\nconst utils = repository.util.common;\nconst { getState, exists } = repository.util.common;\nconst { Entities, TimeoutConverter } = repository.domain.models;\nconst OccupancyService = repository.domain.services.OccupancyService;\nconst binarySensorOccupancyAdapter = repository.adapters.binarySensorOccupancyAdapter;\n\nconst OCCUPANCY_TIMEOUT_ENTITY_ID = env.get(\"OCCUPANCY_TIMEOUT_ENTITY_ID\") || \"input_number.occupancy_timeout\";\n\nconst event_data = msg.payload;\nlet status, area_id, states;\n\nif (!exists(event_data)) {\n    status = `Missing event data (msg.payload): [${msg.payload}]`;\n    return [null, utils.status(status, \"red\")];\n}\n\ntry {\n    area_id = Entities.getEntity(event_data.entity_id).area_id;\n    states = global.get(\"homeassistant.homeAssistant.states\");\n    const entity_registry_array = Entities.entity_registry.data.entities;\n\n    if (area_id) {\n        // Check for area occupancy timeout helper\n        const area_occupancy_timeout_entity = entity_registry_array.filter(entity => {\n            return (\n                entity.entity_id.includes(Entities.stripDomain(OCCUPANCY_TIMEOUT_ENTITY_ID)) &&\n                entity.entity_id.includes(Entities.getDomain(OCCUPANCY_TIMEOUT_ENTITY_ID)) &&\n                entity.area_id == area_id\n            );\n        })[0];\n\n        if (area_occupancy_timeout_entity) {\n            //node.warn(`[area_occupancy_timeout_entity]: ${area_occupancy_timeout_entity.entity_id}`);\n            const timeout = getState(area_occupancy_timeout_entity.entity_id, states).state;\n            if (timeout) OccupancyService.setTimeout(TimeoutConverter.convertToMilliseconds(timeout, area_occupancy_timeout_entity.unit_of_measurement), area_id);\n        } else {\n            node.warn(`[WARN]: ${OCCUPANCY_TIMEOUT_ENTITY_ID} not found for ${area_id}, skipping.`);\n        }\n    }\n    // Check for occupancy timeout helper\n    const occupancy_timeout_entity = entity_registry_array.filter(entity => {\n        return (\n            entity.entity_id.includes(Entities.stripDomain(OCCUPANCY_TIMEOUT_ENTITY_ID)) &&\n            entity.entity_id.includes(Entities.getDomain(OCCUPANCY_TIMEOUT_ENTITY_ID)) &&\n            entity.area_id == null\n        );\n    })[0];\n\n    if (occupancy_timeout_entity) {\n        //node.warn(`[occupancy_timeout_entity]: ${occupancy_timeout_entity.entity_id}`);\n        const timeout = getState(occupancy_timeout_entity.entity_id, states).state;\n        if (timeout) OccupancyService.setTimeout(TimeoutConverter.convertToMilliseconds(timeout, occupancy_timeout_entity.unit_of_measurement));\n    } else {\n        node.warn(`[WARN]: ${OCCUPANCY_TIMEOUT_ENTITY_ID} not found, skipping.`);\n    }\n\n    // Allow for override with msg.delay\n    if (exists(msg.delay)) OccupancyService.setTimeout(msg.delay);\n\n} catch (error) {\n    status = `[ERROR]: ${error}`;\n    node.warn(status);\n    return [null, utils.status(status, \"red\")];\n}\n\ntry {\n    node.send([null, utils.status(`Updating Occupancy for [${area_id}]...`, \"yellow\")]);\n    msg.payload = binarySensorOccupancyAdapter(event_data);\n} catch (error) {\n    status = `[ERROR] (binarySensorOccupancyAdapter): ${error}`;\n    return [null, utils.status(status, \"red\")];\n}\n\nreturn ([msg, utils.status(`Occupancy updated for [${area_id}]`)]);","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":280,"wires":[["76f192a8083775f6"],["a8803f0e685f84ba"]]},{"id":"a8803f0e685f84ba","type":"debug","z":"83226b2a5875b142","d":true,"name":"debug 82","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":720,"y":300,"wires":[]},{"id":"10233284.6110cd","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights DIM","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{\t    \"brightness_pct\": 1\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1110,"y":600,"wires":[[]]},{"id":"4c36070c.dc2b68","type":"inject","z":"1f80867f.2f3f9a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"light.landing_lights","payloadType":"str","x":940,"y":600,"wires":[["10233284.6110cd"]]},{"id":"5f621e22.1028","type":"server-state-changed","z":"1f80867f.2f3f9a","d":true,"name":"Motion Listener","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"switch.belcave_motion","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"area","propertyType":"msg","value":"belcave","valueType":"str"},{"property":"motion","propertyType":"msg","value":"","valueType":"entityState"}],"x":100,"y":320,"wires":[["259e77fe.647438"]]},{"id":"259e77fe.647438","type":"function","z":"1f80867f.2f3f9a","name":"Motion Lighting Mode Function","func":"// Motion Lighting Mode Function\n// Returns the zone entity id(s) for lights to turn on/off\n//\n// Required globals/helper entities\n// area_motion_lighting_mode\n// area_motion_lighting_zone\n// area_motion_timeout\n//\n// Mode specific globals/helper entities\n// area_hybrid_lighting_zone_1\n// area_hybrid_lighting_zone_2\n//\n//\n// Function Variables\nvar area                = msg.area;\nvar motion              = msg.motion;\nvar motionLightingMode  = global.get(area +\"_motion_lighting_mode\");\n//\nnewMsg      = getZone(area, motionLightingMode);\nnewMsg.mode = motionLightingMode;\nnode.warn(\"motion: \"+ motion);\nnode.warn(\"motionLightingMode: \"+ motionLightingMode);\n//\nif (motion == \"off\"){\n    newMsg.delay = global.get(area +\"_motion_timeout\");\n    node.warn(\"newMsg:\");\n    node.warn(newMsg);\n    return [null, newMsg];\n}\nnode.warn(\"newMsg:\");\nnewMsg.reset = true;\nnode.warn(newMsg);\nreturn [newMsg, null];\n//END//\nfunction getZone (area, mode){\n    // Mode Switch\n    switch(mode) {\n      case \"TOGGLE\",\"DIM\":\n        //\n        return motionZoneToggle(area);\n      case \"HYBRID\":\n        //\n        return motionZoneHybrid(area);\n      default:\n        // Not developed yet? Default to TOGGLE\n        return motionZoneToggle(area);\n    }\n}\n//\n// TOGGLE Lighting Function\n//\nfunction motionZoneToggle (area){\n  var motionLightingZone  = global.get(area +\"_motion_lighting_zone\");\n  //\n  node.warn(\"motionLightingZone: \"+ motionLightingZone);\n  //\n  newMsg        = { payload : motionLightingZone };\n  newMsg.area   = area;\n  newMsg.mode   = motionLightingMode;\n  return newMsg;\n}\n//\n// HYBRID Lighting Function\n//\nfunction motionZoneHybrid (area){\n  var hybridLightingZone1 = global.get(area +\"_hybrid_lighting_zone_1\");\n  var hybridLightingZone2 = global.get(area +\"_hybrid_lighting_zone_2\");\n  //\n  node.warn(\"hybridLightingZone1: \"+ hybridLightingZone1);\n  node.warn(\"hybridLightingZone2: \"+ hybridLightingZone2);\n  //var payload = hybridLightingZone1 +','+ hybridLightingZone2;\n  //node.warn(\"payload: \"+ payload);\n  //\n  newMsg            = { payload1 : hybridLightingZone1 };\n  newMsg.payload2   = hybridLightingZone2;\n  newMsg.area       = area;\n  return newMsg;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":320,"wires":[["f4d55f09.e35f2"],["3caa3a5.fffcec6"]]},{"id":"f4d55f09.e35f2","type":"switch","z":"1f80867f.2f3f9a","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"false","repair":false,"outputs":3,"x":660,"y":200,"wires":[["e5c2e225.d5072","476cc743.827f28"],["e5c2e225.d5072","88af7454.795168"],["e5c2e225.d5072","8409fa98.105288","dcbfb5a0.55ba68"]]},{"id":"3caa3a5.fffcec6","type":"switch","z":"1f80867f.2f3f9a","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"false","repair":false,"outputs":3,"x":660,"y":420,"wires":[["71db9053.6a0a8","9e809868.2b55d8"],["71db9053.6a0a8","4e1e5b43.3c2b94"],["71db9053.6a0a8","9e809868.2b55d8","93c31b4.3bf95e8"]]},{"id":"e5c2e225.d5072","type":"debug","z":"1f80867f.2f3f9a","d":true,"name":"ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":630,"y":40,"wires":[]},{"id":"476cc743.827f28","type":"api-current-state","z":"1f80867f.2f3f9a","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1170,"y":140,"wires":[["a275e9cb.0ccb68"],["4a6ab7c2.fc09a8"]]},{"id":"88af7454.795168","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights ON [BRIGHT]","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{\t    \"brightness_pct\": 100\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1200,"y":200,"wires":[["4a6ab7c2.fc09a8"]]},{"id":"8409fa98.105288","type":"api-current-state","z":"1f80867f.2f3f9a","name":"Lights OFF 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1180,"y":260,"wires":[["6de4630c.88adcc"],["4a6ab7c2.fc09a8"]]},{"id":"dcbfb5a0.55ba68","type":"api-current-state","z":"1f80867f.2f3f9a","name":"Lights OFF 2?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload2}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1180,"y":320,"wires":[["bc59fd37.f21a4"],["4a6ab7c2.fc09a8"]]},{"id":"71db9053.6a0a8","type":"debug","z":"1f80867f.2f3f9a","d":true,"name":"OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":650,"y":300,"wires":[]},{"id":"9e809868.2b55d8","type":"delay","z":"1f80867f.2f3f9a","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":1240,"y":420,"wires":[["c76bf9f8.f58c98"]]},{"id":"4e1e5b43.3c2b94","type":"api-current-state","z":"1f80867f.2f3f9a","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":890,"y":420,"wires":[["4ca8093a.df57d8"],[]]},{"id":"93c31b4.3bf95e8","type":"api-current-state","z":"1f80867f.2f3f9a","d":true,"name":"Lights ON 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":890,"y":460,"wires":[["779d910f.609d4"],[]]},{"id":"a275e9cb.0ccb68","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1340,"y":140,"wires":[["4a6ab7c2.fc09a8"]]},{"id":"4a6ab7c2.fc09a8","type":"change","z":"1f80867f.2f3f9a","name":"CLEAR Timeout(s)","rules":[{"t":"set","p":"reset","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":1810,"y":220,"wires":[["740f018a.7e536","9e809868.2b55d8","385cbb17.37d8d4"]],"info":"Better to do it at the end for lag"},{"id":"6de4630c.88adcc","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights ON 1","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload1}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1350,"y":260,"wires":[["4a6ab7c2.fc09a8"]]},{"id":"bc59fd37.f21a4","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights ON 2","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload2}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"str"}],"queue":"none","x":1350,"y":320,"wires":[["4a6ab7c2.fc09a8"]]},{"id":"4ca8093a.df57d8","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights DIM","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{\t    \"brightness_pct\": 1\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1050,"y":420,"wires":[["9e809868.2b55d8"]]},{"id":"779d910f.609d4","type":"api-call-service","z":"1f80867f.2f3f9a","d":true,"name":"Lights OFF 1","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload1}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"belcave_hybrid_lighting_zone_2","valueType":"msg"}],"queue":"none","x":1050,"y":460,"wires":[["9e809868.2b55d8"]]},{"id":"c76bf9f8.f58c98","type":"switch","z":"1f80867f.2f3f9a","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":1460,"y":420,"wires":[["54e14e32.10c3c"],["54e14e32.10c3c"],["80eab9d9.2e0aa8"]]},{"id":"740f018a.7e536","type":"debug","z":"1f80867f.2f3f9a","d":true,"name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2010,"y":220,"wires":[]},{"id":"385cbb17.37d8d4","type":"delay","z":"1f80867f.2f3f9a","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":2300,"y":440,"wires":[["f4eefc85.bab01"]]},{"id":"54e14e32.10c3c","type":"api-current-state","z":"1f80867f.2f3f9a","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1690,"y":400,"wires":[["8bfe4893.fa0b98"],[]]},{"id":"80eab9d9.2e0aa8","type":"api-current-state","z":"1f80867f.2f3f9a","name":"Lights ON 1?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload1}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1690,"y":440,"wires":[["8bfe4893.fa0b98"],[]]},{"id":"36d3d1c6.79c43e","type":"switch","z":"1f80867f.2f3f9a","name":"GET Motion Lighting Mode","property":"mode","propertyType":"msg","rules":[{"t":"eq","v":"TOGGLE","vt":"str"},{"t":"eq","v":"DIM","vt":"str"},{"t":"eq","v":"HYBRID","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":2080,"y":400,"wires":[[],[],["385cbb17.37d8d4"]]},{"id":"f4eefc85.bab01","type":"api-current-state","z":"1f80867f.2f3f9a","name":"Lights ON 2?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload2}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2470,"y":440,"wires":[["6d666f4.870429"],[]]},{"id":"8bfe4893.fa0b98","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1870,"y":400,"wires":[["36d3d1c6.79c43e"]]},{"id":"6d666f4.870429","type":"api-call-service","z":"1f80867f.2f3f9a","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":2630,"y":440,"wires":[[]]},{"id":"821c244706344302","type":"inject","z":"62000abd.1eee34","d":true,"name":"Vestibule","props":[{"p":"zone","v":"vestibule","vt":"str"},{"p":"delay","v":"updater_frequency","vt":"global"},{"p":"mode","v":"vestibule_lighting_mode","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"30","topic":"","x":100,"y":60,"wires":[["a8b8beb56cd01398"]]},{"id":"f1c14415e3f64a9c","type":"subflow:c4f2363dbcb3bd29","z":"62000abd.1eee34","d":true,"name":"","x":450,"y":60,"wires":[[]]},{"id":"a8b8beb56cd01398","type":"trigger","z":"62000abd.1eee34","d":true,"name":"Trigger Delay","op1":"","op2":"","op1type":"pay","op2type":"pay","duration":"-250","extend":false,"overrideDelay":true,"units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":260,"y":60,"wires":[["f1c14415e3f64a9c","bde8e5a68812b30e"]]},{"id":"bde8e5a68812b30e","type":"debug","z":"62000abd.1eee34","d":true,"name":"RESENT","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":440,"y":140,"wires":[]},{"id":"bd8c3ec43aa3b168","type":"server-state-changed","z":"62000abd.1eee34","name":"Event Poller [Entryway]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_text.event_poller","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"updater_frequency","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"mode","propertyType":"msg","value":"vestibule_lighting_mode","valueType":"global"},{"property":"zone","propertyType":"msg","value":"vestibule","valueType":"str"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"}],"x":120,"y":220,"wires":[["7d68a29f2cb96903"],[]]},{"id":"7d68a29f2cb96903","type":"subflow:c4f2363dbcb3bd29","z":"62000abd.1eee34","name":"","x":350,"y":220,"wires":[[]]},{"id":"32aeebac642af5f5","type":"server-state-changed","z":"62000abd.1eee34","d":true,"name":"Sun State [Entryway]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sun.sun","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"config.global_lux","propertyType":"msg","value":"landing_illuminance_average","valueType":"str"},{"property":"config.global_lux_mean","propertyType":"msg","value":"landing_illuminance_mean","valueType":"str"},{"property":"delay","propertyType":"msg","value":"updater_frequency","valueType":"global"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"},{"property":"light","propertyType":"msg","value":"light.entryway_light_2_local","valueType":"str"}],"x":110,"y":360,"wires":[["766a0206cf7d8e81"]]},{"id":"b0ceda50b25f0329","type":"debug","z":"62000abd.1eee34","d":true,"name":"LIGHTS ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":400,"wires":[]},{"id":"74cbc265916a9705","type":"debug","z":"62000abd.1eee34","d":true,"name":"LIGHTS OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":320,"wires":[]},{"id":"766a0206cf7d8e81","type":"subflow:2802501265df2123","z":"62000abd.1eee34","d":true,"name":"","x":300,"y":360,"wires":[["37ce27b506f682fe"],["036820375b66dcbf"]]},{"id":"036820375b66dcbf","type":"api-call-service","z":"62000abd.1eee34","d":true,"name":"Lights ON","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":500,"y":400,"wires":[["b0ceda50b25f0329"]]},{"id":"37ce27b506f682fe","type":"api-call-service","z":"62000abd.1eee34","d":true,"name":"Lights OFF","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":510,"y":320,"wires":[["74cbc265916a9705"]]},{"id":"31b4d2c8872d4c84","type":"server-state-changed","z":"673489a3e7db6c2c","name":"Utility Door Listener","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"binary_sensor.utility_room_door_on_off","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[],"x":110,"y":100,"wires":[["d8deb9bd4ebc68ff"],["a331e45fc9e0605a"]]},{"id":"d8deb9bd4ebc68ff","type":"api-current-state","z":"673489a3e7db6c2c","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"light.utility_room_light_local","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":330,"y":60,"wires":[["65acbe1c765cf519"],[]]},{"id":"a331e45fc9e0605a","type":"api-current-state","z":"673489a3e7db6c2c","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"light.utility_room_light_local","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":330,"y":120,"wires":[["dc45825c92bb5f9d"],[]]},{"id":"65acbe1c765cf519","type":"api-call-service","z":"673489a3e7db6c2c","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.utility_room_light_local"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"queue":"none","x":480,"y":40,"wires":[["6330c35b8930586b"]]},{"id":"dc45825c92bb5f9d","type":"api-call-service","z":"673489a3e7db6c2c","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["light.utility_room_light_local"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":490,"y":100,"wires":[["7844853a9e2d5469"]]},{"id":"6330c35b8930586b","type":"debug","z":"673489a3e7db6c2c","name":"LIGHTS ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":650,"y":40,"wires":[]},{"id":"7844853a9e2d5469","type":"debug","z":"673489a3e7db6c2c","name":"LIGHTS OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":650,"y":100,"wires":[]},{"id":"09b399cb21f281ba","type":"server-state-changed","z":"673489a3e7db6c2c","d":true,"name":"Front Door Listener","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"binary_sensor.front_door_on_off","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"landing_motion_zone","valueType":"global"},{"property":"delay","propertyType":"msg","value":"landing_motion_timeout","valueType":"global"}],"x":110,"y":280,"wires":[["e70bd7dcf441e550"],["2f50a980e78dc805"]]},{"id":"e70bd7dcf441e550","type":"api-current-state","z":"673489a3e7db6c2c","name":"Lights OFF?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"off","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":330,"y":240,"wires":[["cbbe73f2e3e0e312"],["2f50a980e78dc805"]]},{"id":"2f50a980e78dc805","type":"delay","z":"673489a3e7db6c2c","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":560,"y":280,"wires":[["633d976c52c4e7ae"]]},{"id":"cbbe73f2e3e0e312","type":"api-call-service","z":"673489a3e7db6c2c","name":"Lights ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"queue":"none","x":480,"y":200,"wires":[["2f50a980e78dc805"]]},{"id":"633d976c52c4e7ae","type":"api-current-state","z":"673489a3e7db6c2c","name":"Lights ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"{{payload}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"triggerId"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":750,"y":280,"wires":[["636183ad85e01dc7"],[]]},{"id":"636183ad85e01dc7","type":"api-call-service","z":"673489a3e7db6c2c","name":"Lights OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{payload}}"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":930,"y":280,"wires":[[]]},{"id":"75490e5d.7c8f6","type":"server-state-changed","z":"3821ffdc.e3f2d","name":"[Bedroom] Blanket ON/OFF","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.smart_plug_10","entityIdType":"exact","outputInitially":false,"stateType":"habool","ifState":"true","ifStateType":"bool","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[],"x":160,"y":100,"wires":[["497ff86e.3c94b8"],["9f373f46.6477b"]]},{"id":"497ff86e.3c94b8","type":"api-current-state","z":"3821ffdc.e3f2d","name":"Get Electric Blanket Timeout","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_select.bedroom_electric_blanket_timeout","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":420,"y":60,"wires":[["a71cdce3.01c4b"]]},{"id":"9f373f46.6477b","type":"debug","z":"3821ffdc.e3f2d","name":"Blanket OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":370,"y":120,"wires":[]},{"id":"a71cdce3.01c4b","type":"function","z":"3821ffdc.e3f2d","name":"Time Conversion Function","func":"//Time Conversion Routine\n//This routine takes strings such as \"5 Minutes\" and converts into \n//a usable DT format (ms for now, might add more options later)\n\n// Function Variables\nvar timeoutStr      = msg.payload.split(\" \");\nvar timeoutValue    = parseInt(timeoutStr[0], 10);\nvar timeoutUnit     = getUnit(timeoutStr[1]);\n\n// Function Variables\nvar formattedTimeout    = 0;\n//var newMsg = { payload: msg.payload.length };\n\n// Conversion\nswitch(timeoutUnit) {\n  case \"S\":\n    // Seconds\n    formattedTimeout = timeoutValue * 1000;\n    break;\n  case \"M\":\n    // Minutes\n    formattedTimeout = timeoutValue * 60000;\n    break;\n  case \"H\":\n    // Hours\n    formattedTimeout = timeoutValue * 3600000;\n    break;\n  default:\n    // ERROR, LOG?\n    node.warn(\"Invalid Unit : \"+ timeoutUnit);\n}\nnode.warn(\"timeoutStr: \"+ timeoutStr);\nnode.warn(\"timeoutValue: \"+ timeoutValue);\nnode.warn(\"timeoutUnit: \"+ timeoutUnit);\n\nnewMsg = { delay : formattedTimeout }\nnewMsg.payload = \"STOP\";\n//flow.set(\"currentaction\", ccAction);\nreturn newMsg;\n\n// Unit Retrieval Function\nfunction getUnit (unit){\n  var units = \n  {\n    'seconds'   : 'S',\n    'second'    : 'S',\n    'minutes'   : 'M',\n    'minute'    : 'M',\n    'hours'     : 'H',\n    'hour'      : 'H'\n  };\n  return (units[unit.toLowerCase()] || \"\");\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":680,"y":60,"wires":[["f24aa594.d06968"]]},{"id":"f24aa594.d06968","type":"delay","z":"3821ffdc.e3f2d","name":"Wait for Timeout","pauseType":"delayv","timeout":"0","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":900,"y":60,"wires":[["a5a095e2.47eb68"]]},{"id":"a5a095e2.47eb68","type":"api-current-state","z":"3821ffdc.e3f2d","name":"IS Blanket ON?","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"true","halt_if_type":"bool","halt_if_compare":"is","entity_id":"switch.smart_plug_10","state_type":"habool","blockInputOverrides":false,"outputProperties":[],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1080,"y":60,"wires":[["f23e7f4b.b68b4"],[]]},{"id":"f23e7f4b.b68b4","type":"api-call-service","z":"3821ffdc.e3f2d","name":"Turn Off Blanket","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.smart_plug_10"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1260,"y":60,"wires":[[]]},{"id":"97601a82.f30bf8","type":"server-state-changed","z":"956a8048.b6a6","d":true,"name":"IKEA Smart Button 1 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_text.ikea_smart_button_1_sp","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"ikea_smart_button_1_single_press","valueType":"str"}],"x":140,"y":2180,"wires":[["6402937fcf9eca5c"]]},{"id":"cff462c2.b6c02","type":"server-state-changed","z":"956a8048.b6a6","d":true,"name":"IKEA Smart Button 2 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_text.ikea_smart_button_2_sp","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"global_id","propertyType":"msg","value":"ikea_smart_button_2_single_press","valueType":"str"}],"x":140,"y":2300,"wires":[["c8e4e9a62d03e78d"]]},{"id":"de5fab25.94be58","type":"server-state-changed","z":"956a8048.b6a6","d":true,"name":"IKEA Smart Button 1 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_text.ikea_smart_button_1_lphstart","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":140,"y":2240,"wires":[["523cb417.1778ec"]]},{"id":"8757e943.2dd8f8","type":"debug","z":"956a8048.b6a6","d":true,"name":"IKEA Smart Button 1 Updater [DEBUG]","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":660,"y":2240,"wires":[]},{"id":"523cb417.1778ec","type":"function","z":"956a8048.b6a6","d":true,"name":"","func":"//Format Button Service Calls\nvar serviceParts        = msg.payload.split(\",\");\nnode.warn(\"serviceParts: \"+ serviceParts);\nvar data = { \n    entity_id       : serviceParts[2], \n    brightness_pct  : 100,\n    color_name      : 'white'\n};\nvar payload   = { \n    domain  : serviceParts[0],\n    service : serviceParts[1],\n    data    : data\n};\nvar newMsg  = { payload : payload};\nnode.warn(\"newMsg: \"+ newMsg);\nglobal.set('ikea_smart_button_1_LPHSTART', newMsg.payload);\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":2240,"wires":[["8757e943.2dd8f8"]]},{"id":"871c1ea5.67368","type":"server-state-changed","z":"956a8048.b6a6","d":true,"name":"IKEA Smart Button 2 Updater","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_text.ikea_smart_button_2_lphstart","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":140,"y":2360,"wires":[["90c1e91f.834f58"]]},{"id":"9857f09b.56094","type":"debug","z":"956a8048.b6a6","d":true,"name":"IKEA Smart Button 2 Updater [DEBUG]","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":660,"y":2360,"wires":[]},{"id":"90c1e91f.834f58","type":"function","z":"956a8048.b6a6","d":true,"name":"","func":"//Format Button Service Calls\nvar serviceParts        = msg.payload.split(\",\");\nnode.warn(\"serviceParts: \"+ serviceParts);\nvar data = { \n    entity_id       : serviceParts[2], \n    brightness_pct  : 100,\n    color_name      : 'white'\n};\nvar payload   = { \n    domain  : serviceParts[0],\n    service : serviceParts[1],\n    data    : data\n};\nvar newMsg  = { payload : payload};\nnode.warn(\"newMsg: \"+ newMsg);\nglobal.set('ikea_smart_button_2_LPHSTART', newMsg.payload);\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":2360,"wires":[["9857f09b.56094"]]},{"id":"92e874dc2e3aeb1c","type":"server-events","z":"956a8048.b6a6","name":"[WATCH] Belcave Spotlights","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"ios.action_fired","eventData":"{\"actionName\":\"Belcave Spotlights\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":140,"y":180,"wires":[["cb6512893d52f99f"]]},{"id":"db0e6121437e7897","type":"debug","z":"956a8048.b6a6","name":"EVENT TRACKER","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":180,"wires":[]},{"id":"cb6512893d52f99f","type":"api-call-service","z":"956a8048.b6a6","name":"Toggle Belcave Spotlights","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["light.belcave_spotlights"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":390,"y":180,"wires":[["db0e6121437e7897"]]},{"id":"a08ca6c1ed98521a","type":"server-events","z":"956a8048.b6a6","name":"[WATCH] Ghost Protocol","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"ios.action_fired","eventData":"{\"actionName\":\"Ghost Protocol\",\"triggerSource\":\"watch\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":130,"y":260,"wires":[["f0ad7ab73b82b7f8"]]},{"id":"c819f51dfba43c7c","type":"debug","z":"956a8048.b6a6","name":"EVENT TRACKER","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":260,"wires":[]},{"id":"f0ad7ab73b82b7f8","type":"api-call-service","z":"956a8048.b6a6","name":"Toggle Motion Detection","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"toggle","areaId":[],"deviceId":[],"entityId":["switch.belcave_motion","input_boolean.belcave_presence_detection_toggle","input_boolean.belcave_stairs_presence_detection_toggle","input_boolean.kitchen_presence_detection_toggle","input_boolean.landing_presence_detection_toggle","input_boolean.living_room_presence_detection_toggle"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":390,"y":260,"wires":[["c819f51dfba43c7c"]]},{"id":"d7dd6583f25448c7","type":"server-events","z":"956a8048.b6a6","name":"IOS Events","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"ios.action_fired","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":90,"y":100,"wires":[["5d3033aa19b94664"]]},{"id":"5d3033aa19b94664","type":"debug","z":"956a8048.b6a6","name":"EVENT TRACKER","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":370,"y":100,"wires":[]},{"id":"3c6775a2ebf09024","type":"server-events","z":"956a8048.b6a6","name":"[WATCH] System Motion","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"ios.action_fired","eventData":"{\"actionName\":\"Belcave Motion\",\"triggerSource\":\"watch\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":130,"y":340,"wires":[["70fc28c88be90f7c"]]},{"id":"8cb7a63777b53fed","type":"debug","z":"956a8048.b6a6","name":"EVENT TRACKER","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":340,"wires":[]},{"id":"70fc28c88be90f7c","type":"api-call-service","z":"956a8048.b6a6","name":"Toggle Belcave Motion","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"toggle","areaId":[],"deviceId":[],"entityId":["input_boolean.belcave_presence_detection_toggle"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":380,"y":340,"wires":[["8cb7a63777b53fed"]]},{"id":"633969c9f406fcc6","type":"server-events","z":"956a8048.b6a6","name":"[WATCH] Desk Spotlights","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"ios.action_fired","eventData":"{\"actionName\":\"Desk Spotlights\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":130,"y":420,"wires":[["5515de3be731880b"]]},{"id":"7e7266d619462632","type":"debug","z":"956a8048.b6a6","name":"EVENT TRACKER","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":420,"wires":[]},{"id":"5515de3be731880b","type":"api-call-service","z":"956a8048.b6a6","name":"Toggle Desk Spotlights","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":390,"y":420,"wires":[["7e7266d619462632"]]},{"id":"f7ac6d352ca0d7ec","type":"api-call-service","z":"956a8048.b6a6","name":"test color","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights"],"data":"{\t   \"rgbw_color\":[255,0,0,0],\t   \"brightness\":1\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":260,"y":2780,"wires":[["62d272340df061e7"]]},{"id":"43d5b550e6a6af47","type":"inject","z":"956a8048.b6a6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":110,"y":2780,"wires":[["f7ac6d352ca0d7ec"]]},{"id":"62d272340df061e7","type":"debug","z":"956a8048.b6a6","name":"COLORBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":430,"y":2780,"wires":[]},{"id":"a439e7bac3f0d0fb","type":"subflow:5c17ae8417803497","z":"956a8048.b6a6","d":true,"name":"","x":590,"y":2180,"wires":[[]]},{"id":"6402937fcf9eca5c","type":"subflow:e7f66014407acf38","z":"956a8048.b6a6","d":true,"name":"","x":370,"y":2180,"wires":[["a439e7bac3f0d0fb"]]},{"id":"c8e4e9a62d03e78d","type":"subflow:e7f66014407acf38","z":"956a8048.b6a6","d":true,"name":"","x":370,"y":2300,"wires":[["3d9f266ab36b0731"]]},{"id":"3d9f266ab36b0731","type":"subflow:5c17ae8417803497","z":"956a8048.b6a6","d":true,"name":"","x":590,"y":2300,"wires":[[]]},{"id":"07133bcfd17ea936","type":"server-events","z":"956a8048.b6a6","d":true,"name":"[HUE Remote 1] on_short_release","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\",\"command\":\"on_short_release\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":160,"y":2000,"wires":[["7be71b299b919ec2"]]},{"id":"be492b0b26db0989","type":"debug","z":"956a8048.b6a6","name":"EVENT BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":2000,"wires":[]},{"id":"5f2c6c828391b2b0","type":"server-events","z":"956a8048.b6a6","d":true,"name":"[HUE Remote 1] main event bus","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":150,"y":1940,"wires":[["36d1472641b4329c"]]},{"id":"36d1472641b4329c","type":"debug","z":"956a8048.b6a6","name":"MAIN EVENT BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":750,"y":1940,"wires":[]},{"id":"9aa9f8b8cda98124","type":"server-events","z":"956a8048.b6a6","d":true,"name":"[HUE Remote 1] on_double_press","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\",\"command\":\"on_double_press\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":160,"y":2060,"wires":[["5263aa66d7bb1aca"]]},{"id":"5263aa66d7bb1aca","type":"debug","z":"956a8048.b6a6","name":"EVENT BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":2060,"wires":[]},{"id":"7be71b299b919ec2","type":"api-call-service","z":"956a8048.b6a6","name":"Toggle Kitchen Power","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"toggle","areaId":[],"deviceId":[],"entityId":["switch.kasa_smart_plug_1"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":460,"y":2000,"wires":[["be492b0b26db0989"]]},{"id":"0d6b3cbe8d3e6986","type":"server-events","z":"956a8048.b6a6","d":true,"name":"[HUE Remote 1] on_hold","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\",\"command\":\"on_hold\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":130,"y":2120,"wires":[["189733aa5029bf41"]]},{"id":"c882cb3fe524ce06","type":"debug","z":"956a8048.b6a6","name":"EVENT BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":2120,"wires":[]},{"id":"be56f6e690ae9f9f","type":"api-call-service","z":"956a8048.b6a6","name":"Toggle Adam Monitors","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"toggle","areaId":[],"deviceId":[],"entityId":["switch.studio_1_monitor_controller"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":540,"y":2120,"wires":[["c882cb3fe524ce06"]]},{"id":"d72ec898992fe377","type":"server-events","z":"956a8048.b6a6","name":"[HUE Remote 1] off_short_release","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\",\"command\":\"off_short_release\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":160,"y":2860,"wires":[["4c7a35f2a4229a60","9c71f4c7b62ff96a"]]},{"id":"4c7a35f2a4229a60","type":"api-call-service","z":"956a8048.b6a6","d":true,"name":"Toggle KRK Monitor Controller","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"toggle","areaId":[],"deviceId":[],"entityId":["switch.studio_2_monitor_controller"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":490,"y":2860,"wires":[["01a5203ab6c74f5f"]]},{"id":"01a5203ab6c74f5f","type":"debug","z":"956a8048.b6a6","name":"EVENT BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":2860,"wires":[]},{"id":"189733aa5029bf41","type":"delay","z":"956a8048.b6a6","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"3","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":340,"y":2120,"wires":[["be56f6e690ae9f9f"]]},{"id":"6f9a93f4bb17ced1","type":"server-events","z":"956a8048.b6a6","name":"[HUE Remote 1] on_short_release","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\",\"command\":\"on_short_release\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":160,"y":3000,"wires":[[]]},{"id":"9fd7298bf3c676b3","type":"server-events","z":"956a8048.b6a6","name":"[HUE Remote 1] main event bus","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":150,"y":2940,"wires":[["02e83ffdeaf4787e"]]},{"id":"65798354818855fa","type":"server-events","z":"956a8048.b6a6","name":"[HUE Remote 1] on_double_press","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\",\"command\":\"on_double_press\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":160,"y":3060,"wires":[[]]},{"id":"a7af5b8685b2de4c","type":"server-events","z":"956a8048.b6a6","name":"[HUE Remote 1] on_hold","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"{\"device_id\":\"8cc5b0b7977d4a88f3b23dc5491aaec2\",\"command\":\"on_hold\"}","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"event_type":"","x":130,"y":3120,"wires":[[]]},{"id":"02e83ffdeaf4787e","type":"debug","z":"956a8048.b6a6","name":"EVENT BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":430,"y":2940,"wires":[]},{"id":"9c71f4c7b62ff96a","type":"debug","z":"956a8048.b6a6","name":"DIRECT EVENT BUS ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":460,"y":2820,"wires":[]},{"id":"44f2adbaf626f84a","type":"function","z":"956a8048.b6a6","name":"Hue Dimmer Interface","func":"// Hue Dimmer Interface (v1.0)\n// Interface for creating / managing hue dimmer configurations\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.config       : RemoteInterface config object\n// msg.payload.remote_id    : remote_id\n// msg.payload.entity_id    : remote entity id\n// msg.payload.action       : current entity state value\n\n//\n// -*- OUTPUTS -*-\n// msg.payload              : RemoteInterface config object\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\nconst hue_dimmer_config = msg.payload.config ||new utils.RemoteInterface();\nconst remote_id = msg.payload.remote_id || \"default\";\nconst button_ids = [\"on\", \"up\", \"down\", \"off\"];\nconst command_ids = [\"short_release\", \"double_press\", \"hold\"];\nconst action = msg.payload.action || {};\n\n// Create remote\nconst hue_dimmer_remote = new utils.Remote(remote_id);\n\nbutton_ids.forEach(buttonId => {\n    const button = hue_dimmer_remote.addButton(buttonId);\n    command_ids.forEach(commandId => {\n        button.addCommand(commandId);\n    });\n});\n\n// Display a json object of the remote and its buttons and commands\nnode.warn(hue_dimmer_remote.getObject());\n\n// Add remote to config\nhue_dimmer_config.setRemote(hue_dimmer_remote.getId(), hue_dimmer_remote);\n\n// Display a json object with all the updated remote layouts\nnode.warn(hue_dimmer_config.getObject());\n\nmsg.payload = hue_dimmer_config.getObject();\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":3000,"wires":[["5b3578894a4cfbea"]]},{"id":"5b3578894a4cfbea","type":"debug","z":"956a8048.b6a6","name":"FUNCTION BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":930,"y":3000,"wires":[]},{"id":"485eef8670db7fe0","type":"inject","z":"956a8048.b6a6","name":"","props":[{"p":"payload.action","v":"{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}","vt":"json"},{"p":"global_id","v":"hue_dimmer_remote_1","vt":"str"},{"p":"payload.config","v":"system.remotes","vt":"global"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":530,"y":3000,"wires":[["44f2adbaf626f84a"]]},{"id":"1e6e6b2be2a36efd","type":"inject","z":"956a8048.b6a6","name":"Service Call Generator","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":160,"y":3340,"wires":[["0c5605c2b46a03a0"]]},{"id":"ceaedb75a81108c9","type":"debug","z":"956a8048.b6a6","name":"SERVICE CALL","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":760,"y":3340,"wires":[]},{"id":"5c885a7974b631c0","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","d":true,"name":"","x":570,"y":3180,"wires":[["8b046da1822419dd"]]},{"id":"ff63865ab9483764","type":"subflow:decd1d62e4154436","z":"956a8048.b6a6","d":true,"name":"","env":[{"name":"GLOBAL_ID","value":"","type":"env"}],"x":330,"y":3180,"wires":[["5c885a7974b631c0"]]},{"id":"f1dee1f07eb6c7c2","type":"inject","z":"956a8048.b6a6","d":true,"name":"Living Room","props":[{"p":"payload.config","v":"system.remote_interface.hue_dimmer","vt":"global"},{"p":"payload.device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload.remote_id","v":"living_room_default","vt":"str"},{"p":"payload.actions.on","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.up","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.down","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.off","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"global_id","v":"system.remote_interface.hue_dimmer","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":110,"y":3180,"wires":[["ff63865ab9483764"]]},{"id":"8b046da1822419dd","type":"debug","z":"956a8048.b6a6","d":true,"name":"DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":740,"y":3180,"wires":[]},{"id":"b85a286350e89d04","type":"inject","z":"956a8048.b6a6","d":true,"name":"Hue Dimmer 1 (living_room_default)","props":[{"p":"payload.device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload.remote_id","v":"living_room_default","vt":"str"},{"p":"payload.devices","v":"system.remote_interface.hue_dimmer.devices","vt":"global"},{"p":"global_id","v":"system.remote_interface.hue_dimmer.devices","vt":"str"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":190,"y":2620,"wires":[["6ed8d6e40b578590"]]},{"id":"64eb3c2de5ae9a10","type":"debug","z":"956a8048.b6a6","name":"DEBUG","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":920,"y":2620,"wires":[]},{"id":"7bf4c13a54361e5e","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":750,"y":2620,"wires":[["64eb3c2de5ae9a10"]]},{"id":"6ed8d6e40b578590","type":"subflow:46392764034e0891","z":"956a8048.b6a6","name":"","x":500,"y":2620,"wires":[["7bf4c13a54361e5e"]]},{"id":"94b7025cfaac32f2","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","d":true,"name":"","x":570,"y":3240,"wires":[["222765262352dcf0"]]},{"id":"a845c5cafdb8b4ba","type":"subflow:decd1d62e4154436","z":"956a8048.b6a6","d":true,"name":"","env":[{"name":"GLOBAL_ID","value":"","type":"env"}],"x":330,"y":3240,"wires":[["94b7025cfaac32f2"]]},{"id":"2c1bd1e701862294","type":"inject","z":"956a8048.b6a6","d":true,"name":"Bedroom","props":[{"p":"payload.config","v":"system.remote_interface.hue_dimmer","vt":"global"},{"p":"payload.device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload.remote_id","v":"bedroom_default","vt":"str"},{"p":"payload.actions.on","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.up","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.down","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.off","v":"{\"short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"global_id","v":"system.remote_interface.hue_dimmer","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":100,"y":3240,"wires":[["a845c5cafdb8b4ba"]]},{"id":"222765262352dcf0","type":"debug","z":"956a8048.b6a6","d":true,"name":"DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":740,"y":3240,"wires":[]},{"id":"826d7e4470f44231","type":"inject","z":"956a8048.b6a6","d":true,"name":"Hue Dimmer 1 (bedroom_default)","props":[{"p":"payload.device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload.remote_id","v":"bedroom_default","vt":"str"},{"p":"payload.devices","v":"system.remote_interface.hue_dimmer.devices","vt":"global"},{"p":"global_id","v":"system.remote_interface.hue_dimmer.devices","vt":"str"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":false,"onceDelay":"5","topic":"","x":170,"y":2680,"wires":[["6413f62092c41f26"]]},{"id":"54831c2a2e100eef","type":"debug","z":"956a8048.b6a6","name":"DEBUG","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":920,"y":2680,"wires":[]},{"id":"a3518fc70fb9a0ed","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":750,"y":2680,"wires":[["54831c2a2e100eef"]]},{"id":"6413f62092c41f26","type":"subflow:46392764034e0891","z":"956a8048.b6a6","name":"","x":500,"y":2680,"wires":[["a3518fc70fb9a0ed"]]},{"id":"c5e590efabac6fd9","type":"debug","z":"956a8048.b6a6","name":"DEBUG","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":800,"y":620,"wires":[]},{"id":"b602b9d3540f241e","type":"debug","z":"956a8048.b6a6","d":true,"name":"ERR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":890,"y":2500,"wires":[]},{"id":"82fb7a18ebc17f92","type":"inject","z":"956a8048.b6a6","name":"Doorbell [IKEA Smart Button]","props":[{"p":"payload.global_id","v":"system.remote_interface.ikea_smart_button","vt":"str"},{"p":"payload.remote_id","v":"doorbell_default","vt":"str"},{"p":"payload.buttons","v":"","vt":"str"},{"p":"payload.commands","v":"[\"on\",\"move_with_on_off\"]","vt":"json"},{"p":"payload.actions.on","v":"{\"on\":{\"domain\":\"notify\",\"service\":\"mobile_app_sk\",\"data\":{\"title\":\"Message from Alfredd\",\"message\":\"🔔 Someone's at the door Sir.\"}},\"move_with_on_off\":{\"domain\":\"notify\",\"service\":\"mobile_app_sk\",\"data\":{\"title\":\"Message from Alfredd\",\"message\":\"🔔 Someone's at the door Sir...\"}}}","vt":"json"},{"p":"global_id","v":"msg.payload.global_id & \".remotes\" & \".\" & msg.payload.remote_id","vt":"jsonata"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":160,"y":620,"wires":[["0596d14c80941a2b"]]},{"id":"7722c402d817e3fd","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":630,"y":620,"wires":[["c5e590efabac6fd9"]]},{"id":"48bc673d727ae0cc","type":"inject","z":"956a8048.b6a6","d":true,"name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"8cc5b0b7977d4a88f3b23dc5491aaec2","payloadType":"str","x":1210,"y":3160,"wires":[["a2c7611678c62fd4"]]},{"id":"a2c7611678c62fd4","type":"change","z":"956a8048.b6a6","d":true,"name":"","rules":[{"t":"set","p":"hue_device_id","pt":"global","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1420,"y":3160,"wires":[[]]},{"id":"80d3e48b966fdf6f","type":"debug","z":"956a8048.b6a6","name":"FINAL EVENT BUS","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":950,"y":40,"wires":[]},{"id":"1faad3c887dfe5c5","type":"server-events","z":"956a8048.b6a6","name":"Event Listener [zha_event]","server":"5e6a682a.ce8468","version":3,"exposeAsEntityConfig":"","eventType":"zha_event","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"payload.config","propertyType":"msg","value":"system.remote_interface","valueType":"global"}],"event_type":"","x":130,"y":40,"wires":[["f98a7c599ad41550"]]},{"id":"5fb2bc1c37f68560","type":"comment","z":"956a8048.b6a6","name":"","info":"{\"payload\":{\"event_type\":\"zha_event\",\"event\":{\"device_ieee\":\"8c:f6:81:ff:fe:50:51:5d\",\"unique_id\":\"8c:f6:81:ff:fe:50:51:5d:1:0x0006\",\"device_id\":\"fdf5c8b9cff53211f2fcf6909dc51d3e\",\"endpoint_id\":1,\"cluster_id\":6,\"command\":\"on\",\"args\":[],\"params\":{}},\"origin\":\"LOCAL\",\"time_fired\":\"2024-03-18T07:34:00.873726+00:00\",\"context\":{\"id\":\"01HS87PJD91BNXRA2PD8VCNXNJ\",\"parent_id\":null,\"user_id\":null}},\"topic\":\"zha_event\",\"_msgid\":\"35cfde2e22deb6d7”}\n\n{\"payload\":{\"event_type\":\"zha_event\",\"event\":{\"device_ieee\":\"8c:f6:81:ff:fe:50:51:5d\",\"unique_id\":\"8c:f6:81:ff:fe:50:51:5d:1:0x0006\",\"device_id\":\"fdf5c8b9cff53211f2fcf6909dc51d3e\",\"endpoint_id\":1,\"cluster_id\":6,\"command\":\"on\",\"args\":[],\"params\":{}},\"origin\":\"LOCAL\",\"time_fired\":\"2024-03-18T07:34:00.870054+00:00\",\"context\":{\"id\":\"01HS87PJD6QC4BZHJBDTNNWADB\",\"parent_id\":null,\"user_id\":null}},\"topic\":\"zha_event\",\"_msgid\":\"72bad0d04d016a1a”}\n\n{\"payload\":{\"event_type\":\"zha_event\",\"event\":{\"device_ieee\":\"8c:f6:81:ff:fe:50:51:5d\",\"unique_id\":\"8c:f6:81:ff:fe:50:51:5d:1:0x0006\",\"device_id\":\"fdf5c8b9cff53211f2fcf6909dc51d3e\",\"endpoint_id\":1,\"cluster_id\":6,\"command\":\"on\",\"args\":[],\"params\":{}},\"origin\":\"LOCAL\",\"time_fired\":\"2024-03-18T07:34:00.859340+00:00\",\"context\":{\"id\":\"01HS87PJCVGC64JXZN0G4XV137\",\"parent_id\":null,\"user_id\":null}},\"topic\":\"zha_event\",\"_msgid\":\"ed2750f4da9fceb7\"}","x":940,"y":300,"wires":[]},{"id":"f98a7c599ad41550","type":"subflow:a74d2a801b9c7437","z":"956a8048.b6a6","name":"","env":[{"name":"DEBOUNCE_TIME_MS","value":"30","type":"str"}],"x":350,"y":40,"wires":[["4969d66ff8e0d5a5"]]},{"id":"0596d14c80941a2b","type":"subflow:60e070695dcd8459","z":"956a8048.b6a6","name":"","x":390,"y":620,"wires":[["7722c402d817e3fd"]]},{"id":"5dfd5c8e2af681da","type":"inject","z":"956a8048.b6a6","name":"Living Room [Hue Dimmer]","props":[{"p":"payload.global_id","v":"system.remote_interface.hue_dimmer","vt":"str"},{"p":"payload.device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload.remote_id","v":"living_room_default","vt":"str"},{"p":"payload.buttons","v":"[\"on\",\"up\",\"down\",\"off\"]","vt":"json"},{"p":"payload.commands","v":"[\"short_release\", \"double_press\", \"hold\"]","vt":"str"},{"p":"payload.actions.on","v":"{\"on_short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_2\"}},\"on_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.studio_1_monitor_controller\"}},\"on_hold\":{\"domain\":\"light\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"light.living_room_ceiling_lights\"}}}","vt":"json"},{"p":"payload.actions.up","v":"{\"up_short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"up_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"up_hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.down","v":"{\"down_short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"down_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"down_hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.off","v":"{\"off_short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"off_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.smart_plug_4\"}},\"off_hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"global_id","v":"msg.payload.global_id & \".remotes\" & \".\" & msg.payload.remote_id","vt":"jsonata"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","x":160,"y":500,"wires":[["9ccaf14ec2b80889"]]},{"id":"4da598305a30834d","type":"inject","z":"956a8048.b6a6","name":"Bedroom [Hue Dimmer]","props":[{"p":"payload.global_id","v":"system.remote_interface.hue_dimmer","vt":"str"},{"p":"payload.device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload.remote_id","v":"bedroom_default","vt":"str"},{"p":"payload.buttons","v":"[\"on\", \"up\", \"down\", \"off\"]","vt":"json"},{"p":"payload.commands","v":"[\"short_release\",\"double_press\",\"hold\"]","vt":"json"},{"p":"payload.actions.on","v":"{\"on_short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"on_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"on_hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.up","v":"{\"up_short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"up_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"up_hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.down","v":"{\"down_short_release\":{\"domain\":\"notify\",\"service\":\"mobile_app_sk\",\"data\":{\"title\":\"Message from Alfredd\",\"message\":\"🔔 Someone's at the door Sir.\"}},\"down_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"down_hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"payload.actions.off","v":"{\"off_short_release\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"off_double_press\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}},\"off_hold\":{\"domain\":\"switch\",\"service\":\"toggle\",\"data\":{\"entity_id\":\"switch.kasa_smart_plug_1\"}}}","vt":"json"},{"p":"global_id","v":"msg.payload.global_id & \".remotes\" & \".\" & msg.payload.remote_id","vt":"jsonata"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","x":150,"y":560,"wires":[["93f417a66f5099e8"]]},{"id":"9aceb60df85c5716","type":"debug","z":"956a8048.b6a6","name":"DEBUG","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":800,"y":500,"wires":[]},{"id":"db4953364e5db0e5","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":630,"y":500,"wires":[["9aceb60df85c5716"]]},{"id":"9ccaf14ec2b80889","type":"subflow:60e070695dcd8459","z":"956a8048.b6a6","name":"","x":390,"y":500,"wires":[["db4953364e5db0e5"]]},{"id":"514d86b083b24629","type":"debug","z":"956a8048.b6a6","name":"DEBUG","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":800,"y":560,"wires":[]},{"id":"5355ba5347679fc9","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":630,"y":560,"wires":[["514d86b083b24629"]]},{"id":"93f417a66f5099e8","type":"subflow:60e070695dcd8459","z":"956a8048.b6a6","name":"","x":390,"y":560,"wires":[["5355ba5347679fc9"]]},{"id":"4969d66ff8e0d5a5","type":"function","z":"956a8048.b6a6","name":"Event Command Mapper","func":"// Event Command Mapper (v1.0)\n// Maps zha_event events for buttons/remotes to a service call\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.event        : Event data\n// msg.payload.config       : Remote_interface config\n//\n// -*- OUTPUTS -*-\n// msg.payload              : command.action payload (Call Service)\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\n\nconst remote_interface = msg.payload.config;\n\n// Assuming you have received the event data in `msg.payload.event`\nconst event = msg.payload.event;\n\n// Extract device, button, and command information from the event\nconst device_id = event.device_id;\nconst button_id = event.args.button || \"on\"; // Default to \"on\" if no button is specified\nconst command_id = event.command;\n\ntry {\n\n    // Instantiate DeviceManagers \n    const deviceTypeManager = new utils.DeviceManager(remote_interface.device_type);\n\n    const device_type = deviceTypeManager.getDevice(device_id);\n\n    // Get the remote ID for the device from deviceRemoteManager\n    const deviceRemoteManager = new utils.DeviceManager(remote_interface[device_type][\"devices\"]);\n    const remote_id = deviceRemoteManager.getDevice(device_id);\n\n    // Instantiate RemoteInterface\n    const remoteInterface = new utils.RemoteInterface(remote_interface[device_type]);\n\n    // Get the command object from RemoteInterface\n    const command = remoteInterface.getCommand(remote_id, button_id, command_id);\n    \n    // Extract the action from the command and assign it to msg.payload\n    msg.payload = command.action;\n\n    // Send the message downstream\n    return msg;\n\n} catch (error) {\n    // Handle errors, such as device or command not found\n    node.error(`Error processing event: ${error.message}`);\n}\n/*** END ***/","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":40,"wires":[["4795a051e02c5006"]]},{"id":"ab4a7e34d4b022ab","type":"inject","z":"956a8048.b6a6","d":true,"name":"Ikea Smart Button 2 [doorbell_default]","props":[{"p":"payload.device_id","v":"fdf5c8b9cff53211f2fcf6909dc51d3e","vt":"str"},{"p":"payload.remote_id","v":"doorbell_default","vt":"str"},{"p":"payload.config_id","v":"ikea_smart_button","vt":"str"},{"p":"payload.config","v":"system.remote_interface","vt":"global"},{"p":"payload.devices","v":"system.remote_interface.ikea_smart_button.devices","vt":"global"},{"p":"global_id","v":"system.remote_interface.ikea_smart_button.devices","vt":"str"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":190,"y":2560,"wires":[["dc51f407ec5f7440"]]},{"id":"e4ac0283d0e01591","type":"debug","z":"956a8048.b6a6","name":"DEBUG","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":940,"y":2560,"wires":[]},{"id":"f3aea5e19953a504","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":770,"y":2560,"wires":[["e4ac0283d0e01591"]]},{"id":"dc51f407ec5f7440","type":"subflow:46392764034e0891","z":"956a8048.b6a6","name":"","x":520,"y":2560,"wires":[["f3aea5e19953a504"]]},{"id":"031fd1e21ed807d9","type":"debug","z":"956a8048.b6a6","d":true,"name":"ERR1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":890,"y":2440,"wires":[]},{"id":"f499a3d27de318c1","type":"inject","z":"956a8048.b6a6","d":true,"name":"Set Device Type [Hue Dimmer 1]","props":[{"p":"payload.device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload.device_type","v":"hue_dimmer","vt":"str"},{"p":"payload.global_id","v":"system.remote_interface.device_type","vt":"str"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":180,"y":2440,"wires":[["0d16320083fd105f"]]},{"id":"0d16320083fd105f","type":"subflow:758ff705909ff236","z":"956a8048.b6a6","d":true,"name":"","x":450,"y":2440,"wires":[["bb2aa5ae53c67c4a"]]},{"id":"bb2aa5ae53c67c4a","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","d":true,"name":"","x":690,"y":2440,"wires":[["031fd1e21ed807d9"]]},{"id":"1a0585e666402149","type":"inject","z":"956a8048.b6a6","d":true,"name":"Set Device Type [Ikea Smart Button 2]","props":[{"p":"payload.device_id","v":"fdf5c8b9cff53211f2fcf6909dc51d3e","vt":"str"},{"p":"payload.device_type","v":"ikea_smart_button","vt":"str"},{"p":"payload.global_id","v":"system.remote_interface.device_type","vt":"str"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"5","topic":"","x":190,"y":2500,"wires":[["e5b5faac22e13cc1"]]},{"id":"e5b5faac22e13cc1","type":"subflow:758ff705909ff236","z":"956a8048.b6a6","d":true,"name":"","x":470,"y":2500,"wires":[["da643f2017d1a766"]]},{"id":"da643f2017d1a766","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","d":true,"name":"","x":710,"y":2500,"wires":[["b602b9d3540f241e"]]},{"id":"ffd9532676afb3da","type":"debug","z":"956a8048.b6a6","d":true,"name":"ERR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1610,"y":3080,"wires":[]},{"id":"ebe045805fdb46dd","type":"inject","z":"956a8048.b6a6","name":"Generate Device-Type Mapping [Ikea Smart Button 2]","props":[{"p":"device_id","v":"fdf5c8b9cff53211f2fcf6909dc51d3e","vt":"str"},{"p":"payload"},{"p":"devices","v":"system.remote_interface.device_type","vt":"str"},{"p":"global_id","v":"msg.devices & \".\" & msg.device_id","vt":"jsonata"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"ikea_smart_button","payloadType":"str","x":240,"y":780,"wires":[["faf2cbdd78dd9077"]]},{"id":"ed611807d731a1c4","type":"subflow:758ff705909ff236","z":"956a8048.b6a6","d":true,"name":"","x":1230,"y":3080,"wires":[["930e5983ccbd2fb9"]]},{"id":"930e5983ccbd2fb9","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","d":true,"name":"","x":1450,"y":3080,"wires":[["ffd9532676afb3da"]]},{"id":"1383072d9c4b2e94","type":"inject","z":"956a8048.b6a6","name":"Generate Device/Remote Mapping [Ikea Smart Button 2]","props":[{"p":"device_id","v":"fdf5c8b9cff53211f2fcf6909dc51d3e","vt":"str"},{"p":"payload"},{"p":"devices","v":"system.remote_interface.ikea_smart_button.devices","vt":"str"},{"p":"global_id","v":"msg.devices & \".\" & msg.device_id","vt":"jsonata"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"doorbell_default","payloadType":"str","x":250,"y":920,"wires":[["99541b169e2712ae"]]},{"id":"99541b169e2712ae","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":570,"y":920,"wires":[["cae96df17f370d09"]]},{"id":"faf2cbdd78dd9077","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":570,"y":780,"wires":[["4076afc5756b59e2"]]},{"id":"4076afc5756b59e2","type":"debug","z":"956a8048.b6a6","name":"ERR","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":780,"wires":[]},{"id":"cae96df17f370d09","type":"debug","z":"956a8048.b6a6","name":"ERR","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":920,"wires":[]},{"id":"6f71f358a1dac5cc","type":"inject","z":"956a8048.b6a6","name":"Generate Device-Type Mapping [Hue Dimmer 1]","props":[{"p":"device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload"},{"p":"devices","v":"system.remote_interface.device_type","vt":"str"},{"p":"global_id","v":"msg.devices & \".\" & msg.device_id","vt":"jsonata"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"hue_dimmer","payloadType":"str","x":220,"y":720,"wires":[["05433ddbdf177aec"]]},{"id":"05433ddbdf177aec","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":570,"y":720,"wires":[["6fbf40b91cd91c7f"]]},{"id":"6fbf40b91cd91c7f","type":"debug","z":"956a8048.b6a6","name":"ERR","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":720,"wires":[]},{"id":"72ee7db66a2a8ecb","type":"inject","z":"956a8048.b6a6","name":"Generate Device/Remote Mapping [Hue Dimmer 1]","props":[{"p":"device_id","v":"8cc5b0b7977d4a88f3b23dc5491aaec2","vt":"str"},{"p":"payload"},{"p":"devices","v":"system.remote_interface.hue_dimmer.devices","vt":"str"},{"p":"global_id","v":"msg.devices & \".\" & msg.device_id","vt":"jsonata"},{"p":"delay","v":"system.updater_frequency","vt":"global"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"living_room_default","payloadType":"str","x":230,"y":860,"wires":[["196f25e5b211ee69"]]},{"id":"196f25e5b211ee69","type":"subflow:d45c7673c797b311","z":"956a8048.b6a6","name":"","x":570,"y":860,"wires":[["c48387e2cb546747"]]},{"id":"c48387e2cb546747","type":"debug","z":"956a8048.b6a6","name":"ERR","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":860,"wires":[]},{"id":"4795a051e02c5006","type":"api-call-service","z":"956a8048.b6a6","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"","service":"","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":770,"y":40,"wires":[["80d3e48b966fdf6f"]]},{"id":"0c5605c2b46a03a0","type":"api-call-service","z":"956a8048.b6a6","name":"Mock Service Call","server":"5e6a682a.ce8468","version":5,"debugenabled":true,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["light.living_room_ceiling_lights"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":490,"y":3340,"wires":[["ceaedb75a81108c9"]]},{"id":"7aae63403d934343","type":"inject","z":"956a8048.b6a6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":840,"y":200,"wires":[["50523154d422d39f","54adf9de13e084f1"]]},{"id":"50523154d422d39f","type":"change","z":"956a8048.b6a6","d":true,"name":"","rules":[{"t":"set","p":"system.context_data","pt":"global","to":"{\"huh\":\"wtf\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":1060,"y":200,"wires":[[]]},{"id":"54adf9de13e084f1","type":"function","z":"956a8048.b6a6","name":"Function Template","func":"// Function Template (v2)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier\n//\n// -*- OUTPUTS -*-\n// msg.payload              : Value\n// msg.global_id            : Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nconst system = context.global[env.get(\"MODULE_ID\")];\nconst utils = system.util.common;\n\nconst ContextMonitor = system.domain.models.ContextMonitor;\n\nconst contextMonitor = new ContextMonitor(global);\nconst result = contextMonitor.get2(\"kitchen_hybrid_lighting_zone_1\");\nnode.warn(result);\nnode.warn(context.get(\"global.kitchen_hybrid_lighting_zone_2\"));\nreturn msg;\n/*** END ***/\n\n/*** HELPERS ***/\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":240,"wires":[["a00eff66bfc848ac"]]},{"id":"a00eff66bfc848ac","type":"debug","z":"956a8048.b6a6","name":"debug 90","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1220,"y":240,"wires":[]},{"id":"254ca030.d01d08","type":"ha-zone","z":"3761d774.6b7248","name":"Entered Home","server":"5e6a682a.ce8468","version":1,"exposeAsEntityConfig":"","entities":["device_tracker.sk"],"event":"enter","zones":["zone.home"],"x":110,"y":60,"wires":[["4c0d6913.b4a5e8"]]},{"id":"4c0d6913.b4a5e8","type":"api-call-service","z":"3761d774.6b7248","name":"notify me","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"The Butler\",\t    \"message\": \"Entering Home\",\t    \"data\": {\t        \"tag\": \"Welcome Home Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":280,"y":60,"wires":[[]]},{"id":"2c357ca0.9e173c","type":"ha-zone","z":"3761d774.6b7248","name":"Exited Home","server":"5e6a682a.ce8468","version":1,"exposeAsEntityConfig":"","entities":["device_tracker.sk"],"event":"leave","zones":["zone.home"],"x":110,"y":140,"wires":[["6bb513e3.29027c"]]},{"id":"6bb513e3.29027c","type":"api-call-service","z":"3761d774.6b7248","name":"notify me","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"The Butler\",\t    \"message\": \"Leaving Home\",\t    \"data\": {\t        \"tag\": \"Take Care Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":280,"y":140,"wires":[[]]},{"id":"c0ca63a7.6ac3","type":"api-call-service","z":"3761d774.6b7248","name":"[notify] Motion Detected - Belcave","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk_x","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"Potential Treacherous Activity Detected\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1320,"y":300,"wires":[["21ee6638.67765a"]]},{"id":"15345c1e.6c3414","type":"server-state-changed","z":"3761d774.6b7248","name":"Belcave Treacherous Occupancy Event Listener","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.belcave_treacherous_activity_detection","entityIdType":"exact","outputInitially":false,"stateType":"habool","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"motion","propertyType":"flow","value":"","valueType":"entityState"}],"x":220,"y":200,"wires":[[],[]]},{"id":"3a6b72ae.79f29e","type":"api-call-service","z":"3761d774.6b7248","name":"[notify] Motion Cleared - Belcave","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk_x","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"Treacherous Activity Ceased\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1310,"y":240,"wires":[["21ee6638.67765a"]]},{"id":"f73960f.62bc0a","type":"api-current-state","z":"3761d774.6b7248","name":"","server":"5e6a682a.ce8468","version":3,"outputs":2,"halt_if":"0","halt_if_type":"num","halt_if_compare":"is_not","entity_id":"input_number.treacherous_activity_level_belcave","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1950,"y":60,"wires":[[],[]]},{"id":"70cd27.c0be22d8","type":"switch","z":"3761d774.6b7248","name":"Notify What Happened","property":"belcave_treacherous_activity_level","propertyType":"global","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"num"}],"checkall":"true","repair":false,"outputs":4,"x":1020,"y":360,"wires":[["3a6b72ae.79f29e"],["c0ca63a7.6ac3"],["18c13d51.0d6ee3"],["4950b6a9.d16828"]]},{"id":"3bc94b5.67561b4","type":"inject","z":"3761d774.6b7248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1060,"y":240,"wires":[["3a6b72ae.79f29e"]]},{"id":"a202167d.ce55f8","type":"inject","z":"3761d774.6b7248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1060,"y":300,"wires":[["c0ca63a7.6ac3"]]},{"id":"2b067f17.d7d94","type":"server-state-changed","z":"3761d774.6b7248","name":"","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.belcave_treacherous_activity_detection","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":260,"y":280,"wires":[["57b4f786.ffccb8"],["79397f89.72098"]]},{"id":"21ee6638.67765a","type":"debug","z":"3761d774.6b7248","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1890,"y":480,"wires":[]},{"id":"57b4f786.ffccb8","type":"api-call-service","z":"3761d774.6b7248","name":"Increment Treacherous Activity Level","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"increment","areaId":[],"deviceId":[],"entityId":["input_number.belcave_treacherous_activity_level"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":710,"y":220,"wires":[["70cd27.c0be22d8"]]},{"id":"79397f89.72098","type":"api-call-service","z":"3761d774.6b7248","name":"Decrement Treacherous Activity Level","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"decrement","areaId":[],"deviceId":[],"entityId":["input_number.belcave_treacherous_activity_level"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":710,"y":500,"wires":[["70cd27.c0be22d8"]]},{"id":"ed20d1f.2d36e3","type":"server-state-changed","z":"3761d774.6b7248","name":"","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"binary_sensor.belcave_door_on_off","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":230,"y":340,"wires":[["57b4f786.ffccb8"],["79397f89.72098"]]},{"id":"58cb1368.90407c","type":"api-call-service","z":"3761d774.6b7248","name":"Decrement Treacherous Activity Level","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"decrement","areaId":[],"deviceId":[],"entityId":["input_number.belcave_treacherous_activity_level"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":350,"y":800,"wires":[[]]},{"id":"859e3392.b9ef4","type":"inject","z":"3761d774.6b7248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":800,"wires":[["58cb1368.90407c"]]},{"id":"a10414f9.01b0e8","type":"inject","z":"3761d774.6b7248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":860,"wires":[["82d285a.660d778"]]},{"id":"82d285a.660d778","type":"api-call-service","z":"3761d774.6b7248","name":"Increment Treacherous Activity Level","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"increment","areaId":[],"deviceId":[],"entityId":["input_number.belcave_treacherous_activity_level"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":350,"y":860,"wires":[[]]},{"id":"84cb5818.f68218","type":"server-state-changed","z":"3761d774.6b7248","name":"","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.belcave_stairs_motion","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":210,"y":400,"wires":[["57b4f786.ffccb8"],["79397f89.72098"]]},{"id":"968e6ce7.74cad","type":"api-call-service","z":"3761d774.6b7248","name":"[notify] Motion Cleared - Belcave","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"Treacherous Activity Ceased\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1490,"y":680,"wires":[[]]},{"id":"4950b6a9.d16828","type":"api-call-service","z":"3761d774.6b7248","name":"[notify] Motion Detected - Belcave","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"Extreme Treacherous Activity Detected\",\t    \"data\": {\t        \"tag\": \"Sir!\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1320,"y":480,"wires":[[]]},{"id":"18c13d51.0d6ee3","type":"api-call-service","z":"3761d774.6b7248","name":"[notify] Motion Cleared - Belcave","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"Treacherous Activity Detected\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1310,"y":420,"wires":[[]]},{"id":"d49e4d0a.4b3e2","type":"inject","z":"3761d774.6b7248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1060,"y":420,"wires":[["18c13d51.0d6ee3"]]},{"id":"389439ea.5dcb16","type":"inject","z":"3761d774.6b7248","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1060,"y":480,"wires":[["4950b6a9.d16828"]]},{"id":"90ee1db7f69a95b6","type":"api-call-service","z":"5c1595c35d872cdd","name":"[notify] Doorbell","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"🔔 ALERT: Hostiles detected, please proceed with caution.\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":320,"y":20,"wires":[[]]},{"id":"6dd62b9f5eec86c3","type":"server-state-changed","z":"5c1595c35d872cdd","name":"Foyer Motion Sensor","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.motion_3","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":true,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":110,"y":60,"wires":[["90ee1db7f69a95b6"],["7935421325536fcb"]]},{"id":"7935421325536fcb","type":"api-call-service","z":"5c1595c35d872cdd","name":"[notify] Doorbell","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Message from Alfred\",\t    \"message\": \"🔔 WARNING: Visibility compromised\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":320,"y":100,"wires":[[]]},{"id":"6e2090c5be4d7401","type":"api-call-service","z":"5c1595c35d872cdd","name":"[notify] SK","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"DEBUG Message from Alfred\",\t    \"message\": \"🔔 ALERT: SENSITIVITY TOO HIGH\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":570,"y":240,"wires":[[]]},{"id":"0811b6b51da6b228","type":"server-state-changed","z":"5c1595c35d872cdd","name":"","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"binary_sensor.ikea_motion_sensor_1_on_off","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":true,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":240,"y":280,"wires":[["6e2090c5be4d7401"],["4124ac28e122740a"]]},{"id":"4124ac28e122740a","type":"api-call-service","z":"5c1595c35d872cdd","name":"[notify] SK","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"DEBUG Message from Alfred\",\t    \"message\": \"🔔 WARNING: SENSETIVITY NORMALISED\",\t    \"data\": {\t        \"tag\": \"Steady Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":570,"y":320,"wires":[[]]},{"id":"dc68f569.a96808","type":"inject","z":"567f1829.7116e8","name":"","repeat":"","crontab":"","once":false,"topic":"","payload":"5","payloadType":"string","x":130,"y":140,"wires":[["f1135480.9cba68"]]},{"id":"f1135480.9cba68","type":"function","z":"567f1829.7116e8","name":"BLINK n","func":"\nvar o = false;\nfor (var i=0; i<(msg.payload*60); i++) {\n    node.send( {payload:+(o=!o)} )\n}\nnode.send( {payload:\"STOP\"} )\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":140,"wires":[["f04d49ba.7db058"]]},{"id":"f04d49ba.7db058","type":"delay","z":"567f1829.7116e8","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.69","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":450,"y":140,"wires":[["6a0d46d7.3ca9a8","c7e85abb.884978"]]},{"id":"6a0d46d7.3ca9a8","type":"debug","z":"567f1829.7116e8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":630,"y":220,"wires":[]},{"id":"c7e85abb.884978","type":"switch","z":"567f1829.7116e8","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"STOP","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":650,"y":140,"wires":[["4d0d69c2.833968","6bf22d27.d24ad4"],["b560267f.554098","5752db8.c91e424"],["80a5be02.721f1"]]},{"id":"4d0d69c2.833968","type":"debug","z":"567f1829.7116e8","name":"d1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":830,"y":60,"wires":[]},{"id":"b560267f.554098","type":"debug","z":"567f1829.7116e8","name":"d2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":830,"y":160,"wires":[]},{"id":"6bf22d27.d24ad4","type":"api-call-service","z":"567f1829.7116e8","name":"Light ON (RED LOW)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"red\",\"brightness_pct\":1}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":880,"y":100,"wires":[[]]},{"id":"5752db8.c91e424","type":"api-call-service","z":"567f1829.7116e8","name":"Light ON (RED HIGH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"red\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":880,"y":200,"wires":[[]]},{"id":"8529b1d7.d7e25","type":"server-state-changed","z":"567f1829.7116e8","name":"Alarm Triggered","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_boolean.belcave_alarm_toggle","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"3","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"belcave_alarm_timeout","valueType":"global"}],"x":100,"y":200,"wires":[["f1135480.9cba68"],["5ca5130a.d116dc"]]},{"id":"80a5be02.721f1","type":"delay","z":"567f1829.7116e8","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":840,"y":300,"wires":[["5843d2bc.477b3c"]]},{"id":"5843d2bc.477b3c","type":"api-call-service","z":"567f1829.7116e8","name":"Light ON (BLUE 69)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"blue\",\"brightness_pct\":69}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"queue":"none","x":1020,"y":300,"wires":[["81f070b2.aaf06"]]},{"id":"81f070b2.aaf06","type":"api-call-service","z":"567f1829.7116e8","name":"DISABLE Alarm","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_off","areaId":[],"deviceId":[],"entityId":["input_boolean.belcave_alarm_toggle"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"queue":"none","x":1220,"y":300,"wires":[["f04d49ba.7db058"]]},{"id":"5ca5130a.d116dc","type":"change","z":"567f1829.7116e8","name":"","rules":[{"t":"set","p":"reset","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":300,"y":260,"wires":[["f04d49ba.7db058","80a5be02.721f1"]]},{"id":"904aa121864babcf","type":"api-call-service","z":"567f1829.7116e8","name":"Decrement Treacherous Activity Level","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"decrement","areaId":[],"deviceId":[],"entityId":["input_number.belcave_treacherous_activity_level"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":350,"y":360,"wires":[[]]},{"id":"fc8af8d75efec5b7","type":"inject","z":"567f1829.7116e8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":360,"wires":[["904aa121864babcf"]]},{"id":"933e04169e7061a2","type":"inject","z":"567f1829.7116e8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":420,"wires":[["dc20edb6157a8772"]]},{"id":"dc20edb6157a8772","type":"api-call-service","z":"567f1829.7116e8","name":"Increment Treacherous Activity Level","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_number","service":"increment","areaId":[],"deviceId":[],"entityId":["input_number.belcave_treacherous_activity_level"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":350,"y":420,"wires":[[]]},{"id":"e01e28f01283e690","type":"comment","z":"48471ba4dee7be2d","name":"","info":"write me some js code which does the following\n\ncheck the homeassistant object for all person objects which are home. \nreturn an object of people who are home\n\n\n-------------------------------------------------------------------------\nfix this, need to make sure it's me triggering motion, \notherwise an alarm or alert should go off.\n\nmaybe add a hook for alarm functionality here?\n\nwrap \"Is Home?\" nodes into subflow so they can be reused?\n\n\n\nnew flow structure:\n\nhieracy for triggers (for now) important to least-important\n1. motion [confirmed]\n2. user(s') ssid [unconfirmed]\n3. user(s') location [unconfirmed]\n4. device activity (on/off) status (tv, ps5, pc etc) [unconfirmed]\n\nsplit occupancy to be per room, makes it simpler and \nallows for more complex expansions in the future\n\n----------------------------------------------------------------------------\n\n    # [friendly_name] ([Zone/Area])\n    [entity_name]:\n      friendly_name: \"[friendly_name]\"\n      value_template:\n        \"{% if is_state('[presence_toggle_entity_id]', 'on') %}\n        {{ is_state('[motion_sensor_entity_id]', 'on') }}\n        {% else %}\n        {{ is_state('[presence_toggle_entity_id]', 'on') }}\n        {% endif %}\"\n      turn_on:\n        - service: input_boolean.turn_on\n          entity_id: [presence_toggle_entity_id]\n      turn_off:\n        - service: input_boolean.turn_off\n          entity_id: [presence_toggle_entity_id]\n      icon_template: >-\n        {% if is_state('[presence_toggle_entity_id]', 'on') %}\n          mdi:motion-sensor\n        {% else %}\n          mdi:motion-sensor-off\n        {% endif %}\n\n\nrequired:\nin the incoming msg object:\n\nmsg.friendly_name [OPTIONAL]\nmsg.zone [OPTIONAL]\nmsg.entity_name\nmsg.presence_toggle_entity_id\nmsg.motion_sensor_entity_id\n\n\n[presence_detection_toggle] - input_boolean helper entity\n\n\n","x":80,"y":160,"wires":[]},{"id":"46435e5954222e2c","type":"api-current-state","z":"48471ba4dee7be2d","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"zone.home","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":290,"y":40,"wires":[["79e2a619316b8233"]]},{"id":"fb9174c3f7d02d84","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":40,"wires":[["46435e5954222e2c"]]},{"id":"79e2a619316b8233","type":"debug","z":"48471ba4dee7be2d","name":"debug 18","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":40,"wires":[]},{"id":"40809a4ad576ff82","type":"server-state-changed","z":"48471ba4dee7be2d","d":true,"name":"","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"zone.home","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"true","ifStateType":"bool","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":130,"y":120,"wires":[["bd83c7d5c2fe6da1"],["a9608179473d1b6c"]]},{"id":"bd83c7d5c2fe6da1","type":"debug","z":"48471ba4dee7be2d","name":"debug 19","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":360,"y":80,"wires":[]},{"id":"a9608179473d1b6c","type":"debug","z":"48471ba4dee7be2d","name":"debug 20","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":360,"y":140,"wires":[]},{"id":"fef4bbcb976f16ea","type":"api-current-state","z":"48471ba4dee7be2d","d":true,"name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":100,"y":80,"wires":[[]]},{"id":"4d3b01d9374a9520","type":"ha-get-entities","z":"48471ba4dee7be2d","name":"","server":"5e6a682a.ce8468","version":1,"rules":[{"property":"attributes.Zones","logic":"is","value":"","valueType":"re"}],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":250,"y":620,"wires":[["e5bb83af404257e1"]]},{"id":"e5bb83af404257e1","type":"debug","z":"48471ba4dee7be2d","name":"debug 21","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":400,"y":620,"wires":[]},{"id":"684f8eba0e4d5543","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":620,"wires":[["4d3b01d9374a9520"]]},{"id":"2a717759f10e3457","type":"server-state-changed","z":"48471ba4dee7be2d","name":"Motion Event Listener [Bedroom]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"switch.motion_2","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[],"x":170,"y":820,"wires":[[],[]]},{"id":"57cbd278ec919f3a","type":"switch","z":"48471ba4dee7be2d","name":"GET Occupancy Mode","property":"system_occupancy_mode","propertyType":"global","rules":[{"t":"eq","v":"HOME","vt":"str"},{"t":"eq","v":"AWAY","vt":"str"},{"t":"eq","v":"SLEEP","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":460,"y":820,"wires":[[],[],[]]},{"id":"752db322e9e77f58","type":"file in","z":"48471ba4dee7be2d","name":"Load File","filename":"path","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":220,"y":560,"wires":[["fff16931465163ca"]]},{"id":"100733489b01307b","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"path","v":"/config/toggle_switch.yaml","vt":"str"},{"p":"output_path","v":"/config/auto_toggle_switch.yaml","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":90,"y":560,"wires":[["752db322e9e77f58"]]},{"id":"9b26b59730199e51","type":"function","z":"48471ba4dee7be2d","name":"Toggle Switches Generator Function","func":"// Function Template (v1.1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nvar utils = global.get(\"utils\");\n\nvar toggleEntityId = \"input_boolean.template_presence_detection_toggle\";\nvar triggerEntityId = \"binary_sensor.template_motion_sensor\";\nvar triggerEntityState = \"on\";\nvar entity_type = \"switches\";\nvar switch_id = \"test_slatt\";\n\n\nvar yamlObject = utils.generateYamlTemplateObject(entity_type);\n\nvar friendly_name = \"Friendly Test Switch\"\n\nvar valueTemplate = utils.generateToggleSwitchValueTemplate(toggleEntityId, triggerEntityId, triggerEntityState);\n\nconst turnOnOffObject = utils.createTurnOnOffObject('input_select.select_option', {\n    turn_on: {\n        entity_id: 'input_select.system_occupancy_mode',\n        data: {\n            option: 'GUEST'\n        }\n    },\n    turn_off: {\n        entity_id: 'input_select.system_occupancy_mode',\n        data: {\n            option: 'UNKNOWN'\n        }\n    }\n});\n\nconst turnOnAction = {\n    service: 'switch.turn_on',\n    entity_id: 'switch.example_switch'\n};\n\nconst turnOffAction = {\n    service: 'switch.turn_off',\n    entity_id: 'switch.example_switch'\n};\n\nvar iconTemplate = utils.createIconTemplate(\"test-icon\");\n\nvar switchObject = utils.generateTemplateSwitchObject(switch_id, friendly_name, valueTemplate, turnOnAction, turnOffAction, iconTemplate)\n\nyamlObject = utils.addEntityToTemplateObject(yamlObject, entity_type, switchObject);\n\nnode.warn(\"output\");\nnode.warn(yamlObject);\n\nnode.warn(\"input\");\nnode.warn(msg.payload[0]);\nmsg.payload = yamlObject;\n\nreturn msg;\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\nfunction generateToggleValueTemplate(toggleEntityId, triggerEntityId, triggerEntityState) {\n    return `{% if is_state('${toggleEntityId}', 'on') %}\n        {{ is_state('${triggerEntityId}', '${triggerEntityState}') }}\n        {% else %}\n        {{ is_state('${toggleEntityId}', 'on') }}\n        {% endif %}`;\n}\n\nfunction generateToggleSwitchValueTemplate(toggleEntityId, triggerEntityId, triggerEntityState) {\n    return `{% if is_state('${toggleEntityId}', 'on') %}\n        {{ is_state('${triggerEntityId}', '${triggerEntityState}') }}\n        {% else %}\n        {{ is_state('${toggleEntityId}', 'on') }}\n        {% endif %}`;\n}\n\nfunction generateObjectRepresentation(toggleEntityId, triggerEntityId, triggerEntityState) {\n    const valueTemplate = utils.generateToggleSwitchValueTemplate(toggleEntityId, triggerEntityId, triggerEntityState);\n    const switchObject = {\n        platform: 'template',\n        switches: {\n            template_motion: {\n                friendly_name: 'TEMPLATE Motion',\n                value_template: valueTemplate,\n                turn_on: [\n                    {\n                        service: 'input_boolean.turn_on',\n                        entity_id: toggleEntityId\n                    }\n                ],\n                turn_off: [\n                    {\n                        service: 'input_boolean.turn_off',\n                        entity_id: toggleEntityId\n                    }\n                ],\n                icon_template: `{% if is_state('${toggleEntityId}', 'on') %}\n                                  mdi:motion-sensor\n                                {% else %}\n                                  mdi:motion-sensor-off\n                                {% endif %}`\n            }\n        }\n    };\n    return [switchObject];\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":560,"wires":[["5adb93a30d5b14e4"]]},{"id":"5d00d8ddae0f8f69","type":"file","z":"48471ba4dee7be2d","d":true,"name":"","filename":"output_path","filenameType":"msg","appendNewline":true,"createDir":false,"overwriteFile":"true","encoding":"none","x":920,"y":560,"wires":[["6d6ec42489777a2b"]]},{"id":"fff16931465163ca","type":"yaml","z":"48471ba4dee7be2d","property":"payload","name":"","x":350,"y":560,"wires":[["9b26b59730199e51"]]},{"id":"5adb93a30d5b14e4","type":"yaml","z":"48471ba4dee7be2d","property":"payload","name":"","x":790,"y":560,"wires":[["5d00d8ddae0f8f69","6d6ec42489777a2b"]]},{"id":"6d6ec42489777a2b","type":"debug","z":"48471ba4dee7be2d","name":"debug 24","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1080,"y":480,"wires":[]},{"id":"ec1576a8b8f9ab5d","type":"subflow:6afebbe9d3799590","z":"48471ba4dee7be2d","name":"","x":470,"y":680,"wires":[[]]},{"id":"d4a37f9373c455a4","type":"function","z":"48471ba4dee7be2d","name":"Get Entity","func":"// Function Template (v1.1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nvar utils = global.get(\"utils\");\n\nvar entities = global.get(\"entities\");\nvar entityId = msg.entity_id;\n\n//return error if no entity id passed\nif (!utils.exists(entityId)) {\n    return utils.status(\"Invalid/Missing Entity ID\");\n}\n\n// Return error if entities not loaded from .storage\nif (!utils.exists(entities)) {\n    return utils.status(\"Entities not loaded\");\n}\n\nconst entityDictionary = mapArrayToDict(entities.entities);\nnode.warn(entityDictionary);\n\n\nreturn msg; \n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\nfunction mapArrayToDict(entities) {\n    const entityDict = {};\n\n    entities.forEach(entity => {\n        entityDict[entity.entity_id] = entity;\n    });\n\n    return entityDict;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":760,"wires":[["489054bcdb26749a"]]},{"id":"489054bcdb26749a","type":"debug","z":"48471ba4dee7be2d","name":"debug 25","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":550,"y":760,"wires":[]},{"id":"88bf9d662d18d1dc","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"payload"},{"p":"entity_id","v":"light.ceiling_light_1","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":250,"y":760,"wires":[["d4a37f9373c455a4"]]},{"id":"1fd9e9a86227cfd0","type":"function","z":"48471ba4dee7be2d","name":"Map Entities","func":"// Function Template (v1.1)\n// Just a function template..\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : current entity state value\n// msg.global_id            : Global Context identifier / Entity ID\n//\n// -*- OUTPUTS -*-\n// msg.payload              : global variable value\n// msg.global_id            : Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\nvar entities = msg.payload.data.entities;\nvar key = msg.payload.key;\n\n// Return error if entities not provided\nif (!utils.exists(entities)) {\n    return utils.status(\"Entities not provided\");\n}\n\n// Return error if key not provided\nif (!utils.exists(key)) {\n    return utils.status(\"Key not provided\");\n}\n\nconst entityDictionary = utils.mapArrayToDict(entities, key);\nmsg.payload = entityDictionary;\n\nnode.warn(entityDictionary);\nreturn msg; \n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\nfunction mapArrayToDict(entities, key) {\n    const entityDict = {};\n\n    entities.forEach(entity => {\n        entityDict[entity[key]] = entity;\n    });\n\n    return entityDict;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":850,"y":620,"wires":[["4cd10bde825259bd"]]},{"id":"373bbb19c1c1a76f","type":"inject","z":"48471ba4dee7be2d","name":"Map Entity Registry Context","props":[{"p":"payload.key","v":"entity_id","vt":"str"},{"p":"payload.data","v":"core.entity_registry","vt":"global"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":640,"y":620,"wires":[["1fd9e9a86227cfd0"]]},{"id":"4cd10bde825259bd","type":"debug","z":"48471ba4dee7be2d","name":"debug 26","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1000,"y":620,"wires":[]},{"id":"5b9e6882fd4ef657","type":"comment","z":"48471ba4dee7be2d","name":"","info":"todo:\n\nmake function for retrieving entity from system.entities? \nor access directly from global?\n\nhow am i doing occupancy? by area/sensor?\n\ndo all areas in one function?\n\nafter timeout, for each area in system.areas, check if area has sensors then if last motion was over x ago\n\noccupied = false until at least 1 sensor in the area has been triggered within x\n\ndo this for each area in system.areas\n\nmight be useful to grab the last occupied zone for edge cases.\n(entity states can be grabbed using global.get(homeassistant.homeAssistant.states))\n\nI can check if the last occupied zone is the \"entry_exit_zone\" \n(a new global that should just be set from a helper)\n\nif it is, theres a good chance i'm away, otherwise im probably just not moving\n(sleeping/eating/watching tv/at desk)\n\nGUEST MODE???\nif guest mode is active, keep things the way they are (multiple areas can be occupied at a time)\n\nif its disabled, make occupancy follow the last occupied zone, so if the bedroom is the last occupied,\nbut I came from the living room, it should check the last_updated value against the last_occupied object\n\n\norrrr, just use the last_occupied objecet since I can only be in one place at a time???\ncompare directly against last_occupied in isAreaOccupied calculation?","x":560,"y":420,"wires":[]},{"id":"f78ad671aeeb693c","type":"api-current-state","z":"48471ba4dee7be2d","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"switch.motion_2","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":310,"y":480,"wires":[["95c2ce1ced55bcd2"]]},{"id":"ca2c89db345ddbaf","type":"api-get-history","z":"48471ba4dee7be2d","name":"","server":"5e6a682a.ce8468","version":1,"startDate":"","endDate":"","entityId":"switch.motion_2","entityIdType":"equals","useRelativeTime":false,"relativeTime":"","flatten":true,"outputType":"array","outputLocationType":"msg","outputLocation":"payload","x":250,"y":420,"wires":[["ebf4d6f4b9c8a558"]]},{"id":"ebf4d6f4b9c8a558","type":"debug","z":"48471ba4dee7be2d","name":"debug 28","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":400,"y":420,"wires":[]},{"id":"95c2ce1ced55bcd2","type":"debug","z":"48471ba4dee7be2d","name":"debug 29","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":520,"y":480,"wires":[]},{"id":"e410458ab34898d4","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":460,"wires":[["ca2c89db345ddbaf","f78ad671aeeb693c"]]},{"id":"fd58260800a8430e","type":"function","z":"48471ba4dee7be2d","name":"Calculate Occupied Areas","func":"// Calculate Area Occupancy\n// \n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload.areas                : key/value area_registry object\n// msg.payload.entities             : key/value entity_registry object\n// msg.payload.states               : homeassistant states object\n// msg.payload.occupancy_timeout    : occupancy timeout value\n//\n// -*- OUTPUTS -*-\n// msg.payload                      : areas object\n// msg.global_id                    : *Actual Global Context identifier\n// ******************************************************************\n\n/*** START ***/\nconst utils = global.get(\"utils\");\nconst occupancyTimeout = msg.payload.occupancy_timeout;\n\n// Return if no system_occupancy_timeout present in input\nif (!utils.exists(occupancyTimeout)){\n    return [null, utils.status(\"missing occupancy_timeout property in payload\")]\n};\n\n// Main logic to check area occupancy\nlet areas = msg.payload.areas;\nconst entities = msg.payload.entities;\nconst states = msg.payload.states;\n\nnode.warn(\"states\");\nnode.warn(states);\n\n// Check each area for occupancy\nfor (const areaId in areas) {\n\n    const area = areas[areaId];\n    //node.warn(\"area\");\n    node.warn(areaId);\n    //node.warn(area);\n\n    area.occupied = isAreaOccupied(area, entities, occupancyTimeout);\n}\n\n// Output the result (areas object with added \"occupied\" attribute)\nmsg.payload = areas;\n\n\nreturn [msg, null];\n/*** END ***/\n\n/*** HELPER FUNCTIONS ***/\n\n// Helper function to check if an area is occupied\nfunction isAreaOccupied(area, entities, occupancyTimeout) {\n\n    \n\n    // Call the function to get entities in areas\n    const entitiesInArea = getEntitiesInArea(area, entities);\n\n    /*var occupancy = entitiesInAreas.filter(function (entity) {\n        return entity.faction === \"Rebels\";\n    });*/\n\n    for (const entity in entitiesInArea){\n        node.warn(\"ENTITY\");\n        node.warn(entitiesInArea[entity]);\n\n        node.warn(\"ENTITY_STATE\");\n        var state = currentState(entitiesInArea[entity].entity_id)\n        node.warn(state);\n\n        if (state.state == \"on\"){\n            return true;\n        }\n\n        var lastChanged = utils.exists(state.last_changed) ? state.last_changed : state.last_updated;\n\n        if (utils.exists(lastChanged)) {\n\n            lastChanged = new Date(lastChanged).getTime();\n            \n            const lastMotionTimeThreshold = Date.now() - occupancyTimeout;\n            node.warn(`lastMotionTimeThreshold: ${lastMotionTimeThreshold}`);\n            node.warn(`lastChanged: ${lastChanged}`);\n\n            // Area is occupied\n            if (lastChanged > lastMotionTimeThreshold){\n                node.warn(\"true bitch\");\n                \n                updateLastOccupied(area.id, lastChanged)\n                return true;\n            };\n        }\n\n\n    }\n\n    return false;\n}\n\n// Helper function to check if an entity is a binary sensor\nfunction isBinarySensor(entity) {\n    // You can adjust this condition based on how you identify binary sensors\n    return entity.platform === \"zha\" && entity.entity_id.startsWith(\"binary_sensor.\");\n}\n\n// Helper function to calculate the last occupied zone\nfunction calculateLastOccupiedZone(areas, entities) {\n    let lastOccupiedZone = global.get(\"system.last_occupied_zone\");\n\n    for (const entityKey in entities) {\n        const entity = entities[entityKey];\n        //var lastChanged = null;\n        var lastChanged = utils.exists(states[entityKey].last_changed) ? states[entityKey].last_changed : states[entityKey].last_updated;\n\n        if (isBinarySensor(entity) && entity.area_id) {\n            //node.warn(\"Entity:\");\n            //node.warn(entityKey);\n            //node.warn(entity);\n            //node.warn(\"State:\");\n            //node.warn(states[entityKey].last_changed);\n        }\n\n        if (isBinarySensor(entity) && entity.area_id && utils.exists(lastChanged)) {\n\n            node.warn(\"Entity:\");\n            node.warn(entity);\n            lastChanged = new Date(lastChanged).getTime();\n\n            if (!lastOccupiedZone || lastChanged > new Date(lastOccupiedZone.timestamp).getTime()) {\n                lastOccupiedZone.area = entity.area_id;\n                lastOccupiedZone.timestamp = lastChanged;\n                lastOccupiedZone.entity = entity;\n            }\n        }\n    }\n\n    return lastOccupiedZone;\n}\n\n\n\n// Helper function to get all entities for each area\nfunction getEntitiesInArea(area, entities) {\n    const entitiesInArea = [];\n\n    for (const entityId in entities) {\n        if (isBinarySensor(entities[entityId]) && entities[entityId].area_id == area.id) {\n            //node.warn(\"binary sensor:\");\n            //node.warn(area);\n            //node.warn(entities[entityId]);\n            entitiesInArea.push(entities[entityId]);\n        }\n    }\n\n    // Log the result for debugging\n    //node.warn(`Entities in Area: ${area.id}`);\n    //node.warn(entitiesInArea);\n    return entitiesInArea;\n}\n\nfunction currentState(entityId){\n    return global.get(\"homeassistant.homeAssistant.states\")[entityId];\n}\n\nfunction updateLastOccupied(areaId, occupied) {\n\n    var lastOccupied = global.get(\"system.occupancy.last_occupied\");\n    node.warn(\"last Occupied\");\n    node.warn(lastOccupied);\n    node.warn(\"Occupied\");\n    node.warn(occupied);\n    \n    // Set current value as last_updated if it doesnt already exist\n    if (!utils.exists(lastOccupied)) return setLastOccupied(areaId, occupied);\n\n    // Set current value as last_updated if timestamp is more recent\n    if (occupied > lastOccupied.timestamp) setLastOccupied(areaId, occupied);\n\n}\n\nfunction setLastOccupied(area, timestamp){\n\n    global.set(\"system.occupancy.last_occupied\", {area, timestamp});\n    //global.set(\"system.occupancy.last_occupied.area\", area);\n    //global.set(\"system.occupancy.last_occupied.timestamp\", timestamp);\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":340,"wires":[["4b927695a810226f"],["73aa06b914adcd17"]]},{"id":"d9513dc14197a5f7","type":"subflow:20b25024f4366686","z":"48471ba4dee7be2d","name":"","x":250,"y":340,"wires":[["fd58260800a8430e"]]},{"id":"10f8cfba68d1bd08","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"delay","v":"system.occupancy.timeout","vt":"str"},{"p":"payload.areas","v":"system.areas","vt":"global"},{"p":"payload.entities","v":"system.entities","vt":"global"},{"p":"payload.states","v":"homeassistant.homeAssistant.states","vt":"global"},{"p":"payload.occupancy_timeout","v":"system_occupancy_timeout","vt":"global"},{"p":"global_id","v":"system.occupancy.areas","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":90,"y":340,"wires":[["d9513dc14197a5f7"]]},{"id":"5357dfd8a7c32f84","type":"debug","z":"48471ba4dee7be2d","name":"debug 32","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":900,"y":340,"wires":[]},{"id":"73aa06b914adcd17","type":"debug","z":"48471ba4dee7be2d","name":"debug 33","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":700,"y":400,"wires":[]},{"id":"4b927695a810226f","type":"subflow:d45c7673c797b311","z":"48471ba4dee7be2d","name":"","x":730,"y":340,"wires":[["5357dfd8a7c32f84"]]},{"id":"48631e891364beea","type":"subflow:20b25024f4366686","z":"48471ba4dee7be2d","name":"","x":230,"y":220,"wires":[["e4dc44d9587209bc"]]},{"id":"6d4e0bd83f81756f","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"delay","v":"system.occupancy.timeout","vt":"str"},{"p":"payload.areas","v":"system.areas","vt":"global"},{"p":"payload.entities","v":"system.entities","vt":"global"},{"p":"payload.states","v":"homeassistant.homeAssistant.states","vt":"global"},{"p":"payload.occupancy_timeout","v":"system_occupancy_timeout","vt":"global"},{"p":"global_id","v":"system.occupancy.areas","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":90,"y":220,"wires":[["48631e891364beea"]]},{"id":"f386e6675bf17af0","type":"subflow:d45c7673c797b311","z":"48471ba4dee7be2d","name":"","x":650,"y":220,"wires":[[]]},{"id":"e4dc44d9587209bc","type":"subflow:a444bbb042f71f91","z":"48471ba4dee7be2d","name":"","x":430,"y":220,"wires":[["f386e6675bf17af0"]]},{"id":"4d4d813d72f38a66","type":"file in","z":"48471ba4dee7be2d","name":"Load File","filename":"path","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":540,"y":940,"wires":[["a80fe821291d09fb"]]},{"id":"af5be2541a0517dd","type":"inject","z":"48471ba4dee7be2d","name":"","props":[{"p":"path","v":"/config/packages/node-red/sensor.yaml","vt":"str"},{"p":"output_path","v":"/config/packages/node-red/generated_sensors.yaml","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":410,"y":940,"wires":[["4d4d813d72f38a66"]]},{"id":"a80fe821291d09fb","type":"yaml","z":"48471ba4dee7be2d","property":"payload","name":"","x":670,"y":940,"wires":[["5507deba2c4992e0"]]},{"id":"5507deba2c4992e0","type":"debug","z":"48471ba4dee7be2d","name":"debug 89","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":840,"y":940,"wires":[]},{"id":"d56d06fd.266a98","type":"debug","z":"d40c7dae.38386","name":"Above Threshold","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1710,"y":120,"wires":[]},{"id":"1f026e8a.3f0a79","type":"debug","z":"d40c7dae.38386","name":"Below Threshold","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1700,"y":340,"wires":[]},{"id":"c41e6c32.d41e4","type":"debug","z":"d40c7dae.38386","name":"Within Threshold DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1230,"y":360,"wires":[]},{"id":"ea731a76.e25d28","type":"api-call-service","z":"d40c7dae.38386","name":"TURN AC ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":["climate.pb_ac05"],"data":"{\"hvac_mode\":\"cool\"}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1490,"y":120,"wires":[["d56d06fd.266a98"]]},{"id":"3f8d8da0.aee98a","type":"api-current-state","z":"d40c7dae.38386","name":"IS AC ON","server":"575e2eea.2cdb1","version":3,"outputs":2,"halt_if":"auto","halt_if_type":"str","halt_if_compare":"is","entity_id":"climate.pb_ac05","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1260,"y":120,"wires":[["8a100149.598b5"],["ea731a76.e25d28"]]},{"id":"9981e601.0d2c","type":"api-current-state","z":"d40c7dae.38386","name":"IS AC OFF","server":"575e2eea.2cdb1","version":3,"outputs":2,"halt_if":"auto","halt_if_type":"str","halt_if_compare":"is_not","entity_id":"climate.pb_ac05","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1260,"y":300,"wires":[["59eed39.94bca2c"],["c035f455.645f08"]]},{"id":"8a100149.598b5","type":"debug","z":"d40c7dae.38386","name":"AC already ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1500,"y":60,"wires":[]},{"id":"59eed39.94bca2c","type":"debug","z":"d40c7dae.38386","name":"AC already OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1500,"y":280,"wires":[]},{"id":"c035f455.645f08","type":"api-call-service","z":"d40c7dae.38386","name":"TURN AC OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":["climate.pb_ac05"],"data":"{\"hvac_mode\":\"off\"}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1500,"y":340,"wires":[["1f026e8a.3f0a79"]]},{"id":"a039336b.1bead8","type":"function","z":"d40c7dae.38386","name":"Climate Control Function","func":"//Climate Control Routine\n// This routine determines wheter to turn your cooling device(s) on/off \n// based on incoming temperature data. Property of X.\n\n//Sensor Variables\nvar tempValues      = flow.get([\"temp1\", \"temp2\", \"temp3\", \"temp4\"])\n//var humidityValues  = flow.get([\"hum1\", \"hum2\", \"hum3\", \"hum4\"])\n\n//Config Variables\nvar realAvgTemp = parseFloat(global.get(\"belcave_realavgtemp\"));\nvar avgtemp     = global.get(\"belcave_avg_temp_ui\")\nvar mode        = global.get(\"belcave_cc_mode\")\nvar speed       = global.get(\"belcave_cc_speed\")\n\n//Function Variables\n//var values          = flow.get([\"realavgtemp\", \"avgtemp\",\"mode\",\"speed\"])\nvar modeModifier    = 1;\nvar speedModifier   = 1;\nvar newMsg          = ''\nvar ccAction = ''\n//var newMsg = { payload: msg.payload.length };\n\n//Speed Setting\nswitch(speed) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n// Temperature Control Logic - tbc\nvar minTemp = avgtemp - speedModifier;\nvar maxTemp = avgtemp + speedModifier;\n//Mode\nswitch(mode) {\n  case \"A/C\":\n    // Air Conditioning\n    modeModifier = parseFloat(1);\n    break;\n  case \"HEAT\":\n    // Heating\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"FAN\":\n    // Fan\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"AUTO\":\n    // Auto, heats and cools as needed, TBC\n    modeModifier = parseFloat(0.420);\n    break;\n  default:\n    // OFF/ERROR, TBC, LOG?\n    modeModifier = parseFloat(0.69);\n}\nswitch(true) {\n  case realAvgTemp < minTemp:\n    // Below Threshold\n    ccAction = 'OFF'; //or HEAT - add functionality for heating? Not really needed tho SIKE\n    break;\n  case realAvgTemp > maxTemp:\n    // Above Threshold\n    ccAction = 'COOL';\n    break;\n  default:\n    // Within Threshold / Exceptions\n    ccAction = 'HOLD';\n    break;\n}\nnode.warn(\"speed: \"+ speed);\nnode.warn(\"speedm: \"+ speedModifier);\nnode.warn(\"MINT: \"+ minTemp);\nnode.warn(\"MAXT: \"+ maxTemp);\nnode.warn(\"realavgtemp: \"+ realAvgTemp);\n\n//End Temperature Control Logic\nnewMsg = { payload: ccAction }\nflow.set(\"currentaction\", ccAction);\nreturn newMsg;\n//Air Condititioning Function - TODO\nfunction setSpeed(s, sM){\n    //Speed Setting\n  switch(s) {\n    case \"Eco\":\n      // Eco\n      speedModifier = parseFloat(1);\n      break;\n    case \"420\":\n      // High\n      speedModifier = parseFloat(0.420);\n      break;\n    default:\n      // Normal\n      speedModifier = parseFloat(0.69);\n  }\n  //var one = Number(x);  //convert to a number\n  //var two = Number(y);  //convert to a number\n  //var result = one + two;\n  //node.warn(\"result: \"+ result);\n  //return result;\n  return speedModifier;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":200,"wires":[["eafc71b6.28bc8","abb7975.a3e0f68"]]},{"id":"724c5149.68c118","type":"debug","z":"d40c7dae.38386","name":"CC UI OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":540,"y":260,"wires":[]},{"id":"eafc71b6.28bc8","type":"debug","z":"d40c7dae.38386","name":"Climate Control DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":970,"y":100,"wires":[]},{"id":"32e6482.649e938","type":"api-call-service","z":"d40c7dae.38386","d":true,"name":"","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["light.bedside_lamp"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1340,"y":560,"wires":[[]]},{"id":"44984467.fb4a14","type":"inject","z":"d40c7dae.38386","d":true,"name":"10s inject trigger","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":120,"y":200,"wires":[["7e4f8afa.829524","784c89f8.df9ce8"]]},{"id":"7e4f8afa.829524","type":"debug","z":"d40c7dae.38386","name":"trigger DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":340,"y":140,"wires":[]},{"id":"615df0a.f115c9","type":"debug","z":"d40c7dae.38386","name":"trigger TRUE","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":550,"y":120,"wires":[]},{"id":"abb7975.a3e0f68","type":"switch","z":"d40c7dae.38386","name":"CC Device Switch","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"HEAT","vt":"str"},{"t":"eq","v":"COOL","vt":"str"},{"t":"eq","v":"OFF","vt":"str"},{"t":"eq","v":"HOLD","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":990,"y":200,"wires":[[],["3f8d8da0.aee98a"],["9981e601.0d2c"],["32e6482.649e938","c41e6c32.d41e4"]]},{"id":"784c89f8.df9ce8","type":"switch","z":"d40c7dae.38386","name":"GET CC UI Toggle","property":"belcave_cc_ui_toggle","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":330,"y":200,"wires":[["615df0a.f115c9","a039336b.1bead8"],["724c5149.68c118"]]},{"id":"9088b0243631510a","type":"api-get-history","z":"5995cd0b0ac9fdaf","name":"","server":"5e6a682a.ce8468","version":1,"startDate":"","endDate":"","entityId":"","entityIdType":"equals","useRelativeTime":false,"relativeTime":"","flatten":true,"outputType":"array","outputLocationType":"msg","outputLocation":"payload","x":650,"y":700,"wires":[["de0ec327bed274b1"]]},{"id":"997eb07f5f7d1121","type":"inject","z":"5995cd0b0ac9fdaf","name":"belcave s","props":[{"p":"payload.entity_id","v":"sensor.belcave_stairs_motion_illuminance","vt":"str"},{"p":"global_id","v":"belcave_stairs_illuminance_mean","vt":"str"},{"p":"start_datess","v":"","vt":"date"},{"p":"start_dates","v":"1672149661771","vt":"num"},{"p":"start_datesss","v":"2022-12-28T14:16:41","vt":"str"},{"p":"days","v":"7","vt":"num"},{"p":"debug_flag","v":"true","vt":"bool"},{"p":"config.output_location","v":"msg.result","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":100,"y":700,"wires":[["7ba180fc1c8ab2d8"]]},{"id":"186f73611c376342","type":"comment","z":"5995cd0b0ac9fdaf","name":"Todo steps","info":"# Steps for Anamoly detection\n1. retrieve entities via get entities node (array)\n2. set time window for comparison, maybe have a performance mode setting for \nslower/faster servers\n    - slow: 24hrs\n    - medium: 7 days\n    - fast: 2 weeks\n    - ultra: month (if availale, otherwise 2 next lowest setting window)\n    we can start off running it once a day and on restart and see how \n    responsive it is.\n3. retrieve history data for each entity seperately \n    (may have different anomoly values depending on sensor / light placement)\n4. run the same anomoly detection algorithm on each entities history to detect\nwhen the light comes on artificially.\n5. store this artificial threshold somewhere for each entity, maybe as a global\n\n# Steps for sunrise detection\n1. check if lux level is withih 1 and anomoly threshold for each entity\n2. if it is, sunlight has been detected\n\n# Steps for motion lighting auto/energy saving mode (name/mode structure tbc)\n1. when sunrise 9or artificial light?) is detected for a sensor (based off previous anomoly and sunrise)\nwe wont activate motion lighting similar to motion detection toggle for belcave\n2. should hook in just after motion detection toggle","x":660,"y":560,"wires":[]},{"id":"d97c400226b971d0","type":"debug","z":"5995cd0b0ac9fdaf","name":"debug 7","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1060,"y":640,"wires":[]},{"id":"882f3ae4f3c3f719","type":"inject","z":"5995cd0b0ac9fdaf","name":"landing","props":[{"p":"payload.entity_id","v":"sensor.landing_motion_sensor_illuminance","vt":"str"},{"p":"global_id","v":"landing_illuminance_mean","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":760,"wires":[["7ba180fc1c8ab2d8"]]},{"id":"a15e93e9071c6080","type":"inject","z":"5995cd0b0ac9fdaf","name":"kitchen","props":[{"p":"payload.entity_id","v":"sensor.kitchen_motion_sensor_illuminance","vt":"str"},{"p":"global_id","v":"kitcen_illuminance_mean","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":820,"wires":[["7ba180fc1c8ab2d8"]]},{"id":"92287e2ad08f090f","type":"function","z":"5995cd0b0ac9fdaf","name":"Format Date/Time Window [ISO]","func":"// Gets the past 24hr time window based on an incoming timestamp\nvar today = Date.now();\nvar yesterday = today - (86400 * 1000);\n\nvar today_date = new Date(today);\nvar yesterday_date = new Date(yesterday);\n/*\nnode.warn(today);\nnode.warn(today_date);\nnode.warn(yesterday);\nnode.warn(yesterday_date);\n//*/\n\n// Return via msg object\nmsg.today = today;\nmsg.yesterday = yesterday;\nvar properties = { \n    \"start_date\": yesterday_date.toISOString(),\n    \"end_date\": today_date.toISOString()\n    }\nmsg.payload = properties;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":980,"wires":[[]]},{"id":"1f8da73f098a4d2a","type":"inject","z":"5995cd0b0ac9fdaf","name":"belcave","props":[{"p":"payload.entity_id","v":"sensor.belcave_motion_sensor_illuminance","vt":"str"},{"p":"global_id","v":"belcave_illuminance_mean","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":640,"wires":[["7ba180fc1c8ab2d8"]]},{"id":"7ba180fc1c8ab2d8","type":"subflow:b0163a757372995f","z":"5995cd0b0ac9fdaf","name":"","x":410,"y":700,"wires":[["9c6abdc4a7f9f04c","9088b0243631510a"]]},{"id":"de0ec327bed274b1","type":"subflow:c503fec7b99f2355","z":"5995cd0b0ac9fdaf","name":"","x":840,"y":700,"wires":[["d97c400226b971d0","debc6da51f9bf475"]]},{"id":"9c6abdc4a7f9f04c","type":"debug","z":"5995cd0b0ac9fdaf","name":"debug 12","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":660,"y":640,"wires":[]},{"id":"4f62be45ca94265d","type":"function","z":"5995cd0b0ac9fdaf","name":"Process History","func":"// Calculates the average light level to try and get an idea of\n// when artifical light is in use and sunset/sunrise.\nvar sensorHistory = msg.payload;\nvar runningTotal = 0;\nsensorHistory.forEach(function(element) {\n    //node.warn(element);\n    runningTotal += parseFloat(element.state);\n});\nnode.warn(\"total: \" + runningTotal);\nvar mean = runningTotal / sensorHistory.length;\nnode.warn(\"mean: \" + mean);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":680,"y":940,"wires":[["44597d1433d1635f"]]},{"id":"44597d1433d1635f","type":"debug","z":"5995cd0b0ac9fdaf","name":"debug 9","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":840,"y":940,"wires":[]},{"id":"debc6da51f9bf475","type":"subflow:5c17ae8417803497","z":"5995cd0b0ac9fdaf","name":"","x":1110,"y":700,"wires":[[]]},{"id":"d8782584c6330645","type":"server-state-changed","z":"5995cd0b0ac9fdaf","name":"Event Poller [Belcave]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_text.event_poller","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"1 day","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.entity_id","propertyType":"msg","value":"sensor.belcave_motion_sensor_illuminance","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"belcave_illuminance_mean","valueType":"str"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"}],"x":140,"y":40,"wires":[["52ec1116d1b459b1"],[]]},{"id":"6ee910cd38da2d3a","type":"server-state-changed","z":"5995cd0b0ac9fdaf","name":"Event Poller [Belcave Stairs]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_text.event_poller","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"1 day","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.entity_id","propertyType":"msg","value":"sensor.belcave_stairs_motion_illuminance","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"belcave_stairs_illuminance_mean","valueType":"str"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"}],"x":160,"y":100,"wires":[["a0c8c05e11b2cdf6"],[]]},{"id":"cd76d961ca4f8017","type":"server-state-changed","z":"5995cd0b0ac9fdaf","name":"Event Poller [Landing]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_text.event_poller","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"1 day","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.entity_id","propertyType":"msg","value":"sensor.landing_motion_sensor_illuminance","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"landing_illuminance_mean","valueType":"str"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"}],"x":140,"y":160,"wires":[["df7787e2ea8571be"],[]]},{"id":"4cdd2def4cc20b37","type":"server-state-changed","z":"5995cd0b0ac9fdaf","name":"Event Poller [Kitchen]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_text.event_poller","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"1 day","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":false,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload.entity_id","propertyType":"msg","value":"sensor.kitchen_motion_sensor_illuminance","valueType":"str"},{"property":"global_id","propertyType":"msg","value":"kitcen_illuminance_mean","valueType":"str"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"}],"x":140,"y":220,"wires":[["8c9f18fc679255bf"],[]]},{"id":"86ec932b60b3bd04","type":"api-get-history","z":"5995cd0b0ac9fdaf","name":"","server":"5e6a682a.ce8468","version":1,"startDate":"","endDate":"","entityId":"","entityIdType":"equals","useRelativeTime":false,"relativeTime":"","flatten":true,"outputType":"array","outputLocationType":"msg","outputLocation":"payload","x":670,"y":40,"wires":[["5bd2f5695bde82e5"]]},{"id":"52ec1116d1b459b1","type":"subflow:b0163a757372995f","z":"5995cd0b0ac9fdaf","name":"","x":450,"y":40,"wires":[["86ec932b60b3bd04"]]},{"id":"5bd2f5695bde82e5","type":"subflow:c503fec7b99f2355","z":"5995cd0b0ac9fdaf","name":"","x":860,"y":40,"wires":[["4de1500236618def"]]},{"id":"4de1500236618def","type":"subflow:5c17ae8417803497","z":"5995cd0b0ac9fdaf","name":"","x":1100,"y":40,"wires":[[]]},{"id":"875c811946030cdb","type":"api-get-history","z":"5995cd0b0ac9fdaf","name":"","server":"5e6a682a.ce8468","version":1,"startDate":"","endDate":"","entityId":"","entityIdType":"equals","useRelativeTime":false,"relativeTime":"","flatten":true,"outputType":"array","outputLocationType":"msg","outputLocation":"payload","x":670,"y":100,"wires":[["287c4f9c331a7a73"]]},{"id":"a0c8c05e11b2cdf6","type":"subflow:b0163a757372995f","z":"5995cd0b0ac9fdaf","name":"","x":450,"y":100,"wires":[["875c811946030cdb"]]},{"id":"287c4f9c331a7a73","type":"subflow:c503fec7b99f2355","z":"5995cd0b0ac9fdaf","name":"","x":860,"y":100,"wires":[["d4ceb995cd3688af"]]},{"id":"d4ceb995cd3688af","type":"subflow:5c17ae8417803497","z":"5995cd0b0ac9fdaf","name":"","x":1100,"y":100,"wires":[[]]},{"id":"98f5fa99a48275db","type":"api-get-history","z":"5995cd0b0ac9fdaf","name":"","server":"5e6a682a.ce8468","version":1,"startDate":"","endDate":"","entityId":"","entityIdType":"equals","useRelativeTime":false,"relativeTime":"","flatten":true,"outputType":"array","outputLocationType":"msg","outputLocation":"payload","x":670,"y":160,"wires":[["26479c58f92968b6"]]},{"id":"df7787e2ea8571be","type":"subflow:b0163a757372995f","z":"5995cd0b0ac9fdaf","name":"","x":450,"y":160,"wires":[["98f5fa99a48275db"]]},{"id":"26479c58f92968b6","type":"subflow:c503fec7b99f2355","z":"5995cd0b0ac9fdaf","name":"","x":860,"y":160,"wires":[["e72e9d9ec37bf41f"]]},{"id":"e72e9d9ec37bf41f","type":"subflow:5c17ae8417803497","z":"5995cd0b0ac9fdaf","name":"","x":1100,"y":160,"wires":[[]]},{"id":"8fc790dc3c190500","type":"api-get-history","z":"5995cd0b0ac9fdaf","name":"","server":"5e6a682a.ce8468","version":1,"startDate":"","endDate":"","entityId":"","entityIdType":"equals","useRelativeTime":false,"relativeTime":"","flatten":true,"outputType":"array","outputLocationType":"msg","outputLocation":"payload","x":670,"y":220,"wires":[["04a848eb538fc9a6"]]},{"id":"8c9f18fc679255bf","type":"subflow:b0163a757372995f","z":"5995cd0b0ac9fdaf","name":"","x":450,"y":220,"wires":[["8fc790dc3c190500"]]},{"id":"04a848eb538fc9a6","type":"subflow:c503fec7b99f2355","z":"5995cd0b0ac9fdaf","name":"","x":860,"y":220,"wires":[["24578cc4e0720d5f"]]},{"id":"24578cc4e0720d5f","type":"subflow:5c17ae8417803497","z":"5995cd0b0ac9fdaf","name":"","x":1100,"y":220,"wires":[[]]},{"id":"f9387b51e8fb663b","type":"server-state-changed","z":"5995cd0b0ac9fdaf","d":true,"name":"Sun State [Belcave]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sun.sun","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"config.global_lux","propertyType":"msg","value":"belcave_illuminance_average","valueType":"str"},{"property":"config.global_lux_mean","propertyType":"msg","value":"belcave_illuminance_mean","valueType":"str"},{"property":"config.luxdebug","propertyType":"msg","value":"debug_number","valueType":"str"},{"property":"config.luxlanding","propertyType":"msg","value":"landing_illuminance_average","valueType":"global"},{"property":"delay","propertyType":"msg","value":"updater_frequency","valueType":"global"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"},{"property":"light","propertyType":"msg","value":"light.bc_l1_local","valueType":"str"}],"x":110,"y":1180,"wires":[["68fc39447a2a9bf0"]]},{"id":"14689ff33422ad78","type":"debug","z":"5995cd0b0ac9fdaf","name":"LIGHTS ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":750,"y":1220,"wires":[]},{"id":"f7d1f0091e125391","type":"debug","z":"5995cd0b0ac9fdaf","name":"LIGHTS OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":750,"y":1120,"wires":[]},{"id":"4021fc5cf869713c","type":"subflow:2802501265df2123","z":"5995cd0b0ac9fdaf","name":"","x":520,"y":1180,"wires":[["f7d1f0091e125391","f0319082bffdedc7"],["14689ff33422ad78","be2d44cc757fa4fe"]]},{"id":"be2d44cc757fa4fe","type":"api-call-service","z":"5995cd0b0ac9fdaf","name":"Lights ON","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":740,"y":1280,"wires":[[]]},{"id":"f0319082bffdedc7","type":"api-call-service","z":"5995cd0b0ac9fdaf","name":"Lights OFF","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":750,"y":1060,"wires":[[]]},{"id":"68fc39447a2a9bf0","type":"api-call-service","z":"5995cd0b0ac9fdaf","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"counter","service":"reset","areaId":[],"deviceId":[],"entityId":["counter.loop_counter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":290,"y":1180,"wires":[["4021fc5cf869713c"]]},{"id":"50543227d2d6661d","type":"server-state-changed","z":"cd7a39bb5337c9b5","name":"","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sensor.belcave_motion_sensor_illuminance","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":230,"y":780,"wires":[["6415faab1dbee1fe"]]},{"id":"6415faab1dbee1fe","type":"switch","z":"cd7a39bb5337c9b5","name":"","property":"payload","propertyType":"msg","rules":[{"t":"btwn","v":"2","vt":"num","v2":"140","v2t":"num"}],"checkall":"true","repair":false,"outputs":1,"x":510,"y":780,"wires":[["e5e4d6d6d5f4531c"]]},{"id":"e5e4d6d6d5f4531c","type":"api-call-service","z":"cd7a39bb5337c9b5","d":true,"name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bc_l1_local"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":670,"y":780,"wires":[["a4f183a7784abef8"]]},{"id":"a4f183a7784abef8","type":"debug","z":"cd7a39bb5337c9b5","name":"turned on","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":840,"y":780,"wires":[]},{"id":"acb0daac6bec1d1f","type":"server-state-changed","z":"cd7a39bb5337c9b5","name":"","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sensor.belcave_stairs_motion_illuminance","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":230,"y":860,"wires":[["a68628cd9b5be488"]]},{"id":"a68628cd9b5be488","type":"switch","z":"cd7a39bb5337c9b5","name":"","property":"payload","propertyType":"msg","rules":[{"t":"btwn","v":"2","vt":"num","v2":"50","v2t":"num"}],"checkall":"true","repair":false,"outputs":1,"x":510,"y":860,"wires":[["b45dc6ac6e0782d1"]]},{"id":"b45dc6ac6e0782d1","type":"api-call-service","z":"cd7a39bb5337c9b5","d":true,"name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bc_l5_local"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":670,"y":860,"wires":[["e3bb35bb3d52fbd5"]]},{"id":"e3bb35bb3d52fbd5","type":"debug","z":"cd7a39bb5337c9b5","name":"turned on","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":840,"y":860,"wires":[]},{"id":"f81a37da11126165","type":"server-state-changed","z":"cd7a39bb5337c9b5","name":"","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sensor.landing_motion_sensor_illuminance","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":230,"y":940,"wires":[["4668749012d582b0"]]},{"id":"4668749012d582b0","type":"switch","z":"cd7a39bb5337c9b5","name":"","property":"payload","propertyType":"msg","rules":[{"t":"btwn","v":"2","vt":"num","v2":"140","v2t":"num"}],"checkall":"true","repair":false,"outputs":1,"x":510,"y":940,"wires":[["e7eafc94debd9ff2"]]},{"id":"e7eafc94debd9ff2","type":"api-call-service","z":"cd7a39bb5337c9b5","d":true,"name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bc_l2_local"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":670,"y":940,"wires":[["f0574419f9fc4cd6"]]},{"id":"f0574419f9fc4cd6","type":"debug","z":"cd7a39bb5337c9b5","name":"turned on","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":840,"y":940,"wires":[]},{"id":"527ca197379291dc","type":"debug","z":"cd7a39bb5337c9b5","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":930,"y":1080,"wires":[]},{"id":"2e9b493ea2429b88","type":"subflow:6afebbe9d3799590","z":"cd7a39bb5337c9b5","name":"","x":540,"y":1080,"wires":[["2ca6086e13ddcacf"]]},{"id":"6fe9c483ad5ee1c5","type":"subflow:01b24619b55abe60","z":"cd7a39bb5337c9b5","name":"","x":760,"y":1080,"wires":[["527ca197379291dc"]]},{"id":"17bddf717ac734c3","type":"inject","z":"cd7a39bb5337c9b5","name":"Location Triangulation","props":[{"p":"delay","v":"history_processing_rate","vt":"global"},{"p":"data","v":"{\"area\":\"\",\"type\":[\"person\"],\"key\":[],\"exclude\":[],\"attributes\":[\"latitude\",\"longitude\"],\"strict\":{\"area\":false,\"type\":false,\"key\":false,\"exclude\":true}}","vt":"json"},{"p":"global_id","v":"average_home_location","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":140,"y":1080,"wires":[["2e9b493ea2429b88"]]},{"id":"2ca6086e13ddcacf","type":"debug","z":"cd7a39bb5337c9b5","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":1020,"wires":[]},{"id":"78650a870cd3e534","type":"comment","z":"cd7a39bb5337c9b5","name":"Dusk-To-Dawn","info":"#when d-d is active\n1. If dusk and lux < 2, switch light on\n2. If dawn and lux >= 2, switch light off\n\nalso, allow multiple sensors to be passed incase for bigger areas \nand take use average lux level, so convert anything in the passed field to\nan array in function node\n\nGet average lux level at night time (lets say 6pm to 8 am) and use that as bottom threshold?\nwill need to update the process history subflow to accept a start/end time also...\n\n\n\n#when motion lighting and d-d is active\n1. if dusk and lux < 2 and below motion detected:\n    toggle motion light as usual\n2. if dawn and 2 <= lux < mean (no other light sources)\n    toggle light as usual\n\notherwise don't toggle motion lighting\n","x":100,"y":40,"wires":[]},{"id":"9da6799230065c79","type":"server-state-changed","z":"cd7a39bb5337c9b5","name":"Sun State [Belcave]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sun.sun","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"config.global_lux","propertyType":"msg","value":"belcave_illuminance_average","valueType":"str"},{"property":"config.global_lux_mean","propertyType":"msg","value":"belcave_illuminance_mean","valueType":"str"},{"property":"config.luxdebug","propertyType":"msg","value":"debug_number","valueType":"str"},{"property":"config.mode","propertyType":"msg","value":"entryway_scheduled_lighting_mode","valueType":"global"},{"property":"config.luxlanding","propertyType":"msg","value":"landing_illuminance_average","valueType":"global"},{"property":"delay","propertyType":"msg","value":"updater_frequency","valueType":"global"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"},{"property":"light","propertyType":"msg","value":"light.bc_l1_local","valueType":"str"}],"x":110,"y":80,"wires":[["2be39bc05515636f"]]},{"id":"0a5b85873989a3fd","type":"debug","z":"cd7a39bb5337c9b5","name":"LIGHTS ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":870,"y":120,"wires":[]},{"id":"14f82a629710920e","type":"debug","z":"cd7a39bb5337c9b5","name":"LIGHTS OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":890,"y":40,"wires":[]},{"id":"2be39bc05515636f","type":"subflow:2802501265df2123","z":"cd7a39bb5337c9b5","name":"","x":300,"y":80,"wires":[["ceac1751a36e477a"],["5b1c163d9e252d38"]]},{"id":"aa3f99c563f7ade5","type":"api-call-service","z":"cd7a39bb5337c9b5","name":"Lights ON","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":720,"y":120,"wires":[["0a5b85873989a3fd"]]},{"id":"0793b633f3214386","type":"api-call-service","z":"cd7a39bb5337c9b5","name":"Lights OFF","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":730,"y":40,"wires":[[]]},{"id":"dedec5cce945832d","type":"server-state-changed","z":"cd7a39bb5337c9b5","name":"","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"counter.loop_counter","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":160,"y":720,"wires":[[]]},{"id":"4926e949110e1e47","type":"subflow:5c17ae8417803497","z":"cd7a39bb5337c9b5","d":true,"name":"","x":490,"y":660,"wires":[[]]},{"id":"546b720555d4d50b","type":"server-state-changed","z":"cd7a39bb5337c9b5","d":true,"name":"","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"input_number.debug_number","entityIdType":"exact","outputInitially":true,"stateType":"num","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"global_id","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"debug_number","propertyType":"global","value":"","valueType":"entityState"}],"x":190,"y":660,"wires":[["4926e949110e1e47"]]},{"id":"ff6c8eb5f8f4014d","type":"server-state-changed","z":"cd7a39bb5337c9b5","name":"Sun State [Entryway]","server":"5e6a682a.ce8468","version":5,"outputs":1,"exposeAsEntityConfig":"","entityId":"sun.sun","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"config.global_lux","propertyType":"msg","value":"landing_illuminance_average","valueType":"str"},{"property":"config.global_lux_mean","propertyType":"msg","value":"landing_illuminance_mean","valueType":"str"},{"property":"config.mode","propertyType":"msg","value":"entryway_scheduled_lighting_mode","valueType":"global"},{"property":"delay","propertyType":"msg","value":"updater_frequency","valueType":"global"},{"property":"debug_flag","propertyType":"msg","value":"true","valueType":"bool"},{"property":"light","propertyType":"msg","value":"light.entryway_light_2_local","valueType":"str"}],"x":110,"y":240,"wires":[["71b015df720a4e19"]]},{"id":"72418fc6cea21db6","type":"debug","z":"cd7a39bb5337c9b5","name":"LIGHTS ON","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":280,"wires":[]},{"id":"fb8c31d653f0f00b","type":"debug","z":"cd7a39bb5337c9b5","name":"LIGHTS OFF","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":730,"y":200,"wires":[]},{"id":"71b015df720a4e19","type":"subflow:2802501265df2123","z":"cd7a39bb5337c9b5","name":"","x":300,"y":240,"wires":[["1fb7f7aa74fd76a7"],["3530bb13c594b806"]]},{"id":"3530bb13c594b806","type":"api-call-service","z":"cd7a39bb5337c9b5","name":"Lights ON","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":500,"y":280,"wires":[["72418fc6cea21db6"]]},{"id":"1fb7f7aa74fd76a7","type":"api-call-service","z":"cd7a39bb5337c9b5","name":"Lights OFF","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"light","service":"turn_off","areaId":[],"deviceId":[],"entityId":["{{light}}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":510,"y":200,"wires":[["fb8c31d653f0f00b"]]},{"id":"5b1c163d9e252d38","type":"api-call-service","z":"cd7a39bb5337c9b5","name":"Belcave Motion ON","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.belcave_motion"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":530,"y":120,"wires":[[]]},{"id":"ceac1751a36e477a","type":"api-call-service","z":"cd7a39bb5337c9b5","name":"Belcave Motion OFF","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.belcave_motion"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":540,"y":40,"wires":[[]]},{"id":"ca6c2b0da4eebaf4","type":"subflow:6afebbe9d3799590","z":"cd7a39bb5337c9b5","name":"","x":270,"y":1160,"wires":[["303ba1fe184b9802"]]},{"id":"a2475b762eee6032","type":"inject","z":"cd7a39bb5337c9b5","name":"Get Person(s)","props":[{"p":"delay","v":"history_processing_rate","vt":"global"},{"p":"data","v":"{\"area\":\"\",\"type\":[\"person\"],\"key\":[],\"exclude\":[],\"attributes\":[\"latitude\",\"longitude\"],\"strict\":{\"area\":false,\"type\":false,\"key\":false,\"exclude\":true}}","vt":"json"},{"p":"global_id","v":"average_home_location","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":1160,"wires":[["ca6c2b0da4eebaf4"]]},{"id":"303ba1fe184b9802","type":"debug","z":"cd7a39bb5337c9b5","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":410,"y":1160,"wires":[]},{"id":"7c911a1b9f5ed647","type":"debug","z":"01db8fc3ac9e38ed","name":"Above Threshold","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1675,"y":80,"wires":[]},{"id":"313fa94a94fdc957","type":"debug","z":"01db8fc3ac9e38ed","name":"Below Threshold","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1665,"y":300,"wires":[]},{"id":"1a18f75971e0ee0a","type":"debug","z":"01db8fc3ac9e38ed","name":"Within Threshold DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1215,"y":320,"wires":[]},{"id":"5f24cb2ec5ae24da","type":"api-call-service","z":"01db8fc3ac9e38ed","name":"TURN AC ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":["climate.pb_ac05"],"data":"{\"hvac_mode\":\"cool\"}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1435,"y":80,"wires":[["7c911a1b9f5ed647"]]},{"id":"de4d476ba3612dc7","type":"api-current-state","z":"01db8fc3ac9e38ed","name":"IS AC ON","server":"575e2eea.2cdb1","version":3,"outputs":2,"halt_if":"auto","halt_if_type":"str","halt_if_compare":"is","entity_id":"climate.pb_ac05","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1195,"y":80,"wires":[["42e20875f229036a"],["5f24cb2ec5ae24da"]]},{"id":"3c6d21ca3b9b55e7","type":"api-current-state","z":"01db8fc3ac9e38ed","name":"IS AC OFF","server":"575e2eea.2cdb1","version":3,"outputs":2,"halt_if":"auto","halt_if_type":"str","halt_if_compare":"is_not","entity_id":"climate.pb_ac05","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1195,"y":260,"wires":[["76dbd8dd568677e7"],["61f8c85d667d108c"]]},{"id":"42e20875f229036a","type":"debug","z":"01db8fc3ac9e38ed","name":"AC already ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1455,"y":20,"wires":[]},{"id":"76dbd8dd568677e7","type":"debug","z":"01db8fc3ac9e38ed","name":"AC already OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1455,"y":240,"wires":[]},{"id":"61f8c85d667d108c","type":"api-call-service","z":"01db8fc3ac9e38ed","name":"TURN AC OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":["climate.pb_ac05"],"data":"{\"hvac_mode\":\"off\"}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1455,"y":300,"wires":[["313fa94a94fdc957"]]},{"id":"da2c6c5df439a194","type":"function","z":"01db8fc3ac9e38ed","name":"Climate Control Function","func":"//Climate Control Routine\n// This routine determines wheter to turn your cooling device(s) on/off \n// based on incoming temperature data. Property of X.\n\n//Sensor Variables\nvar tempValues      = flow.get([\"temp1\", \"temp2\", \"temp3\", \"temp4\"])\n//var humidityValues  = flow.get([\"hum1\", \"hum2\", \"hum3\", \"hum4\"])\n\n//Config Variables\nvar realAvgTemp = parseFloat(global.get(\"belcave_realavgtemp\"));\nvar avgtemp     = global.get(\"belcave_avg_temp_ui\")\nvar mode        = global.get(\"belcave_cc_mode\")\nvar speed       = global.get(\"belcave_cc_speed\")\n\n//Function Variables\n//var values          = flow.get([\"realavgtemp\", \"avgtemp\",\"mode\",\"speed\"])\nvar modeModifier    = 1;\nvar speedModifier   = 1;\nvar newMsg          = ''\nvar ccAction = ''\n//var newMsg = { payload: msg.payload.length };\n\n//Speed Setting\nswitch(speed) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n// Temperature Control Logic - tbc\nvar minTemp = avgtemp - speedModifier;\nvar maxTemp = avgtemp + speedModifier;\n//Mode\nswitch(mode) {\n  case \"A/C\":\n    // Air Conditioning\n    modeModifier = parseFloat(1);\n    break;\n  case \"HEAT\":\n    // Heating\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"FAN\":\n    // Fan\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"AUTO\":\n    // Auto, heats and cools as needed, TBC\n    modeModifier = parseFloat(0.420);\n    break;\n  default:\n    // OFF/ERROR, TBC, LOG?\n    modeModifier = parseFloat(0.69);\n}\nswitch(true) {\n  case realAvgTemp < minTemp:\n    // Below Threshold\n    ccAction = 'OFF'; //or HEAT - add functionality for heating? Not really needed tho SIKE\n    break;\n  case realAvgTemp > maxTemp:\n    // Above Threshold\n    ccAction = 'COOL';\n    break;\n  default:\n    // Within Threshold / Exceptions\n    ccAction = 'HOLD';\n    break;\n}\nnode.warn(\"speed: \"+ speed);\nnode.warn(\"speedm: \"+ speedModifier);\nnode.warn(\"MINT: \"+ minTemp);\nnode.warn(\"MAXT: \"+ maxTemp);\nnode.warn(\"realavgtemp: \"+ realAvgTemp);\n\n//End Temperature Control Logic\nnewMsg = { payload: ccAction }\nflow.set(\"currentaction\", ccAction);\nreturn newMsg;\n//Air Condititioning Function - TODO\nfunction setSpeed(s, sM){\n    //Speed Setting\nswitch(s) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n   //var one = Number(x);  //convert to a number\n   //var two = Number(y);  //convert to a number\n   //var result = one + two;\n   //node.warn(\"result: \"+ result);\nreturn result;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":735,"y":160,"wires":[["d0b244c2f6b006f5","71c84c2e999b5028"]]},{"id":"d202d977f1c85bb9","type":"debug","z":"01db8fc3ac9e38ed","name":"CC UI OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":475,"y":220,"wires":[]},{"id":"d0b244c2f6b006f5","type":"debug","z":"01db8fc3ac9e38ed","name":"Climate Control DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":955,"y":60,"wires":[]},{"id":"80b146e542b80ea9","type":"api-call-service","z":"01db8fc3ac9e38ed","d":true,"name":"","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["light.bedside_lamp"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1285,"y":520,"wires":[[]]},{"id":"e733de2d88e218f5","type":"inject","z":"01db8fc3ac9e38ed","d":true,"name":"10s inject trigger","props":[{"p":"area","v":"belcave","vt":"str"}],"repeat":"10","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":90,"y":160,"wires":[["0244625b0481f7d5","edb9dcbb02df4280"]]},{"id":"0244625b0481f7d5","type":"debug","z":"01db8fc3ac9e38ed","name":"trigger DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":295,"y":100,"wires":[]},{"id":"fa03117a57e9c795","type":"debug","z":"01db8fc3ac9e38ed","name":"trigger TRUE","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":495,"y":80,"wires":[]},{"id":"71c84c2e999b5028","type":"switch","z":"01db8fc3ac9e38ed","name":"CC Device Switch","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"HEAT","vt":"str"},{"t":"eq","v":"COOL","vt":"str"},{"t":"eq","v":"OFF","vt":"str"},{"t":"eq","v":"HOLD","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":955,"y":160,"wires":[[],["de4d476ba3612dc7"],["3c6d21ca3b9b55e7"],["80b146e542b80ea9","1a18f75971e0ee0a"]]},{"id":"edb9dcbb02df4280","type":"switch","z":"01db8fc3ac9e38ed","name":"GET CC UI Toggle","property":"belcave_cc_ui_toggle","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":295,"y":160,"wires":[["fa03117a57e9c795","da2c6c5df439a194"],["d202d977f1c85bb9"]]},{"id":"2ec0bc8f33041705","type":"function","z":"01db8fc3ac9e38ed","name":"Climate Control Function","func":"//Climate Control Routine\n// This routine determines wheter to turn your cooling device(s) on/off \n// based on incoming temperature data. Property of X.\n\n//Sensor Variables\n//var tempValues      = flow.get([\"temp1\", \"temp2\", \"temp3\", \"temp4\"])\n//var humidityValues  = flow.get([\"hum1\", \"hum2\", \"hum3\", \"hum4\"])\n\n//Config Variables\nvar area        = msg.area;\nvar realAvgTemp = parseFloat(global.get(\"average_belcave_temperature\"));\nvar avgtemp     = global.get(\"belcave_avg_temp_ui\");\nvar mode        = global.get(\"belcave_cc_mode\");\nvar speed       = global.get(\"belcave_cc_speed\");\n\n//Function Variables\n//var values          = flow.get([\"realavgtemp\", \"avgtemp\",\"mode\",\"speed\"])\nvar modeModifier    = 1;\nvar speedModifier   = 1;\nvar newMsg          = '';\nvar ccAction = '';\n//var newMsg = { payload: msg.payload.length };\n\n//Speed Setting\nswitch(speed) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n// Temperature Control Logic - tbc\nvar minTemp = avgtemp - speedModifier;\nvar maxTemp = avgtemp + speedModifier;\n//Mode\nswitch(mode) {\n  case \"A/C\":\n    // Air Conditioning\n    modeModifier = parseFloat(1);\n    break;\n  case \"HEAT\":\n    // Heating\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"FAN\":\n    // Fan\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"AUTO\":\n    // Auto, heats and cools as needed, TBC\n    modeModifier = parseFloat(0.420);\n    break;\n  default:\n    // OFF/ERROR, TBC, LOG?\n    modeModifier = parseFloat(0.69);\n}\nswitch(true) {\n  case realAvgTemp < minTemp:\n    // Below Threshold\n    ccAction = 'OFF'; //or HEAT - add functionality for heating? Not really needed tho SIKE\n    break;\n  case realAvgTemp > maxTemp:\n    // Above Threshold\n    ccAction = 'COOL';\n    break;\n  default:\n    // Within Threshold / Exceptions\n    ccAction = 'HOLD';\n    break;\n}\nnode.warn(\"speed: \"+ speed);\nnode.warn(\"speedm: \"+ speedModifier);\nnode.warn(\"MINT: \"+ minTemp);\nnode.warn(\"MAXT: \"+ maxTemp);\nnode.warn(\"realavgtemp: \"+ realAvgTemp);\n\n//End Temperature Control Logic\nnewMsg = { payload: ccAction }\nflow.set(\"currentaction\", ccAction);\nreturn newMsg;\n//Air Condititioning Function - TODO\nfunction setSpeed(s, sM){\n    //Speed Setting\nswitch(s) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n   //var one = Number(x);  //convert to a number\n   //var two = Number(y);  //convert to a number\n   //var result = one + two;\n   //node.warn(\"result: \"+ result);\n//return result;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":540,"wires":[[]]},{"id":"843b853c57fa0831","type":"server-state-changed","z":"01db8fc3ac9e38ed","name":"Climate Control UI Toggle [Belcave]","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_boolean.belcave_climate_control_cnfig_toggle","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"true","ifStateType":"bool","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"},{"property":"delay","propertyType":"msg","value":"updater_frequency","valueType":"global"}],"x":160,"y":600,"wires":[["687c8f6f4df4bf00"],[]]},{"id":"687c8f6f4df4bf00","type":"trigger","z":"01db8fc3ac9e38ed","name":"Trigger Delay","op1":"","op2":"","op1type":"pay","op2type":"pay","duration":"-250","extend":false,"overrideDelay":true,"units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":410,"y":540,"wires":[["2ec0bc8f33041705"]]},{"id":"71220923.cf2228","type":"inject","z":"724ce0a8.deedd","d":true,"name":"10s inject trigger","props":[],"repeat":"10","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":130,"y":300,"wires":[["ddab9fc2.0dbd9","7f7ac1a8.6687a"]]},{"id":"ddab9fc2.0dbd9","type":"debug","z":"724ce0a8.deedd","name":"trigger DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":340,"y":240,"wires":[]},{"id":"7f7ac1a8.6687a","type":"switch","z":"724ce0a8.deedd","name":"GET Home CC UI Toggle","property":"home_cc_ui_toggle","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":350,"y":300,"wires":[["ce0526d9.da4e68","18ec8f54.0d74b1"],["e199746e.ffd3a8"]]},{"id":"ce0526d9.da4e68","type":"debug","z":"724ce0a8.deedd","name":"trigger TRUE","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":550,"y":220,"wires":[]},{"id":"18ec8f54.0d74b1","type":"function","z":"724ce0a8.deedd","name":"Climate Control Function","func":"//Climate Control Routine\n// This routine determines wheter to turn your cooling device(s) on/off \n// based on incoming temperature data. Property of X.\n\n//Sensor Variables\nvar tempValues      = flow.get([\"temp1\", \"temp2\", \"temp3\", \"temp4\"])\n//var humidityValues  = flow.get([\"hum1\", \"hum2\", \"hum3\", \"hum4\"])\n\n//Config Variables\nvar realAvgTemp = parseFloat(global.get(\"belcave_realavgtemp\"));\nvar avgtemp     = global.get(\"belcave_avg_temp_ui\")\nvar mode        = global.get(\"belcave_cc_mode\")\nvar speed       = global.get(\"belcave_cc_speed\")\n\n//Function Variables\n//var values          = flow.get([\"realavgtemp\", \"avgtemp\",\"mode\",\"speed\"])\nvar modeModifier    = 1;\nvar speedModifier   = 1;\nvar newMsg          = ''\nvar ccAction = ''\n//var newMsg = { payload: msg.payload.length };\n\n//Speed Setting\nswitch(speed) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n// Temperature Control Logic\nvar minTemp = avgtemp - speedModifier;\nvar maxTemp = avgtemp + speedModifier;\n//Mode\nswitch(mode) {\n  case \"A/C\":\n    // Air Conditioning\n    modeModifier = parseFloat(1);\n    break;\n  case \"HEAT\":\n    // Heating\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"FAN\":\n    // Fan\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"AUTO\":\n    // Auto, heats and cools as needed, TBC\n    modeModifier = parseFloat(0.420);\n    break;\n  default:\n    // OFF/ERROR, TBC, LOG?\n    modeModifier = parseFloat(0.69);\n}\nswitch(true) {\n  case realAvgTemp < minTemp:\n    // Below Threshold\n    ccAction = 'OFF'; //or HEAT - add functionality for heating? Not really needed tho SIKE\n    break;\n  case realAvgTemp > maxTemp:\n    // Above Threshold\n    ccAction = 'COOL';\n    break;\n  default:\n    // Within Threshold / Exceptions\n    ccAction = 'HOLD';\n    break;\n}\nnode.warn(\"speed: \"+ speed);\nnode.warn(\"speedm: \"+ speedModifier);\nnode.warn(\"MINT: \"+ minTemp);\nnode.warn(\"MAXT: \"+ maxTemp);\nnode.warn(\"realavgtemp: \"+ realAvgTemp);\n\n//End Temperature Control Logic\nnewMsg = { payload: ccAction }\nflow.set(\"currentaction\", ccAction);\nreturn newMsg;\n//Air Condititioning Function\nfunction setSpeed(s, sM){\n    //Speed Setting\nswitch(speed) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n   var one = Number(x);  //convert to a number\n   var two = Number(y);  //convert to a number\n   var result = one + two;\nreturn result;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":300,"wires":[["97bac0de.06d4","a8a787bd.5f68e8"]]},{"id":"e199746e.ffd3a8","type":"debug","z":"724ce0a8.deedd","name":"CC UI OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":540,"y":360,"wires":[]},{"id":"97bac0de.06d4","type":"debug","z":"724ce0a8.deedd","name":"Climate Control DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1080,"y":180,"wires":[]},{"id":"a8a787bd.5f68e8","type":"switch","z":"724ce0a8.deedd","name":"CC Device Switch","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"HEAT","vt":"str"},{"t":"eq","v":"COOL","vt":"str"},{"t":"eq","v":"OFF","vt":"str"},{"t":"eq","v":"HOLD","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":1110,"y":300,"wires":[[],["8f69670.cea6b98"],["7a1aebb5.1d39a4"],["9f5ad1db.cdd","1fcb57f5.f672d8"]]},{"id":"8f69670.cea6b98","type":"api-current-state","z":"724ce0a8.deedd","name":"IS AC ON","server":"575e2eea.2cdb1","version":3,"outputs":2,"halt_if":"auto","halt_if_type":"str","halt_if_compare":"is","entity_id":"climate.pb_ac05","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1380,"y":220,"wires":[["d8e03eb1.0b116"],["705cd36f.7f563c"]]},{"id":"7a1aebb5.1d39a4","type":"api-current-state","z":"724ce0a8.deedd","name":"IS AC OFF","server":"575e2eea.2cdb1","version":3,"outputs":2,"halt_if":"auto","halt_if_type":"str","halt_if_compare":"is_not","entity_id":"climate.pb_ac05","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1380,"y":400,"wires":[["7411a5b9.e6269c"],["7e72fef5.00a13"]]},{"id":"9f5ad1db.cdd","type":"api-call-service","z":"724ce0a8.deedd","d":true,"name":"","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["light.bedside_lamp"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1460,"y":660,"wires":[[]]},{"id":"1fcb57f5.f672d8","type":"debug","z":"724ce0a8.deedd","name":"Within Threshold DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1490,"y":720,"wires":[]},{"id":"d8e03eb1.0b116","type":"debug","z":"724ce0a8.deedd","name":"AC already ON","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1620,"y":160,"wires":[]},{"id":"705cd36f.7f563c","type":"api-call-service","z":"724ce0a8.deedd","name":"TURN AC ON","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":["climate.pb_ac05"],"data":"{\"hvac_mode\":\"cool\"}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1610,"y":220,"wires":[["a8cf0f45.afd33"]]},{"id":"7411a5b9.e6269c","type":"debug","z":"724ce0a8.deedd","name":"AC already OFF","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1620,"y":380,"wires":[]},{"id":"7e72fef5.00a13","type":"api-call-service","z":"724ce0a8.deedd","name":"TURN AC OFF","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":["climate.pb_ac05"],"data":"{\"hvac_mode\":\"off\"}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1620,"y":440,"wires":[["643b1165.a8dc3"]]},{"id":"a8cf0f45.afd33","type":"debug","z":"724ce0a8.deedd","name":"Above Threshold","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1970,"y":220,"wires":[]},{"id":"643b1165.a8dc3","type":"debug","z":"724ce0a8.deedd","name":"Below Threshold","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1960,"y":440,"wires":[]},{"id":"812733c078abed49","type":"sunrise","z":"ba1035298b32f5d8","name":"","lat":"51.58844","lon":"0.22399","start":"sunrise","end":"sunset","soff":0,"eoff":0,"x":110,"y":120,"wires":[["3f32a91f98ac3668"],["fb2ab030cb0c495b"]]},{"id":"3f32a91f98ac3668","type":"debug","z":"ba1035298b32f5d8","name":"debug 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":300,"y":80,"wires":[]},{"id":"fb2ab030cb0c495b","type":"debug","z":"ba1035298b32f5d8","name":"debug 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":300,"y":140,"wires":[]},{"id":"2a5cbbec4fba1ebe","type":"subflow:6afebbe9d3799590","z":"ba1035298b32f5d8","name":"","x":420,"y":340,"wires":[["2eddf60b85117433"]],"info":"example json input (msg.data)\r\n\r\n{\r\n    \"area\": \"belcave\",\r\n    \"type\": [\r\n        \"sensor\",\r\n        \"climate\"\r\n    ],\r\n    \"key\": [\r\n        \"temp\",\r\n        \"thermostat\"\r\n    ],\r\n    \"exclude\": [\r\n        \"average\",\r\n        \"battery\"\r\n    ],\r\n    \"attributes\": [\r\n        \"current_temperature\"\r\n    ],\r\n    \"strict\": {\r\n        \"area\": false,\r\n        \"type\": false,\r\n        \"key\": false,\r\n        \"exclude\": true\r\n    }\r\n}"},{"id":"8968de54f0a98839","type":"inject","z":"ba1035298b32f5d8","name":"Get Battery Sensors","props":[{"p":"payload"},{"p":"data","v":"{\"area\":\"\",\"type\":[\"sensor\"],\"key\":[\"batt\",\"battery\",\"power\"],\"exclude\":[\"average\",\"temperature\",\"sk\",\"t800\",\"iphone\",\"sm_n986b\"],\"attributes\":[\"\"],\"strict\":{\"area\":false,\"type\":false,\"key\":false,\"exclude\":true}}","vt":"json"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":210,"y":340,"wires":[["2a5cbbec4fba1ebe"]]},{"id":"2eddf60b85117433","type":"debug","z":"ba1035298b32f5d8","name":"debug 3","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":600,"y":340,"wires":[]},{"id":"bab88113.29aee","type":"api-call-service","z":"ca16e782.e2ed88","name":"notify me","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Home Assistant ALERT\",\t    \"message\": \"Your alert message here\",\t    \"data\": {\t        \"tag\": \"alert\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":300,"y":40,"wires":[["e53f4b4c.45bf68"]]},{"id":"4e08821b.8ad44c","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":40,"wires":[["bab88113.29aee"]]},{"id":"e53f4b4c.45bf68","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":450,"y":40,"wires":[]},{"id":"7eab4361.62bebc","type":"ha-zone","z":"ca16e782.e2ed88","name":"Entered Home","server":"5e6a682a.ce8468","version":1,"exposeAsEntityConfig":"","entities":["device_tracker.sk"],"event":"enter","zones":["zone.home"],"x":130,"y":120,"wires":[["4548f4ab.bd038c"]]},{"id":"4548f4ab.bd038c","type":"api-call-service","z":"ca16e782.e2ed88","name":"notify me","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"The Butler\",\t    \"message\": \"Entering Home\",\t    \"data\": {\t        \"tag\": \"Welcome Home Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":300,"y":120,"wires":[[]]},{"id":"640f6277.5389ac","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload.data.entity_id","v":"light.spotlights_2","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":90,"y":400,"wires":[["5ff2b2d3.0b72ac"]]},{"id":"5962ad3d.aafff4","type":"api-call-service","z":"ca16e782.e2ed88","name":"notify me [door opened]","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Motion Detected (Belcave)\",\t    \"message\": \"Door Opened\",\t    \"data\": {\t        \"tag\": \"alert\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":770,"y":440,"wires":[[]]},{"id":"dd660ae6.f45158","type":"api-call-service","z":"ca16e782.e2ed88","name":"notify me [door closed]","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Motion Detected (Belcave)\",\t    \"message\": \"Door Closed\",\t    \"data\": {\t        \"tag\": \"alert\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":760,"y":520,"wires":[[]]},{"id":"61f6a682.3b0858","type":"server-state-changed","z":"ca16e782.e2ed88","d":true,"name":"","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"binary_sensor.belcave_stairs_motion_sensor_on_off","entityIdType":"exact","outputInitially":false,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":260,"y":320,"wires":[["4f58ee18.e3da9"],["5ff2b2d3.0b72ac"]]},{"id":"4f58ee18.e3da9","type":"api-call-service","z":"ca16e782.e2ed88","name":"notify me","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Motion Detected (Belcave Stairs)\",\t    \"message\": \"Motion Detected\",\t    \"data\": {\t        \"tag\": \"alert\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":640,"y":280,"wires":[[]]},{"id":"5ff2b2d3.0b72ac","type":"api-call-service","z":"ca16e782.e2ed88","name":"notify me","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"Motion Detected (Belcave Stairs)\",\t    \"message\": \"Motion Cleared\",\t    \"data\": {\t        \"tag\": \"alert\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":640,"y":360,"wires":[[]]},{"id":"ed3c9a1a.424358","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED FLASH)","server":"5e6a682a.ce8468","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":470,"y":600,"wires":[["24afa532.73e03a"]]},{"id":"e1de9249.2e36","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload.data.entity_id","v":"light.spotlights_2","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":190,"y":600,"wires":[["ed3c9a1a.424358"]]},{"id":"24afa532.73e03a","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":810,"y":580,"wires":[]},{"id":"825e85d3.fd1778","type":"api-call-service","z":"ca16e782.e2ed88","name":"Stairs Light ON (NATURAL WHITE)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.spotlight_1"],"data":"{\"color_name\":\"white\",\"brightness\":1}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":500,"y":680,"wires":[["8596797.3c63088"]]},{"id":"eee4f805.7e6d28","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload.data.entity_id","v":"light.spotlights_2","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":680,"wires":[["825e85d3.fd1778"]]},{"id":"8596797.3c63088","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":810,"y":680,"wires":[]},{"id":"55c4619a.61eb","type":"ha-zone","z":"ca16e782.e2ed88","name":"Exited Home","server":"5e6a682a.ce8468","version":1,"exposeAsEntityConfig":"","entities":["device_tracker.sk"],"event":"leave","zones":["zone.home"],"x":130,"y":200,"wires":[["b7ce59a4.ca1a98"]]},{"id":"b7ce59a4.ca1a98","type":"api-call-service","z":"ca16e782.e2ed88","name":"notify me","server":"575e2eea.2cdb1","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_sk","areaId":[],"deviceId":[],"entityId":[],"data":"{\t    \"title\": \"The Butler\",\t    \"message\": \"Leaving Home\",\t    \"data\": {\t        \"tag\": \"Take Care Sir\"\t    }\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":300,"y":200,"wires":[[]]},{"id":"ce551488.630fa8","type":"api-call-service","z":"ca16e782.e2ed88","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"scene","service":"create","areaId":[],"deviceId":[],"entityId":["scene.home_mode_save_state"],"data":"{\t   \"snapshot_entities\":\"light.spotlight1\"\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":480,"y":740,"wires":[["7b409e4f.19359"]]},{"id":"ac742a74.aca008","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload.data.entity_id","v":"light.spotlights_2","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":760,"wires":[["ce551488.630fa8"]]},{"id":"7b409e4f.19359","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":760,"wires":[]},{"id":"14e5acb2.406aa3","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED LOW)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"red\",\"brightness_pct\":1}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":560,"y":1060,"wires":[["23bd9a10.ff6806"]]},{"id":"7a5226f1.9aa338","type":"inject","z":"ca16e782.e2ed88","name":"","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":270,"y":1120,"wires":[["14e5acb2.406aa3"]]},{"id":"8538495.aee4ab8","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED FLASH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"brightness_step_pct\":99,\"transition\":1000000}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":470,"y":820,"wires":[[]]},{"id":"5a07ed4.b11cd14","type":"inject","z":"ca16e782.e2ed88","name":"","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":820,"wires":[["8538495.aee4ab8"]]},{"id":"c9b90ba3.e8a4f8","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED HIGH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"red\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":1080,"y":1100,"wires":[["c720d33e.b2c12"]]},{"id":"c720d33e.b2c12","type":"delay","z":"ca16e782.e2ed88","name":"Variable 690ms Delay","pauseType":"rate","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":800,"y":1140,"wires":[["14e5acb2.406aa3"]]},{"id":"6e523461.c3406c","type":"inject","z":"ca16e782.e2ed88","name":"STOP","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"STOP","payloadType":"str","x":250,"y":1020,"wires":[[]]},{"id":"540161da.7d2f6","type":"switch","z":"ca16e782.e2ed88","name":"","property":"payload","propertyType":"msg","rules":[{"t":"regex","v":"\"^\\d*[13579]$\"","vt":"str","case":false},{"t":"regex","v":"\"^\\d*[02468]$\"","vt":"str","case":false}],"checkall":"true","repair":false,"outputs":2,"x":670,"y":1460,"wires":[["979ecf13.1ae3b"],["2257a7e1.a8a0c8"]]},{"id":"23bd9a10.ff6806","type":"delay","z":"ca16e782.e2ed88","name":"Variable 690ms Delay","pauseType":"rate","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":820,"y":1000,"wires":[["c9b90ba3.e8a4f8"]]},{"id":"ab54d0a4.ad116","type":"counter","z":"ca16e782.e2ed88","name":"","init":"0","step":"1","lower":"","upper":"","mode":"increment","outputs":"1","x":520,"y":1460,"wires":[["540161da.7d2f6"]]},{"id":"54feed4e.177dd4","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"yeye","payloadType":"str","x":150,"y":1460,"wires":[[]]},{"id":"979ecf13.1ae3b","type":"debug","z":"ca16e782.e2ed88","name":"d1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":960,"y":1440,"wires":[]},{"id":"2257a7e1.a8a0c8","type":"debug","z":"ca16e782.e2ed88","name":"d2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":970,"y":1500,"wires":[]},{"id":"7dc93a6c.e24314","type":"function","z":"ca16e782.e2ed88","name":"Light Alarm Function","func":"//Light Alarm Function\n//\n// Function Variables\nvar alarmState = global.get(\"alarmState\");\nnode.warn(\"alarmState: \"+ alarmState);\nvar i = 1;\n//var newMsg = { payload: msg.payload.length };\n\nwhile (alarmState != \"\") {\n    if (i % 2 == 0) {\n        newMsg = { payload : true }\n    } else {\n        newMsg = { payload : false }\n        alarmState = global.get(\"alarmState\");\n    }\n    i++;\n}\n//node.send( {payload:\"STOP\"} )\nnewMsg = { payload : \"STOP\" }\n//flow.set(\"currentaction\", ccAction);\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":1560,"wires":[["47a6c866.9393e8","e13a5119.61e1"]]},{"id":"d467a610.afc8e8","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"yeye","payloadType":"str","x":130,"y":1560,"wires":[["7dc93a6c.e24314"]]},{"id":"264e1380.bfb6ac","type":"change","z":"ca16e782.e2ed88","name":"","rules":[{"t":"set","p":"belcave_alarm","pt":"global","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":350,"y":1600,"wires":[[]]},{"id":"61b75166.82bc7","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"yeye","payloadType":"str","x":130,"y":1600,"wires":[["264e1380.bfb6ac"]]},{"id":"e3a50ac0.8912d8","type":"change","z":"ca16e782.e2ed88","name":"","rules":[{"t":"set","p":"belcave_alarm","pt":"global","to":"false","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":350,"y":1660,"wires":[[]]},{"id":"b432afeb.7a48d","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"yeye","payloadType":"str","x":130,"y":1660,"wires":[["e3a50ac0.8912d8"]]},{"id":"47a6c866.9393e8","type":"switch","z":"ca16e782.e2ed88","name":"","property":"payload","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":570,"y":1560,"wires":[["d056c0e9.45e02"],["f4c051f2.f8af9"]]},{"id":"d056c0e9.45e02","type":"debug","z":"ca16e782.e2ed88","name":"d1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":1520,"wires":[]},{"id":"f4c051f2.f8af9","type":"debug","z":"ca16e782.e2ed88","name":"d2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":1560,"wires":[]},{"id":"e13a5119.61e1","type":"debug","z":"ca16e782.e2ed88","name":"d3","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":570,"y":1620,"wires":[]},{"id":"3a96adb8.ad88c2","type":"inject","z":"ca16e782.e2ed88","name":"","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":1300,"wires":[["f804b710.e72108"]]},{"id":"f804b710.e72108","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED LOW)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"red\",\"brightness_pct\":1}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":420,"y":1300,"wires":[["c56da71e.32bb58"]]},{"id":"c56da71e.32bb58","type":"delay","z":"ca16e782.e2ed88","name":"Variable 690ms Delay","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":640,"y":1340,"wires":[["e5bb980d.1a0ac8"]]},{"id":"18952db4.f39982","type":"inject","z":"ca16e782.e2ed88","name":"","repeat":"","crontab":"","once":false,"topic":"","payload":"5","payloadType":"string","x":130,"y":1780,"wires":[["4502718b.857b7"]]},{"id":"4502718b.857b7","type":"function","z":"ca16e782.e2ed88","name":"BLINK n","func":"\nvar o = false;\nfor (var i=0; i<(msg.payload*60); i++) {\n    node.send( {payload:+(o=!o)} )\n}\nnode.send( {payload:\"STOP\"} )\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":1780,"wires":[["66c12c77.45fbf4"]]},{"id":"66c12c77.45fbf4","type":"delay","z":"ca16e782.e2ed88","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"0.69","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":450,"y":1780,"wires":[["5a9788f3.4ef258","6869459f.7088ac"]]},{"id":"5a9788f3.4ef258","type":"debug","z":"ca16e782.e2ed88","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":630,"y":1860,"wires":[]},{"id":"6869459f.7088ac","type":"switch","z":"ca16e782.e2ed88","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"STOP","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":650,"y":1780,"wires":[["bb8a95f7.a4cf98","94d71e12.7a2ed"],["3980f1ca.8690ce","e2a668e6.365d38"],["51f35cf.a659da4"]]},{"id":"bb8a95f7.a4cf98","type":"debug","z":"ca16e782.e2ed88","name":"d1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":830,"y":1700,"wires":[]},{"id":"3980f1ca.8690ce","type":"debug","z":"ca16e782.e2ed88","name":"d2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":830,"y":1800,"wires":[]},{"id":"94d71e12.7a2ed","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED LOW)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"red\",\"brightness_pct\":1}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":880,"y":1740,"wires":[[]]},{"id":"e2a668e6.365d38","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED HIGH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"red\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":880,"y":1840,"wires":[[]]},{"id":"669e2ed2.a284f","type":"server-state-changed","z":"ca16e782.e2ed88","d":true,"name":"Alarm Triggered","server":"5e6a682a.ce8468","version":5,"outputs":2,"exposeAsEntityConfig":"","entityId":"input_boolean.belcave_alarm_toggle","entityIdType":"exact","outputInitially":true,"stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputOnlyOnStateChange":true,"for":"3","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"belcave_alarm_timeout","valueType":"global"}],"x":100,"y":1840,"wires":[["4502718b.857b7"],["32e11e29.073562"]]},{"id":"51f35cf.a659da4","type":"delay","z":"ca16e782.e2ed88","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"outputs":1,"x":840,"y":1940,"wires":[["a6fc3336.3b434"]]},{"id":"a6fc3336.3b434","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (BLUE 69)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"blue\",\"brightness_pct\":69}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"queue":"none","x":1020,"y":1940,"wires":[["e1f7a82c.c47ce8"]]},{"id":"e1f7a82c.c47ce8","type":"api-call-service","z":"ca16e782.e2ed88","name":"DISABLE Alarm","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"input_boolean","service":"turn_off","areaId":[],"deviceId":[],"entityId":["input_boolean.belcave_alarm_toggle"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"reset","propertyType":"msg","value":"true","valueType":"bool"}],"queue":"none","x":1220,"y":1940,"wires":[["66c12c77.45fbf4"]]},{"id":"32e11e29.073562","type":"change","z":"ca16e782.e2ed88","name":"","rules":[{"t":"set","p":"reset","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":300,"y":1900,"wires":[["66c12c77.45fbf4","51f35cf.a659da4"]]},{"id":"e5bb980d.1a0ac8","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED HIGH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.bedside_lamps"],"data":"{\"color_name\":\"green\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":860,"y":1300,"wires":[[]]},{"id":"57c5f6bd.cf1078","type":"api-call-service","z":"ca16e782.e2ed88","name":"Light ON (RED HIGH)","server":"575e2eea.2cdb1","version":5,"debugenabled":true,"domain":"light","service":"turn_on","areaId":[],"deviceId":[],"entityId":["light.desk_spotlights"],"data":"{\"color_name\":\"turquoise\",\"brightness_pct\":100}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"data"}],"queue":"none","x":1280,"y":640,"wires":[[]]},{"id":"97a1f182.0ef69","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1060,"y":620,"wires":[["57c5f6bd.cf1078"]]},{"id":"f14f56e1.4d9a28","type":"inject","z":"ca16e782.e2ed88","name":"Store states","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":130,"y":2160,"wires":[["3790fc30.12b354","18d6f55.537770b","94a3c52.9fa9738","a6391b09.3352b8"]]},{"id":"18d6f55.537770b","type":"ha-get-entities","z":"ca16e782.e2ed88","d":true,"name":"Get Switches","server":"5e6a682a.ce8468","version":1,"rules":[{"property":"entity_id","logic":"starts_with","value":"switch","valueType":"str"},{"property":"state","logic":"includes","value":"on,off","valueType":"str"}],"outputType":"split","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":302,"y":2160,"wires":[["19e85c0e.f4d1d4"]]},{"id":"94a3c52.9fa9738","type":"ha-get-entities","z":"ca16e782.e2ed88","name":"Get Lights","server":"5e6a682a.ce8468","version":1,"rules":[{"property":"entity_id","logic":"starts_with","value":"light.","valueType":"str"},{"property":"state","logic":"includes","value":"on,off","valueType":"str"}],"outputType":"split","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":290,"y":2080,"wires":[["19e85c0e.f4d1d4"]]},{"id":"297ff244.47ca4e","type":"comment","z":"ca16e782.e2ed88","name":"Easier to follow version","info":"","x":144,"y":2064,"wires":[]},{"id":"3790fc30.12b354","type":"ha-get-entities","z":"ca16e782.e2ed88","name":"Get Climate","server":"5e6a682a.ce8468","version":1,"rules":[{"property":"entity_id","logic":"starts_with","value":"climate","valueType":"str"}],"outputType":"split","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":302,"y":2208,"wires":[["36705576.17a42a"]]},{"id":"19e85c0e.f4d1d4","type":"function","z":"ca16e782.e2ed88","name":"transform data","func":"const payload = {};\npayload.domain = msg.payload.entity_id.split('.')[0];\npayload.service = `turn_${msg.payload.state}`;\npayload.data = { entity_id: msg.payload.entity_id };\n\n// create a blank message object with out new payload\nmsg = { payload: payload };\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":488,"y":2160,"wires":[["2b7e0299.1ce7ae"]]},{"id":"36705576.17a42a","type":"function","z":"ca16e782.e2ed88","name":"transform data","func":"const payloads = [];\nconst payload = {};\npayload.domain = 'climate';\npayload.service = `set_temperature`;\npayload.data = {\n    entity_id: msg.payload.entity_id,\n    temperature: msg.payload.attributes.temperature,\n    target_temp_low: msg.payload.attributes.min_temp,\n    target_temp_high: msg.payload.attributes.max_temp,\n    operation_mode: msg.payload.attributes.operation_mode\n};\n\n// create a blank message object with out new payload\nmsg = { payload: payload };\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":488,"y":2208,"wires":[["2b7e0299.1ce7ae"]]},{"id":"e254a879.41d408","type":"comment","z":"ca16e782.e2ed88","name":"function nodes could be replaced with a change nodes","info":"","x":608,"y":2112,"wires":[]},{"id":"2b7e0299.1ce7ae","type":"join","z":"ca16e782.e2ed88","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"5","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":666,"y":2160,"wires":[["b3db19bf.61d8e8"]]},{"id":"472ff71c.c342c8","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1038,"y":2160,"wires":[]},{"id":"b3db19bf.61d8e8","type":"change","z":"ca16e782.e2ed88","name":"","rules":[{"t":"set","p":"savedStates","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":844,"y":2160,"wires":[["472ff71c.c342c8"]]},{"id":"a6391b09.3352b8","type":"api-current-state","z":"ca16e782.e2ed88","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"light.belcave_lights","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":360,"y":2280,"wires":[["19e85c0e.f4d1d4"]]},{"id":"e304df7.d7cbf2","type":"api-call-service","z":"ca16e782.e2ed88","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"climate","service":"set_temperature","areaId":[],"deviceId":[],"entityId":["climate.hive_thermostat"],"data":"{ \"temperature\" : 23.5 }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":310,"y":2460,"wires":[["9be4a533.7df408"]]},{"id":"32e2856a.5ea7ba","type":"inject","z":"ca16e782.e2ed88","d":true,"name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":2460,"wires":[["e304df7.d7cbf2"]]},{"id":"9be4a533.7df408","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":540,"y":2460,"wires":[]},{"id":"d5df65e5.b31c88","type":"api-call-service","z":"ca16e782.e2ed88","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.hive_thermostat"],"data":"{}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":300,"y":2520,"wires":[["dabafec1.e918d"]]},{"id":"6f842ffc.d4afd","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":110,"y":2520,"wires":[["d5df65e5.b31c88"]]},{"id":"dabafec1.e918d","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":550,"y":2520,"wires":[]},{"id":"4b0859ef.235b48","type":"api-current-state","z":"ca16e782.e2ed88","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"climate.hive_thermostat","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":0,"forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":350,"y":2380,"wires":[["59d8662a.5e3978"]]},{"id":"9cfedc68.5b8bb","type":"inject","z":"ca16e782.e2ed88","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":2380,"wires":[["4b0859ef.235b48"]]},{"id":"59d8662a.5e3978","type":"debug","z":"ca16e782.e2ed88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":610,"y":2380,"wires":[]},{"id":"a9eb0a9aa362e467","type":"function","z":"ca16e782.e2ed88","name":"AVG Temp Function","func":"//Climate Control Routine\n// This routine determines wheter to turn your cooling device(s) on/off \n// based on incoming temperature data. Property of X.\n\n//Sensor Variables\nvar tempValues      = flow.get([\"temp1\", \"temp2\", \"temp3\", \"temp4\"])\n//var humidityValues  = flow.get([\"hum1\", \"hum2\", \"hum3\", \"hum4\"])\n\n//Config Variables\nvar realAvgTemp = parseFloat(flow.get(\"realavgtemp\"));\nvar avgtemp     = global.get(\"belcave_avg_temp_ui\")\nvar mode        = global.get(\"belcave_cc_mode\")\nvar speed       = global.get(\"belcave_cc_speed\")\n\n//Function Variables\n//var values          = flow.get([\"realavgtemp\", \"avgtemp\",\"mode\",\"speed\"])\nvar modeModifier    = 1;\nvar speedModifier   = 1;\nvar newMsg          = ''\nvar ccAction = ''\n//var newMsg = { payload: msg.payload.length };\n\n//Speed Setting\nswitch(speed) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n// Temperature Control Logic\nvar minTemp = avgtemp - speedModifier;\nvar maxTemp = avgtemp + speedModifier;\n//Mode\nswitch(mode) {\n  case \"A/C\":\n    // Air Conditioning\n    modeModifier = parseFloat(1);\n    break;\n  case \"HEAT\":\n    // Heating\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"FAN\":\n    // Fan\n    modeModifier = parseFloat(0.420);\n    break;\n  case \"AUTO\":\n    // Auto, heats and cools as needed, TBC\n    modeModifier = parseFloat(0.420);\n    break;\n  default:\n    // OFF/ERROR, TBC, LOG?\n    modeModifier = parseFloat(0.69);\n}\nswitch(true) {\n  case realAvgTemp < minTemp:\n    // Below Threshold\n    ccAction = 'OFF'; //or HEAT - add functionality for heating? Not really needed tho SIKE\n    break;\n  case realAvgTemp > maxTemp:\n    // Above Threshold\n    ccAction = 'COOL';\n    break;\n  default:\n    // Within Threshold / Exceptions\n    ccAction = 'HOLD';\n    break;\n}\nnode.warn(\"speed: \"+ speed);\nnode.warn(\"speedm: \"+ speedModifier);\nnode.warn(\"MINT: \"+ minTemp);\nnode.warn(\"MAXT: \"+ maxTemp);\nnode.warn(\"realavgtemp: \"+ realAvgTemp);\n\n//End Temperature Control Logic\nnewMsg = { payload: ccAction }\nflow.set(\"currentaction\", ccAction);\nreturn newMsg;\n//Air Condititioning Function\nfunction setSpeed(s, sM){\n    //Speed Setting\nswitch(speed) {\n  case \"Eco\":\n    // Eco\n    speedModifier = parseFloat(1);\n    break;\n  case \"420\":\n    // High\n    speedModifier = parseFloat(0.420);\n    break;\n  default:\n    // Normal\n    speedModifier = parseFloat(0.69);\n}\n   var one = Number(x);  //convert to a number\n   var two = Number(y);  //convert to a number\n   var result = one + two;\nreturn result;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":220,"wires":[[]]},{"id":"e6c4b03fffdeb866","type":"catch","z":"ac943ec51aa6c81e","name":"API Call Service Error Handler","scope":[],"uncaught":false,"x":140,"y":920,"wires":[["d10f973f0b085802"]]},{"id":"d10f973f0b085802","type":"debug","z":"ac943ec51aa6c81e","name":"API DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":350,"y":920,"wires":[]},{"id":"281b300ffa0cb524","type":"ui_audio","z":"ac943ec51aa6c81e","name":"ECHO","group":"d1451bcf710beab7","voice":"Yuri","always":true,"x":310,"y":400,"wires":[]},{"id":"64da29cea6790647","type":"inject","z":"ac943ec51aa6c81e","name":"MANUAL ECHO INPUT","props":[{"p":"payload"},{"p":"payload2","v":"INITIALIZING CERBERUS NETWORK","vt":"str"},{"p":"payload3","v":"s.h.d network activated","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"initializing ECHO-protocol","payloadType":"str","x":140,"y":400,"wires":[["281b300ffa0cb524"]]},{"id":"6bb7ed4a60f681f5","type":"http in","z":"ac943ec51aa6c81e","name":"[GET] entities","url":"/api/entities","method":"get","upload":false,"swaggerDoc":"","x":90,"y":40,"wires":[["f5e0773ae8bc5b34"]],"info":"Get a global variable via node-red"},{"id":"f5e0773ae8bc5b34","type":"function","z":"ac943ec51aa6c81e","name":"[GET] Entities Request Handler","func":"// get_entities_request_handler (v1)\n// API Request Handler for retrieving entities via their entity id.\n//\n// Note: Entities are gotten via the homeassistant global context for now.\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.req.query.entity_id  : entity_id\n//\n// -*- OUTPUTS -*-\n// msg.payload              : response object {response_code,message}\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = {};\nvar homeassistant = global.get(\"homeassistant\");\nvar states = homeassistant.homeAssistant.states;\n\n// Entity id,provided in the query parameters\nvar entity_id = msg.req.query.entity_id;\n\n// If no entity id is passed, return entire object\nif (!entity_id) {\n    msg.payload.homeassistant = homeassistant;\n    return msg;\n}\n\n// Check for missing entity id\nif (!entity_id) {\n    var error_message = \"Missing entity_id\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(404, error_message);\n    return msg;\n}\n\nvar entity_data = states[entity_id];\n\n// Check if entity doesnt exist\nif (!entity_data && entity_data !== 0) {\n    var error_message = \"Entity (\" + entity_id + \") not found.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(404, error_message);\n    return msg;\n}\n\nnode.warn(entity_id);\nnode.warn(entity_data);\n\n// Ensure that 0 is considered as data\nif (entity_data || entity_data === 0) {\n    msg.payload = utils.createResponseObject(200, entity_data);\n    return msg;\n}\n\n// All other errors\nvar error_message = \"Unhandled Exception.\";\nnode.warn(error_message);\nmsg.payload = utils.createResponseObject(404, error_message);\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":40,"wires":[["117ef9a698b2687a"]]},{"id":"aba8bc2d192f8830","type":"http in","z":"ac943ec51aa6c81e","name":"[GET] context","url":"/api/context","method":"get","upload":false,"swaggerDoc":"","x":90,"y":200,"wires":[["7057cdac2cb247fa"]],"info":"Get a global variable via node-red"},{"id":"7057cdac2cb247fa","type":"function","z":"ac943ec51aa6c81e","name":"[GET] Context Request Handler","func":"// get_context_request_handler (v1)\n// API Request Handler for retrieving context data. \n// ******************************************************************\n// -*- INPUTS -*-\n// msg.req.query.id         : context_id\n//\n// -*- OUTPUTS -*-\n// msg.payload              : response object {response_code,message}\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = {};\nvar homeassistant = global.get(\"homeassistant\");\nvar states = homeassistant.homeAssistant.states;\n\n// Get context id from request parameter 'id'\nvar context_id = msg.req.query.id;\n\n// Check for missing context id\nif (!context_id) {\n    var error_message = \"Missing context id\";\n    msg.payload = utils.createResponseObject(404, error_message);\n    msg.statusCode = 404;\n    return msg;\n}\n\nvar context_data = global.get(context_id);\n\n// Check if context doesn't exist\nif (!context_data && context_data !== 0) {\n    var error_message = \"Context (\" + context_id + \") not found.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(404, error_message);\n    msg.statusCode = 404;\n    return msg;\n}\n\n// Ensure that 0 is considered as data\nif (context_data || context_data === 0) {\n    msg.payload = utils.createResponseObject(200, context_data);\n    msg.statusCode = 200;\n    return msg;\n}\n\n// All other errors\nvar error_message = \"Unhandled Exception.\";\nnode.warn(error_message);\nmsg.payload = utils.createResponseObject(404, error_message);\nmsg.statusCode = 404;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":200,"wires":[["9995af0945384725"]]},{"id":"9995af0945384725","type":"subflow:886885a440f0f2a6","z":"ac943ec51aa6c81e","name":"","x":540,"y":200,"wires":[]},{"id":"117ef9a698b2687a","type":"subflow:886885a440f0f2a6","z":"ac943ec51aa6c81e","name":"","x":540,"y":40,"wires":[]},{"id":"1fbfb127bcac3937","type":"http in","z":"ac943ec51aa6c81e","name":"[POST] callservice","url":"/api/callservice","method":"post","upload":false,"swaggerDoc":"","x":110,"y":320,"wires":[["31c3da7b3fc4c90d"]],"info":"Get a global variable via node-red"},{"id":"31c3da7b3fc4c90d","type":"function","z":"ac943ec51aa6c81e","name":"[POST] Call-Service Request Handler","func":"// post_call_service_request\n// API Request Handler for calling a service.\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload              : request JSON object\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = {};\n\n// Extract request body to a separate variable\nvar requestBody = msg.req.body;\n\n// Check if request body is available\nif (!requestBody) {\n    // Request body is missing\n    var error_message = \"Missing request body.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(400, error_message);\n    msg.statusCode = 400;\n    return [null, msg];\n}\n\n// Check if required properties are present\nif (!requestBody.domain || !requestBody.service) {\n    // Missing required properties\n    var error_message = \"Missing required properties in the request body.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(400, error_message);\n    msg.statusCode = 400;\n    return [null, msg];\n}\n\n// Request body is valid\npayload = requestBody;\nmsg.payload = payload;\nreturn [msg, null];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":320,"wires":[["db0308e1d31d0cb2"],["1024b3071848c6bd"]]},{"id":"1024b3071848c6bd","type":"subflow:886885a440f0f2a6","z":"ac943ec51aa6c81e","name":"","x":1200,"y":320,"wires":[]},{"id":"db0308e1d31d0cb2","type":"api-call-service","z":"ac943ec51aa6c81e","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"","service":"","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":630,"y":280,"wires":[["71ebd6ec122c8200"]]},{"id":"71ebd6ec122c8200","type":"function","z":"ac943ec51aa6c81e","name":"[POST] Create Call-Service Request Response","func":"// post_create_call_service_request_response\n// API Request Handler for retrieving system uptime/integrity data. \n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload              : response object {response_code,data}\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = utils.createResponseObject(200, msg.payload);\nmsg.statusCode = 200;\nmsg.payload = payload;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":280,"wires":[["1024b3071848c6bd"]]},{"id":"02191916195d9fdd","type":"http in","z":"ac943ec51aa6c81e","name":"[POST] echo","url":"/api/echo","method":"post","upload":false,"swaggerDoc":"","x":90,"y":460,"wires":[["73a3dccb099894f7"]],"info":"Get a global variable via node-red"},{"id":"73a3dccb099894f7","type":"function","z":"ac943ec51aa6c81e","name":"[POST] Echo Request Handler","func":"// post_echo_request\n// API Request Handler for echo protocol.\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload              : request JSON object\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = {};\n\n// Extract request body to a separate variable\nvar requestBody = msg.req.body;\n\n// Check if request body is available\nif (!requestBody) {\n    // Request body is missing\n    var error_message = \"Missing request body.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(400, error_message);\n    msg.statusCode = 400;\n    return [null, msg];\n}\n\n// Check if required properties are present\nif (!requestBody.person || !requestBody.message) {\n    // Missing required properties\n    var error_message = \"Missing required properties in the request body.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(400, error_message);\n    msg.statusCode = 400;\n    return [null, msg];\n}\n\n// Request body is valid, play message\nmsg.payload = requestBody.message;\nmsg.statusCode=200\nreturn [msg, null];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":460,"wires":[["c2db2e7946dee6d6","269652b54867efeb"],["c9b399e9cae87ff4"]]},{"id":"c2db2e7946dee6d6","type":"ui_audio","z":"ac943ec51aa6c81e","name":"ECHO","group":"d1451bcf710beab7","voice":"Google UK English Female","always":true,"x":550,"y":440,"wires":[]},{"id":"c9b399e9cae87ff4","type":"subflow:886885a440f0f2a6","z":"ac943ec51aa6c81e","name":"","x":940,"y":460,"wires":[]},{"id":"269652b54867efeb","type":"function","z":"ac943ec51aa6c81e","name":"[POST] Create Echo Request Response","func":"// post_create_call_service_request_response\n// API Request Handler for retrieving system uptime/integrity data. \n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload              : response object {response_code,data}\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = utils.createResponseObject(200, msg.payload);\nmsg.statusCode = 200;\nmsg.payload = payload;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":400,"wires":[["c9b399e9cae87ff4"]]},{"id":"c2142a44cf6ab861","type":"api-current-state","z":"ac943ec51aa6c81e","name":"","server":"5e6a682a.ce8468","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":660,"y":120,"wires":[["fef45459701d5760"]]},{"id":"5cb1bd1330e035c3","type":"http in","z":"ac943ec51aa6c81e","name":"[GET] entities/currentstate","url":"/api/entities/currentstate","method":"get","upload":false,"swaggerDoc":"","x":130,"y":120,"wires":[["b9080d3da8c97b42"]],"info":"Get a global variable via node-red"},{"id":"b9080d3da8c97b42","type":"function","z":"ac943ec51aa6c81e","name":"[GET] Current-State Request Handler","func":"// get_current_state_request_handler\n// Request Handler for retrieving an entity state via its entity id.\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.req.query.entity_id     : entity_domain\n// msg.req.query.id         : entity_id\n//\n// -*- OUTPUTS -*-\n// msg.payload              : response object {response_code,message}\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = {};\n\n// Entity id provided in the query parameters\nvar entity_id = msg.req.query.entity_id;\n\n// Check for missing entity id\nif (!entity_id) {\n    var error_message = \"Missing entity id\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(404, error_message);\n    return msg;\n}\n\nnode.warn(entity_id);\n\n// Pass entity id to service call\nmsg.payload.entityId = entity_id;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":120,"wires":[["c2142a44cf6ab861"]]},{"id":"fef45459701d5760","type":"function","z":"ac943ec51aa6c81e","name":"[GET] Create Current-State Request Response","func":"// post_create_current_state_request_response\n// Request Response Handler for returning an entity state.\n// ******************************************************************\n// -*- INPUTS -*-\n// msg.payload              : entity_state\n// -*- OUTPUTS -*-\n// msg.payload              : response object {response_code,data}\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nmsg.payload = utils.createResponseObject(200, msg.payload);\nmsg.statusCode = 200;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":120,"wires":[["c7ad958d4aab6585"]]},{"id":"c7ad958d4aab6585","type":"subflow:886885a440f0f2a6","z":"ac943ec51aa6c81e","name":"","x":1220,"y":120,"wires":[]},{"id":"b5b8726ebe7fe742","type":"api-call-service","z":"ac943ec51aa6c81e","name":"Asist","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"conversation","service":"process","areaId":[],"deviceId":[],"entityId":[],"data":"{\t   \"text\":\"Turn on the belcave spotlights\",\t   \"language\":\"en\",\t   \"agent_id\":\"homeassistant\"\t}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":270,"y":840,"wires":[["cfeff3bbf41ce427"]]},{"id":"6b28d51f8b4d64eb","type":"inject","z":"ac943ec51aa6c81e","name":"","props":[{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":90,"y":840,"wires":[["b5b8726ebe7fe742"]]},{"id":"cfeff3bbf41ce427","type":"debug","z":"ac943ec51aa6c81e","name":"debug 14","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":560,"y":840,"wires":[]},{"id":"8b731739675a99db","type":"http in","z":"ac943ec51aa6c81e","name":"[POST] assist","url":"/api/assist","method":"post","upload":false,"swaggerDoc":"","x":90,"y":620,"wires":[["5e5eed4a677726b9","eff13a6c8927338d"]],"info":"Get a global variable via node-red"},{"id":"5e5eed4a677726b9","type":"function","z":"ac943ec51aa6c81e","name":"[POST] Assist API Request Handler","func":"// post_assist_request\n// API Request Handler for assist intergration.\n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload              : request JSON object\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = {};\n\n// Extract request body to a separate variable\nvar requestBody = msg.req.body;\n\n// Check if request body is available\nif (!requestBody) {\n    // Request body is missing\n    var error_message = \"Missing request body.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(400, error_message);\n    msg.statusCode = 400;\n    return [null, msg];\n}\n\n// Check if required properties are present\nif (!requestBody.text || !requestBody.language || !requestBody.agent_id) {\n    // Missing required properties\n    var error_message = \"Missing required properties in the request body.\";\n    node.warn(error_message);\n    msg.payload = utils.createResponseObject(400, error_message);\n    msg.statusCode = 400;\n    return [null, msg];\n}\n\n// Request body is valid, process message\nmsg.payload = requestBody;\nmsg.statusCode=200\nreturn [msg, null];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":620,"wires":[["940a6d4c6381ab10"],["c8c8ab43e676bf02"]]},{"id":"c8c8ab43e676bf02","type":"subflow:886885a440f0f2a6","z":"ac943ec51aa6c81e","name":"","x":1060,"y":620,"wires":[]},{"id":"a04d229614e6c902","type":"function","z":"ac943ec51aa6c81e","name":"[POST] Create Assist Request Response","func":"// post_create_call_service_request_response\n// API Request Handler for retrieving system uptime/integrity data. \n// ******************************************************************\n// -*- INPUTS -*-\n//\n// -*- OUTPUTS -*-\n// msg.payload              : response object {response_code,data}\n// ******************************************************************\nvar utils = global.get(\"utils\");\n\nvar payload = utils.createResponseObject(200, msg.payload);\nmsg.statusCode = 200;\nmsg.payload = payload;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":580,"wires":[["c8c8ab43e676bf02"]]},{"id":"940a6d4c6381ab10","type":"api-call-service","z":"ac943ec51aa6c81e","name":"assist","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"conversation","service":"process","areaId":[],"deviceId":[],"entityId":[],"data":"{\"text\":\"Turn all lights on\",\"language\":\"NL\",\"agent_id\":\"homeassistant\"}","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":550,"y":580,"wires":[["a04d229614e6c902"]]},{"id":"eff13a6c8927338d","type":"debug","z":"ac943ec51aa6c81e","name":"debug 15","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":240,"y":680,"wires":[]},{"id":"31493a7118d88d27","type":"inject","z":"ac943ec51aa6c81e","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"domain\":\"conversation\",\"service\":\"process\",\"data\":{\"text\":\"Turn on the belcave spotlights\",\"language\":\"en\",\"agent_id\":\"homeassistant\"}}","payloadType":"json","x":670,"y":760,"wires":[["b1021b963c2c8b4a"]]},{"id":"b1021b963c2c8b4a","type":"api-call-service","z":"ac943ec51aa6c81e","name":"","server":"5e6a682a.ce8468","version":5,"debugenabled":false,"domain":"","service":"","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":850,"y":760,"wires":[[]]},{"id":"6dc69356b935ead6","type":"ha-api","z":"ac943ec51aa6c81e","name":"[POST] heartbeat","server":"5e6a682a.ce8468","version":1,"debugenabled":false,"protocol":"http","method":"post","path":"","data":"","dataType":"json","responseType":"json","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"results"}],"x":250,"y":740,"wires":[["52e7b7259d64c099"]]},{"id":"5ab4589b50bdd772","type":"inject","z":"ac943ec51aa6c81e","name":"Heartbeat","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"protocol\":\"http\",\"method\":\"post\",\"path\":\"\",\"data\":{\"status\":\"alive\"}}","payloadType":"json","x":80,"y":740,"wires":[["6dc69356b935ead6"]]},{"id":"52e7b7259d64c099","type":"debug","z":"ac943ec51aa6c81e","name":"HEARTBEAT","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":430,"y":740,"wires":[]}]